ELITISM 5
EVALUATOR_DRAFTS 10
EVALUATOR_ROUNDS 10
EVOLUTION_DRAFTS 10
EVOLUTION_ROUNDS 10
GENERATIONS 50
POPULATION 50
MUTATION_RATE 0.05
BinaryTreeIndividual (old)

generation   1: 25.73s // best: BinaryTreeIndividual { card_node: FeatureAttack, state_node: FeatureMeRune }
generation   2: 25.66s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasGuard, FeatureAttack), state_node: OperatorAdd(OperatorSub(FeatureMeRune, FeatureMeMaxMana), FeatureMeHealth) }
generation   3: 13.18s // best: BinaryTreeIndividual { card_node: OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(Literal(0.4553926), Literal(0.37493038))), FeatureAttack), state_node: FeatureMeRune }
generation   4: 11.90s // best: BinaryTreeIndividual { card_node: OperatorMul(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(Literal(0.4553926), Literal(0.37493038))), FeatureAttack), FeatureAttack), state_node: OperatorAdd(OperatorSub(FeatureMeRune, FeatureMeRune), FeatureMeHealth) }
generation   5: 11.94s // best: BinaryTreeIndividual { card_node: OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(Literal(0.4553926), Literal(0.37493038))), FeatureAttack), state_node: FeatureMeRune }
generation   6: 14.28s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(Literal(0.4553926), Literal(0.37493038))), FeatureAttack), FeatureAttack), state_node: OperatorSub(FeatureMeRune, FeatureMeRune) }
generation   7: 13.34s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureHasBreakthrough, Literal(0.37493038))), FeatureAttack))), state_node: OperatorMul(FeatureMeMaxMana, FeatureMeRune) }
generation   8: 17.99s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureHasBreakthrough, Literal(0.37493038))), FeatureAttack))), state_node: OperatorMul(FeatureMeMaxMana, FeatureMeRune) }
generation   9: 16.72s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(OperatorMul(Literal(0.2451334), FeatureDefense), OperatorMax(OperatorMax(FeatureHasWard, Literal(0.06258726)), OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(OperatorSub(FeatureHasWard, OperatorMin(OperatorMin(OperatorSub(FeatureHasBreakthrough, FeatureHasCharge), Literal(0.55936575)), FeatureHasCharge)), FeatureDefense)), FeatureHasBreakthrough))), FeatureHasDrain), FeatureDefense), FeatureHasLethal), FeatureAttack), state_node: FeatureMeRune }
generation  10: 17.21s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasDrain, FeatureHasDrain), FeatureHasGuard), FeatureAttack))), state_node: OperatorMul(FeatureMeMaxMana, FeatureOpDecksize) }
generation  11: 17.91s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureHasBreakthrough, Literal(0.37493038))), FeatureAttack))), state_node: OperatorSub(FeatureOpDecksize, FeatureOpCurrentMana) }
generation  12: 20.87s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasDrain, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureHasBreakthrough, Literal(0.37493038))), FeatureAttack))), state_node: FeatureMeRune }
generation  13: 19.74s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureHasBreakthrough, Literal(0.37493038))), FeatureAttack))), state_node: OperatorSub(FeatureOpDecksize, FeatureOpCurrentMana) }
generation  14: 21.14s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasDrain, FeatureHasDrain), FeatureHasGuard), FeatureAttack))), state_node: OperatorMul(FeatureMeMaxMana, FeatureOpCurrentMana) }
generation  15: 24.93s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpDecksize }
generation  16: 26.31s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(OperatorMul(OperatorMul(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasDrain), FeatureDefense), FeatureHasLethal), Literal(-0.9533491)), OperatorMax(OperatorMax(FeatureHasWard, Literal(0.06258726)), OperatorAdd(OperatorMax(FeatureAttack, FeatureDefense), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureHasBreakthrough, Literal(0.37493038))), FeatureAttack))))), FeatureHasDrain), FeatureDefense), FeatureHasLethal), FeatureAttack), state_node: FeatureMeHealth }
generation  17: 26.66s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpDecksize }
generation  18: 23.12s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpDecksize }
generation  19: 22.18s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpDecksize }
generation  20: 24.11s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpDecksize }
generation  21: 22.96s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.06258726), OperatorMax(FeatureHasLethal, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard), FeatureAttack)))), state_node: FeatureMeRune }
generation  22: 25.93s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.06258726), OperatorMax(FeatureHasLethal, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard), FeatureAttack)))), state_node: FeatureMeRune }
generation  23: 26.38s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpDecksize }
generation  24: 27.63s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.06258726), OperatorMax(FeatureHasLethal, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureAttack)))), state_node: OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpCurrentMana), OperatorSub(FeatureMeRune, FeatureMeRune)) }
generation  25: 31.12s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.06258726), OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard), FeatureAttack)))), state_node: FeatureMeMaxMana }
generation  26: 27.00s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasLethal, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureAttack)))), state_node: OperatorSub(OperatorSub(FeatureMeRune, FeatureOpCurrentMana), OperatorSub(FeatureMeRune, FeatureMeRune)) }
generation  27: 40.75s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.06258726), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpCurrentMana), OperatorSub(FeatureMeRune, FeatureMeRune)) }
generation  28: 40.85s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.06258726), OperatorMax(FeatureHasLethal, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard), FeatureAttack)))), state_node: OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureMeRune), OperatorSub(FeatureMeRune, FeatureMeRune)) }
generation  29: 30.88s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.06258726), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureDefense), OperatorMul(OperatorMax(FeatureHasLethal, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard), FeatureAttack))), FeatureAttack)), FeatureAttack))), state_node: FeatureMeRune }
generation  30: 29.52s // best: BinaryTreeIndividual { card_node: OperatorAdd(Literal(0.37493038), OperatorMax(Literal(0.06258726), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureAttack)))), state_node: OperatorSub(FeatureMeRune, FeatureOpCurrentMana) }
generation  31: 31.87s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(OperatorSub(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasLethal, Literal(0.55936575)), OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureHasBreakthrough, OperatorMax(Literal(0.55936575), OperatorMul(OperatorAdd(FeatureDefense, FeatureHasGuard), FeatureAttack)))), FeatureAttack))), FeatureDefense)), FeatureHasBreakthrough))), OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasDrain, FeatureHasLethal)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureAttack)))), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(OperatorSub(FeatureMeRune, FeatureMeRune), OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpCurrentMana), FeatureMeMaxMana)) }
generation  32: 34.51s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(OperatorSub(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasLethal, Literal(0.55936575)), OperatorMul(OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard))), FeatureAttack))), FeatureDefense)), FeatureHasBreakthrough))), OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasDrain, FeatureHasLethal)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureAttack)))), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureMeRune), OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpCurrentMana), FeatureMeMaxMana)) }
generation  33: 31.46s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureHasBreakthrough, FeatureHasBreakthrough))), OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureDefense, FeatureHasLethal)), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureAttack, FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpCurrentMana }
generation  34: 34.62s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasLethal)), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureAttack, FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpMaxMana }
generation  35: 50.41s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(OperatorSub(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasLethal, Literal(0.55936575)), OperatorMul(OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard))), FeatureAttack))), FeatureDefense)), FeatureHasBreakthrough))), OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasDrain, FeatureHasLethal)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard))), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureMeDecksize, OperatorMax(FeatureMeNextTurnDraw, FeatureOpDecksize)), FeatureMeRune), FeatureMeMaxMana), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureMeRune, FeatureMeRune), OperatorSub(FeatureOpCurrentMana, OperatorSub(FeatureMeRune, FeatureOpCurrentMana))), FeatureOpCurrentMana), FeatureMeMaxMana)) }
generation  36: 56.14s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(OperatorSub(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasLethal, Literal(0.55936575)), OperatorMul(OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard))), FeatureAttack))), FeatureDefense)), FeatureHasBreakthrough))), FeatureHasCharge), OperatorMin(FeatureHasDrain, FeatureHasLethal)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), Literal(0.37493038)), FeatureHasGuard), FeatureHasLethal)))), FeatureHasGuard), FeatureAttack))), state_node: FeatureMeDecksize }
generation  37: 54.11s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(Literal(0.37493038), FeatureHasBreakthrough))), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureAttack, FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(FeatureOpCurrentMana, OperatorSub(FeatureMeRune, OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpMaxMana), FeatureMeMaxMana))) }
generation  38: 48.35s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(Literal(0.37493038), FeatureHasBreakthrough))), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureAttack, FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(FeatureOpCurrentMana, OperatorSub(FeatureMeRune, OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpMaxMana), FeatureMeMaxMana))) }
generation  39: 43.60s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMul(FeatureAttack, Literal(0.37493038)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasLethal, OperatorMin(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard))), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(OperatorSub(FeatureMeDecksize, FeatureOpCurrentMana), OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpCurrentMana), FeatureMeMaxMana)) }
generation  40: 55.29s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(OperatorSub(Literal(-0.82433176), OperatorMin(OperatorMin(FeatureHasLethal, Literal(0.55936575)), OperatorMul(OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(OperatorSub(FeatureHasWard, OperatorMin(FeatureHasWard, FeatureAttack)), FeatureDefense)), FeatureHasBreakthrough))), FeatureAttack))), FeatureDefense)), FeatureHasBreakthrough))), OperatorAdd(OperatorMin(FeatureHasDrain, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasDrain, FeatureHasLethal)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard))), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(OperatorMax(FeatureMeNextTurnDraw, FeatureOpDecksize), FeatureOpHealth) }
generation  41: 68.57s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, FeatureAttack), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureAttack, FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(FeatureOpCurrentMana, OperatorSub(FeatureMeRune, OperatorSub(OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpCurrentMana), FeatureOpMaxMana), FeatureMeMaxMana))) }
generation  42: 66.80s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, FeatureAttack), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureAttack, FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(FeatureOpCurrentMana, OperatorSub(FeatureMeRune, OperatorSub(OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpCurrentMana), FeatureOpMaxMana), FeatureMeMaxMana))) }
generation  43: 63.07s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, FeatureAttack), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureAttack, FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(FeatureOpCurrentMana, OperatorSub(FeatureMeRune, OperatorSub(OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpCurrentMana), FeatureOpMaxMana), FeatureMeMaxMana))) }
generation  44: 54.68s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, FeatureAttack), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureAttack, FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(FeatureOpCurrentMana, OperatorSub(FeatureMeRune, OperatorSub(OperatorSub(OperatorSub(FeatureOpCurrentMana, FeatureOpCurrentMana), FeatureOpMaxMana), FeatureMeMaxMana))) }
generation  45: 46.91s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(OperatorMax(FeatureHasGuard, OperatorMax(FeatureHasWard, OperatorMax(FeatureHasWard, FeatureAttack))), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack)), FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(OperatorSub(FeatureOpCurrentMana, OperatorSub(FeatureOpCurrentMana, OperatorSub(FeatureMeRune, OperatorSub(FeatureMeDecksize, FeatureMeMaxMana)))), OperatorSub(FeatureMeRune, OperatorSub(FeatureMeDecksize, FeatureOpDecksize))) }
generation  46: 48.33s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard)))), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard))))), FeatureHasGuard), FeatureHasLethal))), OperatorMin(FeatureHasDrain, FeatureHasLethal)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard))), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpMaxMana }
generation  47: 51.78s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, FeatureHasLethal), OperatorAdd(OperatorMin(OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureDefense, FeatureAttack), FeatureHasGuard), FeatureAttack)), FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, OperatorMin(FeatureHasWard, FeatureAttack))), OperatorMax(OperatorMul(FeatureAttack, Literal(0.37493038)), OperatorAdd(FeatureAttack, FeatureHasBreakthrough))), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, FeatureAttack), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(FeatureOpCurrentMana, FeatureOpDecksize) }
generation  48: 60.90s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard)))), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard))))), FeatureHasGuard), FeatureHasLethal))), OperatorMin(FeatureHasDrain, FeatureHasLethal)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard))), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpMaxMana }
generation  49: 55.19s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(OperatorMin(FeatureDefense, FeatureHasLethal), OperatorMax(FeatureHasWard, OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard))))), FeatureHasGuard), FeatureHasLethal))), OperatorMin(FeatureHasDrain, FeatureHasLethal)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard))), FeatureHasGuard), FeatureAttack))), state_node: OperatorSub(FeatureMeRune, FeatureMeRune) }
generation  50: 48.39s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorMax(OperatorAdd(OperatorMax(OperatorAdd(OperatorMax(FeatureHasWard, OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard)))), OperatorAdd(OperatorMin(FeatureAttack, FeatureDefense), FeatureHasGuard)), OperatorMin(FeatureHasWard, FeatureHasLethal)), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMax(FeatureHasWard, OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorMin(FeatureHasWard, Literal(0.37493038)), FeatureHasGuard), FeatureHasWard))))), FeatureHasGuard), FeatureHasLethal))), OperatorMin(FeatureHasDrain, FeatureHasLethal)), FeatureHasLethal), OperatorMax(FeatureHasLethal, OperatorMul(OperatorAdd(OperatorAdd(Literal(0.37493038), OperatorMax(FeatureHasWard, OperatorMin(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard))), FeatureHasGuard), FeatureAttack))), state_node: FeatureOpMaxMana }
------ 57.00% 65.00% 65.00% 67.00% 60.00% 47.00% 48.00% 54.00% 48.00% 45.00% 51.00% 42.00% 42.00% 43.00% 56.00% 48.00% 49.00% 43.00% 43.00% 49.00% 37.00% 47.00% 38.00% 40.00% 43.00% 33.00% 42.00% 40.00% 40.00% 54.00% 44.00% 48.00% 50.00% 42.00% 45.00% 54.00% 47.00% 33.00% 31.00% 49.00% 49.00% 43.00% 55.00% 56.00% 44.00% 47.00% 33.00% 43.00% 46.00% 46.84%
67.00% ------ 65.00% 62.00% 65.00% 64.00% 70.00% 60.00% 57.00% 63.00% 58.00% 56.00% 69.00% 66.00% 65.00% 46.00% 50.00% 61.00% 56.00% 63.00% 42.00% 51.00% 55.00% 57.00% 57.00% 51.00% 48.00% 39.00% 53.00% 58.00% 55.00% 53.00% 52.00% 51.00% 51.00% 48.00% 66.00% 56.00% 49.00% 54.00% 50.00% 54.00% 54.00% 52.00% 54.00% 43.00% 50.00% 45.00% 39.00% 36.00% 54.82%
63.00% 53.00% ------ 59.00% 67.00% 48.00% 70.00% 70.00% 52.00% 60.00% 59.00% 69.00% 57.00% 60.00% 56.00% 55.00% 58.00% 59.00% 65.00% 57.00% 64.00% 64.00% 56.00% 67.00% 65.00% 52.00% 58.00% 59.00% 65.00% 67.00% 53.00% 52.00% 34.00% 55.00% 42.00% 50.00% 48.00% 56.00% 51.00% 49.00% 44.00% 46.00% 55.00% 43.00% 47.00% 34.00% 46.00% 60.00% 44.00% 50.00% 55.37%
64.00% 57.00% 68.00% ------ 70.00% 65.00% 66.00% 68.00% 55.00% 74.00% 71.00% 61.00% 66.00% 69.00% 61.00% 53.00% 62.00% 65.00% 63.00% 68.00% 61.00% 58.00% 67.00% 57.00% 54.00% 64.00% 64.00% 55.00% 63.00% 49.00% 61.00% 61.00% 49.00% 51.00% 52.00% 53.00% 51.00% 50.00% 58.00% 53.00% 51.00% 53.00% 49.00% 55.00% 39.00% 53.00% 51.00% 49.00% 61.00% 60.00% 58.73%
58.00% 54.00% 58.00% 53.00% ------ 42.00% 64.00% 71.00% 55.00% 65.00% 62.00% 64.00% 60.00% 64.00% 52.00% 59.00% 64.00% 54.00% 64.00% 63.00% 56.00% 64.00% 56.00% 49.00% 70.00% 53.00% 59.00% 63.00% 66.00% 65.00% 55.00% 58.00% 39.00% 42.00% 52.00% 52.00% 36.00% 48.00% 56.00% 60.00% 47.00% 39.00% 41.00% 38.00% 46.00% 44.00% 41.00% 38.00% 46.00% 52.00% 54.22%
67.00% 63.00% 78.00% 63.00% 72.00% ------ 66.00% 65.00% 63.00% 71.00% 67.00% 72.00% 64.00% 71.00% 59.00% 64.00% 66.00% 74.00% 71.00% 63.00% 70.00% 58.00% 63.00% 60.00% 49.00% 50.00% 63.00% 65.00% 57.00% 56.00% 66.00% 67.00% 61.00% 48.00% 62.00% 58.00% 63.00% 57.00% 60.00% 55.00% 49.00% 57.00% 47.00% 59.00% 61.00% 59.00% 49.00% 52.00% 50.00% 55.00% 61.33%
75.00% 53.00% 58.00% 48.00% 58.00% 54.00% ------ 53.00% 64.00% 63.00% 53.00% 55.00% 54.00% 60.00% 55.00% 57.00% 56.00% 62.00% 56.00% 55.00% 59.00% 56.00% 56.00% 55.00% 50.00% 56.00% 63.00% 49.00% 69.00% 61.00% 49.00% 46.00% 42.00% 37.00% 47.00% 45.00% 49.00% 48.00% 45.00% 47.00% 51.00% 30.00% 46.00% 40.00% 39.00% 44.00% 43.00% 39.00% 53.00% 41.00% 51.92%
67.00% 60.00% 57.00% 58.00% 63.00% 55.00% 58.00% ------ 56.00% 60.00% 60.00% 62.00% 57.00% 52.00% 61.00% 58.00% 51.00% 62.00% 61.00% 55.00% 59.00% 55.00% 45.00% 54.00% 61.00% 57.00% 59.00% 66.00% 58.00% 58.00% 52.00% 49.00% 39.00% 43.00% 41.00% 49.00% 42.00% 50.00% 47.00% 46.00% 38.00% 34.00% 45.00% 38.00% 48.00% 34.00% 33.00% 39.00% 36.00% 43.00% 51.65%
73.00% 69.00% 71.00% 66.00% 66.00% 56.00% 51.00% 57.00% ------ 48.00% 51.00% 53.00% 71.00% 55.00% 59.00% 59.00% 56.00% 49.00% 50.00% 48.00% 44.00% 47.00% 53.00% 45.00% 36.00% 46.00% 37.00% 45.00% 49.00% 46.00% 55.00% 59.00% 59.00% 58.00% 52.00% 50.00% 67.00% 64.00% 57.00% 53.00% 64.00% 65.00% 67.00% 57.00% 58.00% 47.00% 51.00% 44.00% 48.00% 46.00% 54.63%
71.00% 63.00% 50.00% 46.00% 48.00% 48.00% 43.00% 53.00% 59.00% ------ 55.00% 51.00% 50.00% 57.00% 56.00% 60.00% 50.00% 51.00% 52.00% 53.00% 56.00% 51.00% 49.00% 48.00% 61.00% 54.00% 65.00% 53.00% 69.00% 56.00% 50.00% 44.00% 42.00% 41.00% 39.00% 47.00% 44.00% 38.00% 48.00% 52.00% 26.00% 34.00% 41.00% 40.00% 33.00% 34.00% 30.00% 36.00% 42.00% 40.00% 48.55%
66.00% 49.00% 63.00% 51.00% 56.00% 49.00% 53.00% 62.00% 52.00% 51.00% ------ 67.00% 59.00% 58.00% 59.00% 61.00% 49.00% 57.00% 64.00% 56.00% 63.00% 65.00% 66.00% 50.00% 65.00% 60.00% 56.00% 57.00% 67.00% 56.00% 51.00% 47.00% 41.00% 43.00% 41.00% 48.00% 32.00% 53.00% 57.00% 50.00% 46.00% 39.00% 47.00% 39.00% 42.00% 38.00% 28.00% 43.00% 49.00% 42.00% 52.31%
70.00% 55.00% 48.00% 51.00% 60.00% 57.00% 56.00% 62.00% 58.00% 59.00% 52.00% ------ 41.00% 56.00% 52.00% 56.00% 51.00% 47.00% 56.00% 51.00% 65.00% 57.00% 55.00% 49.00% 56.00% 50.00% 54.00% 53.00% 71.00% 58.00% 44.00% 52.00% 38.00% 38.00% 49.00% 43.00% 39.00% 45.00% 53.00% 57.00% 41.00% 39.00% 41.00% 40.00% 41.00% 38.00% 31.00% 35.00% 43.00% 39.00% 50.04%
68.00% 59.00% 51.00% 59.00% 59.00% 44.00% 58.00% 55.00% 61.00% 62.00% 52.00% 55.00% ------ 57.00% 56.00% 55.00% 62.00% 54.00% 58.00% 64.00% 59.00% 55.00% 60.00% 59.00% 62.00% 57.00% 63.00% 55.00% 61.00% 59.00% 55.00% 48.00% 39.00% 38.00% 44.00% 42.00% 44.00% 44.00% 46.00% 56.00% 43.00% 43.00% 31.00% 43.00% 45.00% 37.00% 37.00% 45.00% 42.00% 45.00% 51.96%
69.00% 64.00% 59.00% 59.00% 50.00% 50.00% 50.00% 50.00% 64.00% 42.00% 54.00% 49.00% 50.00% ------ 50.00% 71.00% 56.00% 60.00% 49.00% 54.00% 55.00% 55.00% 57.00% 56.00% 62.00% 60.00% 63.00% 53.00% 71.00% 54.00% 40.00% 54.00% 42.00% 41.00% 46.00% 43.00% 37.00% 40.00% 48.00% 61.00% 33.00% 39.00% 44.00% 38.00% 45.00% 35.00% 25.00% 42.00% 39.00% 41.00% 50.39%
72.00% 51.00% 58.00% 57.00% 57.00% 63.00% 57.00% 55.00% 64.00% 58.00% 38.00% 48.00% 58.00% 55.00% ------ 60.00% 58.00% 47.00% 52.00% 52.00% 52.00% 59.00% 45.00% 46.00% 56.00% 54.00% 65.00% 61.00% 67.00% 51.00% 44.00% 54.00% 48.00% 44.00% 45.00% 53.00% 46.00% 49.00% 55.00% 52.00% 37.00% 46.00% 38.00% 42.00% 38.00% 40.00% 33.00% 44.00% 43.00% 42.00% 51.20%
60.00% 63.00% 59.00% 70.00% 63.00% 64.00% 67.00% 62.00% 63.00% 60.00% 53.00% 60.00% 55.00% 47.00% 58.00% ------ 58.00% 57.00% 63.00% 55.00% 45.00% 42.00% 48.00% 53.00% 44.00% 44.00% 49.00% 40.00% 37.00% 41.00% 48.00% 54.00% 54.00% 47.00% 58.00% 56.00% 58.00% 60.00% 58.00% 42.00% 56.00% 60.00% 61.00% 61.00% 55.00% 49.00% 54.00% 49.00% 44.00% 51.00% 54.18%
67.00% 67.00% 58.00% 57.00% 66.00% 55.00% 51.00% 53.00% 64.00% 54.00% 51.00% 59.00% 64.00% 43.00% 56.00% 63.00% ------ 51.00% 52.00% 48.00% 57.00% 62.00% 53.00% 61.00% 58.00% 54.00% 55.00% 57.00% 66.00% 50.00% 41.00% 45.00% 43.00% 54.00% 50.00% 42.00% 42.00% 45.00% 43.00% 52.00% 34.00% 40.00% 39.00% 39.00% 41.00% 38.00% 34.00% 38.00% 42.00% 42.00% 50.94%
71.00% 59.00% 48.00% 54.00% 52.00% 54.00% 52.00% 56.00% 61.00% 51.00% 54.00% 57.00% 47.00% 49.00% 55.00% 69.00% 50.00% ------ 55.00% 49.00% 53.00% 60.00% 55.00% 57.00% 59.00% 62.00% 58.00% 53.00% 69.00% 51.00% 51.00% 48.00% 45.00% 36.00% 47.00% 49.00% 50.00% 51.00% 45.00% 53.00% 45.00% 38.00% 40.00% 51.00% 39.00% 48.00% 36.00% 40.00% 43.00% 40.00% 51.33%
63.00% 63.00% 48.00% 51.00% 67.00% 56.00% 51.00% 66.00% 58.00% 41.00% 54.00% 54.00% 48.00% 53.00% 46.00% 59.00% 45.00% 52.00% ------ 52.00% 63.00% 61.00% 48.00% 50.00% 55.00% 61.00% 54.00% 54.00% 74.00% 65.00% 49.00% 54.00% 34.00% 37.00% 44.00% 48.00% 43.00% 54.00% 44.00% 50.00% 44.00% 42.00% 48.00% 43.00% 40.00% 39.00% 32.00% 48.00% 42.00% 39.00% 50.73%
76.00% 58.00% 48.00% 55.00% 58.00% 49.00% 47.00% 57.00% 70.00% 54.00% 51.00% 65.00% 42.00% 65.00% 49.00% 60.00% 44.00% 57.00% 55.00% ------ 62.00% 54.00% 50.00% 56.00% 61.00% 53.00% 57.00% 62.00% 72.00% 52.00% 45.00% 49.00% 42.00% 42.00% 48.00% 43.00% 55.00% 45.00% 44.00% 58.00% 49.00% 45.00% 40.00% 40.00% 34.00% 41.00% 40.00% 51.00% 45.00% 46.00% 51.86%
80.00% 74.00% 54.00% 57.00% 51.00% 58.00% 61.00% 46.00% 69.00% 50.00% 57.00% 58.00% 51.00% 50.00% 54.00% 72.00% 57.00% 53.00% 52.00% 59.00% ------ 51.00% 51.00% 56.00% 46.00% 57.00% 52.00% 58.00% 63.00% 67.00% 48.00% 46.00% 48.00% 46.00% 37.00% 47.00% 55.00% 45.00% 52.00% 47.00% 46.00% 48.00% 47.00% 41.00% 51.00% 35.00% 41.00% 39.00% 39.00% 33.00% 52.14%
75.00% 62.00% 54.00% 67.00% 57.00% 58.00% 53.00% 58.00% 72.00% 45.00% 53.00% 58.00% 65.00% 55.00% 55.00% 66.00% 43.00% 58.00% 47.00% 53.00% 52.00% ------ 54.00% 59.00% 55.00% 48.00% 54.00% 50.00% 55.00% 58.00% 40.00% 61.00% 57.00% 46.00% 39.00% 53.00% 45.00% 50.00% 41.00% 44.00% 43.00% 42.00% 44.00% 38.00% 49.00% 31.00% 30.00% 36.00% 38.00% 33.00% 51.00%
63.00% 62.00% 59.00% 49.00% 64.00% 56.00% 55.00% 56.00% 62.00% 47.00% 50.00% 53.00% 56.00% 56.00% 57.00% 63.00% 49.00% 57.00% 55.00% 49.00% 61.00% 52.00% ------ 50.00% 64.00% 52.00% 49.00% 60.00% 66.00% 65.00% 54.00% 44.00% 42.00% 46.00% 54.00% 48.00% 55.00% 43.00% 44.00% 54.00% 41.00% 46.00% 36.00% 44.00% 47.00% 37.00% 33.00% 40.00% 34.00% 39.00% 51.39%
78.00% 67.00% 67.00% 60.00% 59.00% 51.00% 54.00% 57.00% 72.00% 59.00% 61.00% 63.00% 63.00% 55.00% 47.00% 65.00% 62.00% 60.00% 54.00% 50.00% 54.00% 49.00% 51.00% ------ 52.00% 61.00% 48.00% 47.00% 61.00% 72.00% 48.00% 55.00% 42.00% 45.00% 35.00% 45.00% 45.00% 53.00% 46.00% 55.00% 43.00% 49.00% 36.00% 42.00% 51.00% 35.00% 35.00% 37.00% 34.00% 38.00% 52.41%
78.00% 62.00% 59.00% 63.00% 56.00% 60.00% 48.00% 62.00% 68.00% 54.00% 57.00% 45.00% 47.00% 53.00% 47.00% 73.00% 51.00% 58.00% 48.00% 47.00% 42.00% 54.00% 52.00% 53.00% ------ 52.00% 52.00% 54.00% 52.00% 58.00% 47.00% 47.00% 49.00% 46.00% 48.00% 53.00% 53.00% 49.00% 55.00% 56.00% 52.00% 46.00% 57.00% 54.00% 47.00% 38.00% 47.00% 38.00% 43.00% 47.00% 52.59%
78.00% 60.00% 65.00% 56.00% 63.00% 58.00% 60.00% 71.00% 68.00% 60.00% 58.00% 65.00% 53.00% 55.00% 55.00% 71.00% 58.00% 61.00% 61.00% 53.00% 49.00% 54.00% 48.00% 58.00% 68.00% ------ 63.00% 49.00% 54.00% 58.00% 44.00% 42.00% 38.00% 44.00% 33.00% 46.00% 49.00% 52.00% 48.00% 42.00% 44.00% 51.00% 51.00% 46.00% 41.00% 34.00% 43.00% 45.00% 37.00% 37.00% 53.00%
79.00% 68.00% 54.00% 61.00% 56.00% 66.00% 54.00% 53.00% 69.00% 55.00% 42.00% 63.00% 56.00% 55.00% 52.00% 60.00% 55.00% 49.00% 55.00% 51.00% 61.00% 56.00% 53.00% 54.00% 56.00% 47.00% ------ 42.00% 62.00% 46.00% 51.00% 55.00% 47.00% 48.00% 45.00% 48.00% 61.00% 51.00% 54.00% 46.00% 49.00% 47.00% 41.00% 41.00% 42.00% 43.00% 33.00% 39.00% 42.00% 35.00% 52.00%
83.00% 65.00% 56.00% 70.00% 53.00% 73.00% 57.00% 57.00% 73.00% 58.00% 63.00% 60.00% 55.00% 58.00% 52.00% 67.00% 50.00% 45.00% 48.00% 57.00% 59.00% 49.00% 55.00% 49.00% 57.00% 64.00% 49.00% ------ 57.00% 54.00% 55.00% 44.00% 49.00% 34.00% 38.00% 48.00% 45.00% 55.00% 46.00% 47.00% 39.00% 55.00% 39.00% 55.00% 52.00% 41.00% 34.00% 44.00% 46.00% 32.00% 52.88%
79.00% 72.00% 52.00% 61.00% 56.00% 58.00% 56.00% 44.00% 64.00% 38.00% 44.00% 50.00% 49.00% 50.00% 42.00% 61.00% 34.00% 48.00% 36.00% 50.00% 53.00% 59.00% 48.00% 54.00% 52.00% 54.00% 52.00% 60.00% ------ 51.00% 51.00% 50.00% 51.00% 46.00% 44.00% 44.00% 55.00% 47.00% 57.00% 41.00% 45.00% 48.00% 48.00% 47.00% 41.00% 35.00% 48.00% 40.00% 33.00% 36.00% 49.67%
77.00% 73.00% 62.00% 57.00% 66.00% 56.00% 46.00% 62.00% 72.00% 57.00% 68.00% 66.00% 58.00% 62.00% 58.00% 70.00% 55.00% 64.00% 55.00% 64.00% 53.00% 51.00% 61.00% 64.00% 64.00% 53.00% 50.00% 54.00% 53.00% ------ 46.00% 60.00% 48.00% 47.00% 51.00% 53.00% 52.00% 50.00% 55.00% 44.00% 45.00% 44.00% 50.00% 49.00% 51.00% 42.00% 40.00% 39.00% 44.00% 43.00% 55.18%
78.00% 72.00% 70.00% 69.00% 57.00% 63.00% 63.00% 65.00% 68.00% 72.00% 67.00% 61.00% 66.00% 59.00% 68.00% 69.00% 57.00% 61.00% 69.00% 68.00% 63.00% 53.00% 69.00% 66.00% 63.00% 62.00% 57.00% 67.00% 69.00% 60.00% ------ 63.00% 52.00% 54.00% 47.00% 59.00% 50.00% 63.00% 70.00% 58.00% 36.00% 55.00% 48.00% 47.00% 41.00% 51.00% 40.00% 45.00% 49.00% 43.00% 59.63%
74.00% 61.00% 63.00% 63.00% 62.00% 59.00% 66.00% 66.00% 69.00% 71.00% 70.00% 74.00% 63.00% 72.00% 69.00% 62.00% 55.00% 61.00% 71.00% 66.00% 66.00% 71.00% 66.00% 64.00% 69.00% 68.00% 62.00% 58.00% 70.00% 67.00% 59.00% ------ 46.00% 53.00% 54.00% 60.00% 50.00% 59.00% 65.00% 48.00% 48.00% 48.00% 44.00% 38.00% 50.00% 46.00% 40.00% 44.00% 46.00% 46.00% 59.63%
73.00% 70.00% 74.00% 77.00% 77.00% 63.00% 64.00% 70.00% 56.00% 80.00% 76.00% 77.00% 68.00% 76.00% 69.00% 71.00% 70.00% 74.00% 69.00% 75.00% 68.00% 70.00% 67.00% 68.00% 70.00% 68.00% 67.00% 64.00% 73.00% 65.00% 74.00% 66.00% ------ 65.00% 58.00% 73.00% 75.00% 68.00% 73.00% 67.00% 66.00% 64.00% 63.00% 57.00% 58.00% 52.00% 57.00% 58.00% 56.00% 55.00% 67.63%
71.00% 73.00% 68.00% 72.00% 82.00% 69.00% 72.00% 63.00% 68.00% 65.00% 80.00% 75.00% 76.00% 70.00% 77.00% 70.00% 69.00% 77.00% 73.00% 72.00% 76.00% 68.00% 69.00% 73.00% 65.00% 76.00% 69.00% 69.00% 66.00% 66.00% 79.00% 65.00% 60.00% ------ 61.00% 66.00% 65.00% 69.00% 69.00% 55.00% 55.00% 66.00% 64.00% 66.00% 66.00% 61.00% 60.00% 60.00% 58.00% 59.00% 68.22%
78.00% 67.00% 66.00% 53.00% 68.00% 54.00% 61.00% 67.00% 61.00% 70.00% 73.00% 68.00% 67.00% 74.00% 72.00% 65.00% 62.00% 71.00% 66.00% 62.00% 75.00% 68.00% 64.00% 74.00% 65.00% 67.00% 63.00% 68.00% 68.00% 73.00% 64.00% 57.00% 56.00% 50.00% ------ 65.00% 46.00% 59.00% 65.00% 64.00% 52.00% 59.00% 55.00% 50.00% 58.00% 54.00% 48.00% 39.00% 47.00% 59.00% 62.39%
60.00% 69.00% 63.00% 55.00% 69.00% 61.00% 62.00% 68.00% 57.00% 70.00% 62.00% 59.00% 59.00% 62.00% 62.00% 63.00% 55.00% 63.00% 61.00% 63.00% 68.00% 62.00% 63.00% 74.00% 67.00% 65.00% 63.00% 67.00% 68.00% 63.00% 61.00% 59.00% 38.00% 47.00% 56.00% ------ 53.00% 59.00% 55.00% 50.00% 55.00% 49.00% 43.00% 48.00% 51.00% 44.00% 54.00% 40.00% 60.00% 46.00% 58.59%
71.00% 63.00% 74.00% 62.00% 75.00% 70.00% 69.00% 70.00% 58.00% 74.00% 65.00% 76.00% 66.00% 71.00% 71.00% 63.00% 69.00% 73.00% 72.00% 62.00% 69.00% 65.00% 70.00% 68.00% 69.00% 64.00% 61.00% 68.00% 72.00% 63.00% 72.00% 68.00% 55.00% 55.00% 54.00% 69.00% ------ 56.00% 62.00% 57.00% 73.00% 63.00% 51.00% 59.00% 58.00% 61.00% 51.00% 47.00% 58.00% 53.00% 64.59%
63.00% 62.00% 74.00% 72.00% 70.00% 63.00% 75.00% 69.00% 60.00% 71.00% 70.00% 75.00% 73.00% 70.00% 69.00% 60.00% 66.00% 64.00% 75.00% 65.00% 72.00% 63.00% 54.00% 64.00% 79.00% 66.00% 58.00% 73.00% 63.00% 62.00% 68.00% 61.00% 59.00% 52.00% 64.00% 67.00% 63.00% ------ 68.00% 49.00% 65.00% 63.00% 61.00% 55.00% 55.00% 50.00% 51.00% 59.00% 55.00% 61.00% 64.20%
76.00% 63.00% 71.00% 52.00% 60.00% 51.00% 76.00% 68.00% 62.00% 68.00% 71.00% 69.00% 62.00% 71.00% 65.00% 54.00% 68.00% 67.00% 61.00% 55.00% 71.00% 61.00% 64.00% 68.00% 62.00% 69.00% 64.00% 63.00% 68.00% 61.00% 61.00% 52.00% 42.00% 51.00% 55.00% 52.00% 56.00% 51.00% ------ 61.00% 53.00% 49.00% 43.00% 47.00% 44.00% 39.00% 36.00% 56.00% 52.00% 51.00% 59.02%
76.00% 60.00% 65.00% 68.00% 55.00% 61.00% 68.00% 62.00% 65.00% 65.00% 67.00% 71.00% 69.00% 57.00% 63.00% 76.00% 59.00% 63.00% 70.00% 66.00% 65.00% 68.00% 58.00% 66.00% 67.00% 71.00% 79.00% 73.00% 77.00% 69.00% 70.00% 61.00% 60.00% 57.00% 61.00% 64.00% 59.00% 52.00% 68.00% ------ 61.00% 62.00% 57.00% 64.00% 64.00% 64.00% 57.00% 58.00% 56.00% 57.00% 64.31%
63.00% 76.00% 79.00% 68.00% 72.00% 66.00% 73.00% 75.00% 61.00% 79.00% 77.00% 81.00% 68.00% 76.00% 71.00% 56.00% 67.00% 78.00% 82.00% 69.00% 72.00% 68.00% 71.00% 85.00% 66.00% 67.00% 69.00% 72.00% 75.00% 70.00% 65.00% 68.00% 56.00% 66.00% 65.00% 74.00% 70.00% 65.00% 72.00% 50.00% ------ 61.00% 61.00% 71.00% 59.00% 56.00% 66.00% 58.00% 66.00% 73.00% 68.86%
71.00% 76.00% 79.00% 71.00% 78.00% 71.00% 82.00% 78.00% 64.00% 76.00% 79.00% 76.00% 79.00% 75.00% 78.00% 66.00% 72.00% 76.00% 76.00% 70.00% 68.00% 67.00% 69.00% 73.00% 72.00% 72.00% 69.00% 71.00% 77.00% 72.00% 71.00% 76.00% 69.00% 58.00% 67.00% 64.00% 70.00% 65.00% 72.00% 67.00% 58.00% ------ 57.00% 63.00% 67.00% 66.00% 59.00% 57.00% 58.00% 64.00% 70.02%
67.00% 72.00% 75.00% 74.00% 78.00% 68.00% 74.00% 75.00% 68.00% 77.00% 82.00% 82.00% 69.00% 77.00% 76.00% 73.00% 77.00% 66.00% 74.00% 66.00% 74.00% 67.00% 66.00% 64.00% 75.00% 70.00% 63.00% 67.00% 71.00% 71.00% 71.00% 72.00% 63.00% 53.00% 70.00% 59.00% 67.00% 61.00% 70.00% 55.00% 60.00% 68.00% ------ 62.00% 61.00% 71.00% 70.00% 62.00% 55.00% 63.00% 68.80%
61.00% 71.00% 82.00% 74.00% 74.00% 74.00% 79.00% 74.00% 55.00% 80.00% 75.00% 81.00% 82.00% 80.00% 79.00% 63.00% 75.00% 76.00% 69.00% 71.00% 75.00% 66.00% 75.00% 69.00% 72.00% 67.00% 70.00% 73.00% 74.00% 71.00% 73.00% 74.00% 62.00% 60.00% 66.00% 62.00% 67.00% 63.00% 69.00% 57.00% 64.00% 50.00% 70.00% ------ 58.00% 57.00% 62.00% 54.00% 55.00% 57.00% 68.71%
79.00% 65.00% 78.00% 74.00% 82.00% 69.00% 81.00% 78.00% 66.00% 81.00% 79.00% 86.00% 74.00% 79.00% 70.00% 54.00% 73.00% 75.00% 65.00% 72.00% 72.00% 76.00% 74.00% 70.00% 67.00% 71.00% 73.00% 65.00% 69.00% 65.00% 66.00% 62.00% 62.00% 62.00% 81.00% 66.00% 70.00% 70.00% 66.00% 65.00% 62.00% 74.00% 64.00% 70.00% ------ 57.00% 56.00% 58.00% 60.00% 55.00% 69.55%
68.00% 66.00% 71.00% 66.00% 70.00% 67.00% 74.00% 74.00% 76.00% 74.00% 68.00% 79.00% 74.00% 75.00% 76.00% 69.00% 71.00% 75.00% 68.00% 75.00% 69.00% 71.00% 67.00% 73.00% 69.00% 74.00% 73.00% 71.00% 79.00% 67.00% 65.00% 65.00% 51.00% 61.00% 61.00% 59.00% 68.00% 61.00% 58.00% 67.00% 58.00% 65.00% 61.00% 40.00% 55.00% ------ 59.00% 54.00% 64.00% 63.00% 67.02%
76.00% 68.00% 75.00% 71.00% 76.00% 78.00% 84.00% 80.00% 62.00% 84.00% 77.00% 87.00% 80.00% 78.00% 79.00% 69.00% 75.00% 75.00% 74.00% 77.00% 77.00% 76.00% 78.00% 83.00% 77.00% 79.00% 74.00% 79.00% 77.00% 70.00% 67.00% 73.00% 50.00% 56.00% 68.00% 72.00% 71.00% 64.00% 76.00% 67.00% 55.00% 54.00% 53.00% 55.00% 64.00% 52.00% ------ 63.00% 66.00% 62.00% 71.08%
70.00% 68.00% 66.00% 65.00% 68.00% 72.00% 72.00% 77.00% 65.00% 72.00% 75.00% 70.00% 65.00% 74.00% 61.00% 67.00% 69.00% 74.00% 64.00% 79.00% 74.00% 73.00% 76.00% 72.00% 65.00% 71.00% 75.00% 72.00% 72.00% 77.00% 69.00% 72.00% 49.00% 62.00% 50.00% 62.00% 56.00% 65.00% 67.00% 50.00% 47.00% 56.00% 61.00% 65.00% 62.00% 55.00% 58.00% ------ 54.00% 53.00% 65.98%
73.00% 70.00% 67.00% 66.00% 76.00% 61.00% 78.00% 69.00% 65.00% 77.00% 73.00% 79.00% 69.00% 74.00% 68.00% 72.00% 67.00% 69.00% 61.00% 64.00% 72.00% 69.00% 70.00% 75.00% 70.00% 69.00% 78.00% 77.00% 75.00% 81.00% 77.00% 61.00% 60.00% 47.00% 54.00% 70.00% 57.00% 64.00% 65.00% 59.00% 58.00% 56.00% 52.00% 61.00% 59.00% 61.00% 53.00% 53.00% ------ 57.00% 66.49%
75.00% 69.00% 69.00% 59.00% 79.00% 69.00% 72.00% 71.00% 64.00% 75.00% 65.00% 71.00% 71.00% 76.00% 65.00% 78.00% 74.00% 66.00% 74.00% 75.00% 78.00% 78.00% 73.00% 74.00% 70.00% 78.00% 72.00% 77.00% 75.00% 72.00% 70.00% 66.00% 54.00% 55.00% 55.00% 63.00% 58.00% 52.00% 68.00% 64.00% 55.00% 56.00% 60.00% 66.00% 54.00% 58.00% 50.00% 57.00% 57.00% ------ 66.98%
