ELITISM 5
EVALUATOR_DRAFTS 10
EVALUATOR_ROUNDS 10
EVOLUTION_DRAFTS 10
EVOLUTION_ROUNDS 10
GENERATIONS 50
POPULATION 50
MUTATION_RATE 0.05
BinaryTreeIndividual

generation   1: 12.41s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasWard, FeatureAttack), state_node: FeatureOpNextTurnDraw }
generation   2: 12.58s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureHasDrain), OperatorMax(OperatorMin(FeatureHasGuard, FeatureDefense), FeatureHasGuard))), state_node: Literal(0.5062139) }
generation   3: 11.81s // best: BinaryTreeIndividual { card_node: OperatorMul(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorSub(OperatorMul(FeatureDefense, FeatureHasDrain), OperatorMax(FeatureDefense, OperatorMul(FeatureHasWard, FeatureHasGuard)))), FeatureHasDrain), OperatorMul(FeatureHasWard, FeatureHasCharge)), OperatorAdd(FeatureHasLethal, OperatorMul(OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal)), FeatureAttack))), state_node: FeatureMeHealth }
generation   4: 15.95s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureHasDrain), OperatorMax(OperatorMin(FeatureHasGuard, FeatureDefense), FeatureHasGuard))), state_node: Literal(0.5062139) }
generation   5: 14.52s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureHasDrain), OperatorMax(OperatorMin(FeatureHasGuard, FeatureHasGuard), FeatureHasGuard))), state_node: Literal(0.5062139) }
generation   6: 19.40s // best: BinaryTreeIndividual { card_node: OperatorMul(FeatureHasGuard, FeatureAttack), state_node: FeatureOpNextTurnDraw }
generation   7: 20.64s // best: BinaryTreeIndividual { card_node: OperatorMul(OperatorMax(OperatorAdd(FeatureAttack, FeatureDefense), FeatureHasGuard), OperatorAdd(FeatureHasLethal, OperatorAdd(FeatureHasGuard, FeatureHasLethal))), state_node: FeatureMeRune }
generation   8: 15.48s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureHasGuard), OperatorMax(FeatureDefense, OperatorMul(FeatureHasWard, FeatureHasCharge)))), state_node: Literal(-0.06591582) }
generation   9: 12.84s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasLethal, OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureMeMaxMana) }
generation  10: 13.80s // best: BinaryTreeIndividual { card_node: OperatorMul(OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasGuard)), FeatureAttack), state_node: FeatureOpNextTurnDraw }
generation  11: 13.76s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasLethal, OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureMeMaxMana) }
generation  12: 14.95s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasLethal, OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureMeMaxMana) }
generation  13: 16.32s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasLethal, OperatorMul(FeatureHasGuard, OperatorMin(FeatureAttack, OperatorAdd(FeatureHasGuard, OperatorMax(OperatorMin(OperatorMul(FeatureHasWard, FeatureHasCharge), FeatureDefense), OperatorMin(OperatorMul(FeatureAttack, FeatureHasGuard), FeatureDefense)))))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  14: 17.98s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  15: 18.22s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  16: 17.15s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  17: 17.14s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  18: 17.01s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorMin(FeatureAttack, OperatorAdd(FeatureDefense, OperatorSub(OperatorMul(FeatureHasBreakthrough, FeatureHasLethal), FeatureHasGuard))), FeatureAttack), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  19: 20.38s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorMin(FeatureAttack, OperatorAdd(FeatureDefense, OperatorSub(OperatorMul(FeatureHasBreakthrough, FeatureHasLethal), FeatureHasGuard))), FeatureAttack), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  20: 19.91s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorMin(FeatureAttack, OperatorAdd(FeatureDefense, OperatorSub(OperatorMul(FeatureHasBreakthrough, FeatureHasLethal), FeatureHasGuard))), FeatureAttack), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  21: 18.10s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  22: 18.23s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  23: 18.38s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorMin(FeatureAttack, OperatorAdd(FeatureDefense, OperatorSub(OperatorMul(FeatureHasBreakthrough, FeatureHasWard), FeatureHasGuard))), FeatureAttack), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  24: 17.49s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasLethal, FeatureAttack)), state_node: FeatureOpMaxMana }
generation  25: 17.89s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorMin(FeatureAttack, OperatorAdd(FeatureDefense, OperatorSub(OperatorMul(FeatureHasBreakthrough, FeatureHasWard), FeatureHasGuard))), FeatureAttack), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  26: 15.61s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasGuard), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  27: 15.02s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  28: 16.21s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  29: 14.25s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  30: 16.45s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), FeatureHasGuard), FeatureHasWard), OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard)), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  31: 18.45s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasCharge), OperatorAdd(OperatorMax(OperatorAdd(FeatureHasGuard, FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack))), FeatureHasGuard), FeatureHasWard), OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard)), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  32: 20.75s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), OperatorAdd(OperatorMax(OperatorAdd(FeatureHasGuard, FeatureHasWard), OperatorMin(FeatureAttack, OperatorAdd(FeatureDefense, OperatorSub(OperatorMul(FeatureAttack, FeatureHasWard), OperatorAdd(FeatureAttack, FeatureHasWard))))), OperatorMul(FeatureHasGuard, FeatureAttack))), state_node: FeatureOpNextTurnDraw }
generation  33: 17.29s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorMul(FeatureAttack, FeatureHasWard), FeatureHasGuard), OperatorAdd(FeatureHasCharge, OperatorAdd(FeatureAttack, OperatorAdd(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasGuard)))), state_node: FeatureOpNextTurnDraw }
generation  34: 22.68s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasCharge), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)))), FeatureHasCharge), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, FeatureHasWard)), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  35: 20.39s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasCharge), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)))), FeatureHasCharge), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, FeatureHasWard)), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  36: 19.78s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, FeatureAttack)), FeatureHasGuard)), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard)), FeatureHasCharge), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), FeatureHasWard)), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  37: 22.46s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, FeatureAttack)), FeatureHasGuard)), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureDefense, OperatorSub(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), FeatureAttack)), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard)), FeatureHasCharge), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureAttack)), FeatureHasWard)), FeatureHasGuard)), state_node: FeatureMeCurrentMana }
generation  38: 22.54s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), OperatorMul(FeatureHasWard, FeatureHasGuard)), FeatureHasWard), OperatorAdd(OperatorAdd(FeatureHasGuard, OperatorAdd(FeatureHasGuard, FeatureAttack)), FeatureHasGuard)), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  39: 23.67s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(FeatureAttack, FeatureHasWard)), OperatorMul(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasGuard)), FeatureHasWard), OperatorAdd(OperatorAdd(FeatureHasGuard, OperatorAdd(FeatureHasGuard, FeatureAttack)), FeatureHasGuard)), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  40: 29.50s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), OperatorMul(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasGuard)), FeatureHasWard), OperatorAdd(OperatorAdd(FeatureHasGuard, OperatorAdd(FeatureHasGuard, FeatureAttack)), FeatureHasGuard)), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  41: 26.78s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), OperatorMul(FeatureHasWard, FeatureHasGuard)), FeatureHasWard), OperatorAdd(FeatureHasGuard, FeatureAttack)), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  42: 26.93s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), OperatorMul(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasGuard)), FeatureHasWard), OperatorAdd(OperatorAdd(FeatureHasGuard, OperatorAdd(FeatureHasGuard, FeatureAttack)), FeatureHasGuard)), FeatureHasWard), state_node: FeatureOpNextTurnDraw }
generation  43: 29.08s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(FeatureAttack, FeatureHasWard)), OperatorMul(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasWard), FeatureHasWard), FeatureHasWard), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), FeatureHasWard), OperatorAdd(FeatureHasGuard, FeatureHasGuard)), FeatureHasGuard)), FeatureHasGuard)), FeatureHasWard), OperatorAdd(OperatorAdd(FeatureHasGuard, OperatorAdd(FeatureHasGuard, FeatureAttack)), FeatureHasGuard)), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard)), OperatorAdd(FeatureHasWard, FeatureHasWard)), FeatureHasCharge), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  44: 32.38s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(FeatureAttack, FeatureHasWard)), OperatorMul(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasWard), FeatureHasWard), FeatureHasWard), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), FeatureHasWard), OperatorAdd(FeatureHasGuard, FeatureHasGuard)), FeatureHasGuard)), FeatureHasGuard)), FeatureHasWard), OperatorAdd(OperatorAdd(FeatureHasGuard, OperatorAdd(FeatureHasGuard, FeatureAttack)), FeatureHasGuard)), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard)), OperatorAdd(FeatureHasWard, FeatureHasWard)), FeatureHasCharge), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  45: 37.58s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard)), OperatorMul(FeatureHasGuard, FeatureHasGuard)), FeatureHasWard), OperatorAdd(OperatorAdd(FeatureHasGuard, OperatorAdd(FeatureHasGuard, FeatureAttack)), FeatureHasGuard)), FeatureHasLethal), state_node: FeatureMeDecksize }
generation  46: 29.29s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard)), OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureDefense, OperatorSub(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), FeatureAttack)), FeatureHasWard), FeatureHasWard), FeatureHasGuard)), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureHasGuard)), FeatureHasWard)), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorAdd(OperatorMax(FeatureHasGuard, FeatureHasGuard), FeatureHasWard)), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard)), OperatorMul(FeatureHasGuard, FeatureAttack)), FeatureHasWard)), OperatorAdd(FeatureAttack, FeatureHasGuard))), state_node: FeatureOpNextTurnDraw }
generation  47: 34.72s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard)), OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureDefense, OperatorSub(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), FeatureAttack)), FeatureHasWard), FeatureHasWard), FeatureHasGuard)), FeatureHasGuard), OperatorMul(FeatureHasGuard, FeatureHasGuard)), FeatureHasWard)), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorAdd(OperatorMax(FeatureHasGuard, FeatureHasGuard), FeatureHasWard)), FeatureHasWard), FeatureHasWard), OperatorMul(OperatorMul(OperatorMax(FeatureAttack, OperatorSub(FeatureHasWard, FeatureDefense)), FeatureHasGuard), FeatureHasWard)), FeatureHasWard), OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard)), OperatorMul(FeatureHasGuard, FeatureAttack)), FeatureHasWard)), OperatorAdd(FeatureAttack, FeatureHasGuard))), state_node: FeatureMeDecksize }
generation  48: 36.20s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard)), OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard)), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), OperatorAdd(OperatorMax(FeatureHasGuard, FeatureHasGuard), FeatureHasWard)), FeatureHasWard), FeatureHasWard), OperatorMul(OperatorMul(OperatorMax(FeatureAttack, OperatorSub(FeatureHasWard, FeatureDefense)), FeatureHasGuard), FeatureHasWard)), FeatureHasWard), OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard)), OperatorMul(FeatureHasGuard, FeatureAttack)), FeatureHasWard)), OperatorAdd(FeatureAttack, FeatureHasGuard))), state_node: FeatureMeDecksize }
generation  49: 43.82s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), OperatorMul(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasGuard)), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, FeatureHasGuard)), FeatureHasGuard)), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard)), OperatorMul(OperatorAdd(FeatureHasGuard, FeatureAttack), OperatorAdd(FeatureHasBreakthrough, FeatureHasWard))), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(FeatureHasGuard, FeatureHasWard), FeatureHasGuard), FeatureHasWard), FeatureHasWard)), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  50: 40.32s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), OperatorMul(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasGuard)), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), FeatureHasGuard)), OperatorAdd(OperatorMax(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasGuard), FeatureHasWard), FeatureHasWard), FeatureHasWard), FeatureHasGuard), FeatureHasWard)), OperatorMul(OperatorAdd(FeatureHasGuard, FeatureAttack), OperatorAdd(FeatureHasBreakthrough, FeatureHasWard))), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(FeatureHasGuard, FeatureHasWard), FeatureHasGuard), FeatureHasWard), FeatureHasWard)), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
------ 53.00% 39.00% 58.00% 53.00% 56.00% 51.00% 79.00% 38.00% 35.00% 48.00% 47.00% 43.00% 61.00% 62.00% 72.00% 59.00% 61.00% 56.00% 57.00% 55.00% 55.00% 64.00% 66.00% 59.00% 63.00% 50.00% 51.00% 62.00% 52.00% 45.00% 65.00% 49.00% 57.00% 57.00% 55.00% 59.00% 55.00% 60.00% 42.00% 52.00% 35.00% 51.00% 53.00% 65.00% 60.00% 51.00% 58.00% 35.00% 48.00% 54.22%
57.00% ------ 73.00% 57.00% 55.00% 57.00% 56.00% 30.00% 41.00% 53.00% 32.00% 38.00% 42.00% 32.00% 36.00% 26.00% 31.00% 20.00% 33.00% 23.00% 48.00% 30.00% 23.00% 42.00% 31.00% 42.00% 26.00% 41.00% 27.00% 34.00% 25.00% 29.00% 30.00% 28.00% 32.00% 31.00% 28.00% 19.00% 26.00% 26.00% 46.00% 32.00% 33.00% 22.00% 27.00% 18.00% 28.00% 23.00% 37.00% 24.00% 34.69%
70.00% 40.00% ------ 32.00% 38.00% 29.00% 42.00% 57.00% 26.00% 46.00% 25.00% 33.00% 28.00% 29.00% 32.00% 35.00% 38.00% 41.00% 38.00% 43.00% 56.00% 25.00% 35.00% 55.00% 42.00% 47.00% 35.00% 62.00% 35.00% 38.00% 22.00% 21.00% 29.00% 31.00% 42.00% 45.00% 39.00% 25.00% 26.00% 24.00% 50.00% 26.00% 37.00% 40.00% 31.00% 33.00% 31.00% 26.00% 29.00% 27.00% 36.45%
61.00% 55.00% 65.00% ------ 55.00% 58.00% 51.00% 37.00% 52.00% 56.00% 39.00% 49.00% 44.00% 30.00% 24.00% 28.00% 22.00% 24.00% 29.00% 20.00% 40.00% 24.00% 27.00% 50.00% 30.00% 34.00% 31.00% 42.00% 32.00% 38.00% 25.00% 28.00% 24.00% 35.00% 30.00% 26.00% 21.00% 32.00% 29.00% 27.00% 53.00% 22.00% 34.00% 20.00% 29.00% 18.00% 24.00% 28.00% 35.00% 22.00% 34.88%
51.00% 48.00% 73.00% 49.00% ------ 55.00% 37.00% 34.00% 42.00% 52.00% 45.00% 40.00% 38.00% 33.00% 28.00% 29.00% 23.00% 31.00% 27.00% 22.00% 41.00% 36.00% 28.00% 45.00% 24.00% 36.00% 27.00% 44.00% 28.00% 32.00% 24.00% 24.00% 30.00% 31.00% 33.00% 25.00% 27.00% 25.00% 29.00% 26.00% 41.00% 24.00% 29.00% 29.00% 32.00% 23.00% 22.00% 25.00% 28.00% 24.00% 33.65%
57.00% 62.00% 81.00% 56.00% 64.00% ------ 56.00% 46.00% 49.00% 51.00% 45.00% 45.00% 51.00% 38.00% 44.00% 45.00% 36.00% 37.00% 36.00% 37.00% 53.00% 38.00% 28.00% 48.00% 35.00% 45.00% 27.00% 53.00% 31.00% 45.00% 35.00% 42.00% 41.00% 49.00% 37.00% 43.00% 41.00% 41.00% 35.00% 35.00% 62.00% 39.00% 43.00% 40.00% 42.00% 33.00% 42.00% 34.00% 38.00% 29.00% 43.67%
55.00% 59.00% 74.00% 51.00% 66.00% 56.00% ------ 53.00% 46.00% 58.00% 57.00% 56.00% 58.00% 26.00% 34.00% 43.00% 40.00% 31.00% 29.00% 32.00% 49.00% 37.00% 42.00% 50.00% 33.00% 46.00% 35.00% 55.00% 27.00% 29.00% 30.00% 49.00% 35.00% 36.00% 37.00% 30.00% 31.00% 34.00% 36.00% 27.00% 43.00% 33.00% 33.00% 31.00% 34.00% 36.00% 34.00% 33.00% 40.00% 35.00% 41.31%
31.00% 80.00% 50.00% 74.00% 76.00% 63.00% 64.00% ------ 59.00% 48.00% 64.00% 62.00% 67.00% 41.00% 39.00% 48.00% 43.00% 30.00% 34.00% 40.00% 34.00% 36.00% 33.00% 30.00% 35.00% 42.00% 41.00% 31.00% 37.00% 38.00% 39.00% 47.00% 29.00% 36.00% 42.00% 27.00% 32.00% 31.00% 31.00% 25.00% 33.00% 30.00% 20.00% 33.00% 40.00% 30.00% 32.00% 36.00% 36.00% 29.00% 41.39%
75.00% 58.00% 80.00% 68.00% 70.00% 64.00% 56.00% 44.00% ------ 57.00% 58.00% 47.00% 57.00% 54.00% 49.00% 51.00% 39.00% 46.00% 34.00% 45.00% 49.00% 41.00% 47.00% 64.00% 42.00% 53.00% 44.00% 54.00% 38.00% 45.00% 34.00% 40.00% 45.00% 42.00% 45.00% 41.00% 38.00% 47.00% 38.00% 35.00% 53.00% 46.00% 46.00% 44.00% 43.00% 40.00% 38.00% 44.00% 40.00% 47.00% 48.47%
83.00% 59.00% 70.00% 68.00% 63.00% 66.00% 58.00% 64.00% 49.00% ------ 53.00% 46.00% 55.00% 56.00% 49.00% 50.00% 53.00% 47.00% 58.00% 60.00% 63.00% 51.00% 52.00% 70.00% 55.00% 59.00% 55.00% 65.00% 43.00% 50.00% 27.00% 38.00% 43.00% 50.00% 56.00% 49.00% 52.00% 53.00% 42.00% 49.00% 62.00% 45.00% 46.00% 45.00% 58.00% 50.00% 50.00% 46.00% 42.00% 46.00% 53.45%
73.00% 68.00% 78.00% 65.00% 64.00% 53.00% 58.00% 47.00% 65.00% 56.00% ------ 54.00% 63.00% 41.00% 55.00% 45.00% 51.00% 41.00% 47.00% 37.00% 58.00% 50.00% 42.00% 59.00% 35.00% 47.00% 41.00% 61.00% 38.00% 44.00% 37.00% 43.00% 42.00% 47.00% 45.00% 40.00% 36.00% 35.00% 36.00% 37.00% 54.00% 40.00% 48.00% 52.00% 43.00% 38.00% 38.00% 42.00% 38.00% 40.00% 48.31%
68.00% 65.00% 71.00% 73.00% 60.00% 61.00% 58.00% 52.00% 51.00% 58.00% 45.00% ------ 56.00% 39.00% 44.00% 37.00% 39.00% 40.00% 47.00% 39.00% 56.00% 47.00% 50.00% 59.00% 37.00% 49.00% 49.00% 53.00% 41.00% 45.00% 38.00% 42.00% 43.00% 51.00% 45.00% 41.00% 37.00% 36.00% 48.00% 45.00% 59.00% 40.00% 44.00% 50.00% 47.00% 38.00% 31.00% 46.00% 40.00% 34.00% 47.84%
79.00% 63.00% 71.00% 73.00% 68.00% 60.00% 52.00% 52.00% 57.00% 60.00% 48.00% 50.00% ------ 49.00% 35.00% 51.00% 46.00% 42.00% 43.00% 36.00% 51.00% 43.00% 47.00% 61.00% 41.00% 39.00% 40.00% 61.00% 51.00% 42.00% 44.00% 44.00% 40.00% 46.00% 48.00% 49.00% 43.00% 42.00% 38.00% 42.00% 58.00% 37.00% 46.00% 43.00% 43.00% 34.00% 36.00% 53.00% 38.00% 38.00% 48.43%
63.00% 80.00% 79.00% 75.00% 79.00% 75.00% 77.00% 79.00% 68.00% 70.00% 76.00% 68.00% 69.00% ------ 65.00% 64.00% 68.00% 55.00% 54.00% 58.00% 54.00% 72.00% 56.00% 46.00% 55.00% 52.00% 58.00% 56.00% 54.00% 46.00% 53.00% 60.00% 56.00% 50.00% 55.00% 57.00% 57.00% 48.00% 52.00% 57.00% 53.00% 40.00% 42.00% 43.00% 48.00% 45.00% 55.00% 48.00% 58.00% 51.00% 59.16%
67.00% 89.00% 71.00% 79.00% 83.00% 80.00% 79.00% 76.00% 75.00% 65.00% 67.00% 74.00% 59.00% 56.00% ------ 67.00% 61.00% 53.00% 58.00% 61.00% 56.00% 61.00% 59.00% 43.00% 61.00% 57.00% 54.00% 50.00% 56.00% 47.00% 51.00% 61.00% 57.00% 57.00% 56.00% 68.00% 66.00% 52.00% 46.00% 53.00% 58.00% 63.00% 52.00% 47.00% 57.00% 54.00% 53.00% 43.00% 57.00% 50.00% 60.51%
58.00% 78.00% 72.00% 84.00% 83.00% 76.00% 76.00% 75.00% 68.00% 69.00% 72.00% 74.00% 71.00% 65.00% 60.00% ------ 68.00% 47.00% 63.00% 55.00% 58.00% 65.00% 57.00% 60.00% 53.00% 54.00% 62.00% 48.00% 49.00% 43.00% 53.00% 56.00% 56.00% 44.00% 52.00% 53.00% 50.00% 55.00% 58.00% 55.00% 55.00% 60.00% 44.00% 50.00% 65.00% 52.00% 52.00% 54.00% 49.00% 57.00% 59.86%
59.00% 88.00% 70.00% 81.00% 83.00% 74.00% 75.00% 90.00% 74.00% 67.00% 80.00% 70.00% 76.00% 62.00% 63.00% 67.00% ------ 51.00% 64.00% 58.00% 51.00% 60.00% 55.00% 61.00% 59.00% 63.00% 60.00% 50.00% 44.00% 55.00% 53.00% 55.00% 57.00% 56.00% 52.00% 58.00% 63.00% 45.00% 59.00% 61.00% 51.00% 60.00% 45.00% 53.00% 63.00% 56.00% 55.00% 46.00% 60.00% 55.00% 61.49%
62.00% 79.00% 67.00% 86.00% 85.00% 78.00% 81.00% 85.00% 75.00% 70.00% 72.00% 71.00% 78.00% 73.00% 74.00% 70.00% 67.00% ------ 67.00% 65.00% 62.00% 66.00% 59.00% 60.00% 66.00% 54.00% 53.00% 58.00% 63.00% 53.00% 65.00% 63.00% 71.00% 62.00% 67.00% 55.00% 63.00% 56.00% 54.00% 54.00% 53.00% 57.00% 55.00% 57.00% 58.00% 66.00% 64.00% 56.00% 59.00% 47.00% 64.92%
64.00% 86.00% 71.00% 81.00% 75.00% 81.00% 84.00% 88.00% 78.00% 68.00% 73.00% 70.00% 72.00% 69.00% 75.00% 67.00% 74.00% 66.00% ------ 66.00% 61.00% 65.00% 71.00% 58.00% 71.00% 57.00% 56.00% 56.00% 61.00% 55.00% 65.00% 68.00% 70.00% 65.00% 68.00% 60.00% 55.00% 60.00% 65.00% 58.00% 64.00% 59.00% 50.00% 54.00% 56.00% 65.00% 62.00% 51.00% 54.00% 59.00% 65.86%
66.00% 82.00% 63.00% 80.00% 90.00% 77.00% 77.00% 88.00% 78.00% 61.00% 76.00% 82.00% 75.00% 63.00% 71.00% 74.00% 77.00% 64.00% 60.00% ------ 73.00% 59.00% 75.00% 55.00% 63.00% 58.00% 62.00% 59.00% 60.00% 55.00% 70.00% 73.00% 62.00% 63.00% 58.00% 55.00% 67.00% 56.00% 58.00% 61.00% 62.00% 52.00% 52.00% 63.00% 69.00% 58.00% 57.00% 56.00% 57.00% 50.00% 65.76%
64.00% 74.00% 51.00% 63.00% 75.00% 67.00% 62.00% 85.00% 54.00% 46.00% 58.00% 53.00% 50.00% 65.00% 64.00% 70.00% 76.00% 64.00% 67.00% 63.00% ------ 63.00% 69.00% 58.00% 66.00% 64.00% 66.00% 63.00% 70.00% 53.00% 58.00% 65.00% 63.00% 56.00% 65.00% 58.00% 61.00% 60.00% 62.00% 57.00% 53.00% 60.00% 52.00% 54.00% 67.00% 54.00% 55.00% 59.00% 56.00% 43.00% 61.24%
63.00% 86.00% 75.00% 78.00% 81.00% 74.00% 71.00% 80.00% 75.00% 62.00% 71.00% 82.00% 78.00% 58.00% 61.00% 73.00% 66.00% 66.00% 64.00% 60.00% 61.00% ------ 68.00% 57.00% 55.00% 57.00% 66.00% 60.00% 53.00% 55.00% 61.00% 69.00% 66.00% 59.00% 56.00% 50.00% 67.00% 53.00% 49.00% 53.00% 57.00% 61.00% 49.00% 52.00% 58.00% 51.00% 57.00% 55.00% 49.00% 53.00% 62.88%
68.00% 84.00% 79.00% 81.00% 87.00% 71.00% 72.00% 78.00% 70.00% 57.00% 73.00% 74.00% 71.00% 62.00% 64.00% 67.00% 65.00% 61.00% 61.00% 75.00% 55.00% 63.00% ------ 61.00% 60.00% 54.00% 66.00% 50.00% 60.00% 45.00% 60.00% 65.00% 62.00% 65.00% 58.00% 57.00% 64.00% 61.00% 56.00% 61.00% 60.00% 52.00% 50.00% 55.00% 69.00% 65.00% 55.00% 51.00% 62.00% 55.00% 63.61%
68.00% 64.00% 54.00% 62.00% 60.00% 54.00% 65.00% 87.00% 60.00% 54.00% 60.00% 59.00% 49.00% 61.00% 60.00% 62.00% 63.00% 61.00% 56.00% 63.00% 56.00% 61.00% 63.00% ------ 61.00% 59.00% 57.00% 57.00% 63.00% 54.00% 64.00% 62.00% 62.00% 50.00% 56.00% 55.00% 60.00% 54.00% 62.00% 57.00% 49.00% 54.00% 40.00% 46.00% 61.00% 58.00% 57.00% 60.00% 62.00% 61.00% 58.84%
63.00% 86.00% 74.00% 81.00% 82.00% 82.00% 75.00% 85.00% 77.00% 59.00% 68.00% 73.00% 62.00% 71.00% 72.00% 71.00% 66.00% 64.00% 60.00% 72.00% 47.00% 70.00% 63.00% 68.00% ------ 61.00% 59.00% 52.00% 63.00% 58.00% 62.00% 72.00% 66.00% 54.00% 67.00% 67.00% 67.00% 62.00% 59.00% 57.00% 59.00% 53.00% 46.00% 51.00% 64.00% 58.00% 64.00% 57.00% 57.00% 53.00% 64.88%
67.00% 70.00% 67.00% 74.00% 79.00% 68.00% 72.00% 82.00% 64.00% 55.00% 62.00% 70.00% 61.00% 69.00% 72.00% 71.00% 71.00% 66.00% 72.00% 68.00% 59.00% 66.00% 69.00% 61.00% 67.00% ------ 66.00% 63.00% 67.00% 51.00% 71.00% 72.00% 75.00% 67.00% 60.00% 61.00% 68.00% 62.00% 62.00% 65.00% 55.00% 66.00% 57.00% 56.00% 68.00% 54.00% 61.00% 64.00% 51.00% 62.00% 65.43%
78.00% 75.00% 82.00% 87.00% 82.00% 75.00% 81.00% 82.00% 72.00% 67.00% 71.00% 74.00% 68.00% 78.00% 69.00% 69.00% 74.00% 67.00% 63.00% 62.00% 62.00% 72.00% 67.00% 66.00% 69.00% 69.00% ------ 66.00% 65.00% 58.00% 66.00% 67.00% 72.00% 65.00% 63.00% 62.00% 63.00% 63.00% 61.00% 56.00% 53.00% 56.00% 50.00% 59.00% 57.00% 65.00% 57.00% 52.00% 51.00% 66.00% 66.82%
72.00% 81.00% 58.00% 70.00% 70.00% 69.00% 60.00% 84.00% 59.00% 53.00% 59.00% 66.00% 64.00% 63.00% 68.00% 74.00% 66.00% 66.00% 64.00% 78.00% 57.00% 65.00% 65.00% 54.00% 67.00% 61.00% 58.00% ------ 60.00% 55.00% 68.00% 65.00% 70.00% 63.00% 58.00% 67.00% 67.00% 53.00% 61.00% 71.00% 59.00% 57.00% 61.00% 51.00% 70.00% 54.00% 61.00% 53.00% 62.00% 52.00% 63.45%
70.00% 81.00% 75.00% 86.00% 84.00% 78.00% 75.00% 88.00% 75.00% 67.00% 72.00% 66.00% 78.00% 66.00% 66.00% 59.00% 77.00% 72.00% 68.00% 68.00% 64.00% 73.00% 68.00% 59.00% 71.00% 64.00% 64.00% 63.00% ------ 54.00% 68.00% 72.00% 67.00% 62.00% 65.00% 63.00% 64.00% 60.00% 61.00% 64.00% 66.00% 61.00% 48.00% 53.00% 65.00% 58.00% 58.00% 47.00% 60.00% 58.00% 66.76%
69.00% 87.00% 73.00% 82.00% 82.00% 72.00% 70.00% 89.00% 66.00% 60.00% 73.00% 68.00% 69.00% 78.00% 70.00% 66.00% 82.00% 71.00% 68.00% 68.00% 67.00% 64.00% 69.00% 71.00% 75.00% 80.00% 71.00% 63.00% 74.00% ------ 66.00% 73.00% 69.00% 68.00% 66.00% 69.00% 66.00% 67.00% 67.00% 69.00% 67.00% 63.00% 57.00% 53.00% 72.00% 54.00% 70.00% 53.00% 66.00% 66.00% 69.35%
70.00% 86.00% 91.00% 82.00% 94.00% 79.00% 86.00% 81.00% 78.00% 88.00% 77.00% 80.00% 71.00% 68.00% 66.00% 70.00% 63.00% 66.00% 67.00% 68.00% 59.00% 57.00% 53.00% 60.00% 70.00% 64.00% 63.00% 61.00% 61.00% 59.00% ------ 65.00% 60.00% 63.00% 62.00% 48.00% 64.00% 56.00% 57.00% 67.00% 60.00% 53.00% 56.00% 50.00% 61.00% 59.00% 49.00% 60.00% 52.00% 63.00% 66.18%
70.00% 89.00% 82.00% 83.00% 83.00% 72.00% 78.00% 77.00% 72.00% 71.00% 77.00% 71.00% 72.00% 57.00% 52.00% 52.00% 57.00% 56.00% 52.00% 57.00% 51.00% 54.00% 57.00% 70.00% 60.00% 45.00% 53.00% 60.00% 54.00% 58.00% 64.00% ------ 63.00% 55.00% 54.00% 34.00% 47.00% 50.00% 46.00% 49.00% 50.00% 54.00% 50.00% 51.00% 57.00% 49.00% 57.00% 46.00% 56.00% 50.00% 59.67%
64.00% 86.00% 86.00% 88.00% 84.00% 68.00% 84.00% 74.00% 75.00% 73.00% 71.00% 70.00% 71.00% 60.00% 60.00% 68.00% 59.00% 55.00% 55.00% 59.00% 57.00% 63.00% 58.00% 61.00% 55.00% 57.00% 59.00% 51.00% 55.00% 58.00% 53.00% 61.00% ------ 55.00% 53.00% 60.00% 60.00% 55.00% 50.00% 59.00% 53.00% 59.00% 53.00% 53.00% 61.00% 51.00% 50.00% 55.00% 52.00% 46.00% 61.69%
64.00% 82.00% 68.00% 83.00% 81.00% 84.00% 79.00% 83.00% 76.00% 73.00% 75.00% 75.00% 65.00% 86.00% 71.00% 70.00% 74.00% 62.00% 65.00% 64.00% 54.00% 69.00% 70.00% 70.00% 67.00% 70.00% 63.00% 64.00% 59.00% 58.00% 58.00% 66.00% 71.00% ------ 69.00% 64.00% 62.00% 54.00% 68.00% 57.00% 53.00% 54.00% 53.00% 55.00% 70.00% 60.00% 69.00% 56.00% 63.00% 63.00% 67.12%
64.00% 80.00% 71.00% 81.00% 80.00% 76.00% 73.00% 82.00% 79.00% 63.00% 77.00% 72.00% 70.00% 69.00% 72.00% 63.00% 68.00% 62.00% 61.00% 66.00% 58.00% 60.00% 71.00% 57.00% 69.00% 69.00% 69.00% 66.00% 63.00% 55.00% 62.00% 74.00% 64.00% 63.00% ------ 57.00% 70.00% 71.00% 61.00% 59.00% 59.00% 65.00% 53.00% 53.00% 67.00% 64.00% 62.00% 62.00% 60.00% 55.00% 66.27%
66.00% 83.00% 76.00% 83.00% 83.00% 71.00% 74.00% 90.00% 74.00% 73.00% 77.00% 71.00% 71.00% 82.00% 73.00% 77.00% 74.00% 65.00% 58.00% 68.00% 59.00% 77.00% 73.00% 55.00% 71.00% 71.00% 65.00% 58.00% 73.00% 65.00% 63.00% 68.00% 68.00% 66.00% 70.00% ------ 68.00% 64.00% 60.00% 61.00% 67.00% 65.00% 63.00% 59.00% 70.00% 65.00% 74.00% 57.00% 61.00% 62.00% 69.12%
72.00% 87.00% 76.00% 85.00% 82.00% 81.00% 83.00% 81.00% 76.00% 63.00% 70.00% 74.00% 72.00% 79.00% 75.00% 71.00% 76.00% 65.00% 52.00% 64.00% 66.00% 76.00% 66.00% 69.00% 63.00% 62.00% 67.00% 56.00% 73.00% 67.00% 71.00% 72.00% 72.00% 64.00% 64.00% 60.00% ------ 56.00% 64.00% 69.00% 56.00% 61.00% 62.00% 57.00% 60.00% 61.00% 62.00% 62.00% 55.00% 62.00% 68.14%
77.00% 81.00% 82.00% 89.00% 82.00% 82.00% 80.00% 87.00% 71.00% 76.00% 74.00% 70.00% 65.00% 77.00% 60.00% 70.00% 72.00% 66.00% 64.00% 70.00% 68.00% 69.00% 69.00% 66.00% 68.00% 69.00% 66.00% 65.00% 66.00% 63.00% 71.00% 76.00% 73.00% 61.00% 75.00% 57.00% 70.00% ------ 60.00% 63.00% 59.00% 61.00% 61.00% 52.00% 70.00% 69.00% 63.00% 61.00% 62.00% 58.00% 69.10%
65.00% 79.00% 74.00% 88.00% 86.00% 84.00% 85.00% 87.00% 76.00% 74.00% 74.00% 70.00% 74.00% 76.00% 70.00% 82.00% 72.00% 74.00% 68.00% 77.00% 64.00% 65.00% 63.00% 64.00% 66.00% 68.00% 61.00% 59.00% 75.00% 61.00% 68.00% 70.00% 69.00% 63.00% 63.00% 66.00% 66.00% 62.00% ------ 61.00% 59.00% 65.00% 64.00% 64.00% 67.00% 62.00% 63.00% 64.00% 65.00% 58.00% 69.39%
65.00% 82.00% 83.00% 84.00% 86.00% 76.00% 84.00% 80.00% 69.00% 79.00% 72.00% 76.00% 75.00% 63.00% 68.00% 86.00% 76.00% 67.00% 63.00% 65.00% 70.00% 67.00% 69.00% 65.00% 66.00% 61.00% 67.00% 62.00% 72.00% 57.00% 64.00% 77.00% 71.00% 63.00% 67.00% 64.00% 70.00% 62.00% 54.00% ------ 62.00% 59.00% 53.00% 65.00% 66.00% 69.00% 62.00% 59.00% 69.00% 66.00% 68.92%
76.00% 65.00% 56.00% 65.00% 67.00% 59.00% 61.00% 80.00% 60.00% 49.00% 50.00% 66.00% 51.00% 64.00% 63.00% 68.00% 75.00% 69.00% 65.00% 68.00% 61.00% 59.00% 67.00% 76.00% 67.00% 58.00% 66.00% 64.00% 60.00% 52.00% 64.00% 68.00% 68.00% 64.00% 62.00% 65.00% 68.00% 66.00% 58.00% 66.00% ------ 65.00% 56.00% 54.00% 71.00% 60.00% 61.00% 60.00% 66.00% 62.00% 63.49%
74.00% 82.00% 82.00% 87.00% 78.00% 74.00% 80.00% 80.00% 75.00% 80.00% 75.00% 65.00% 71.00% 79.00% 76.00% 73.00% 76.00% 70.00% 63.00% 66.00% 70.00% 75.00% 65.00% 72.00% 65.00% 64.00% 66.00% 70.00% 60.00% 57.00% 58.00% 70.00% 75.00% 63.00% 64.00% 64.00% 69.00% 61.00% 63.00% 61.00% 67.00% ------ 53.00% 61.00% 69.00% 68.00% 67.00% 59.00% 62.00% 68.00% 69.22%
75.00% 81.00% 79.00% 84.00% 80.00% 76.00% 81.00% 85.00% 69.00% 65.00% 71.00% 72.00% 68.00% 74.00% 76.00% 73.00% 72.00% 67.00% 63.00% 68.00% 65.00% 77.00% 71.00% 73.00% 73.00% 70.00% 71.00% 70.00% 64.00% 64.00% 63.00% 72.00% 67.00% 64.00% 66.00% 70.00% 79.00% 64.00% 68.00% 64.00% 62.00% 60.00% ------ 69.00% 81.00% 69.00% 67.00% 71.00% 75.00% 66.00% 70.90%
76.00% 84.00% 65.00% 78.00% 77.00% 70.00% 72.00% 90.00% 70.00% 62.00% 65.00% 70.00% 61.00% 73.00% 78.00% 73.00% 79.00% 70.00% 76.00% 70.00% 56.00% 72.00% 71.00% 68.00% 72.00% 68.00% 62.00% 57.00% 69.00% 74.00% 69.00% 75.00% 68.00% 64.00% 73.00% 71.00% 75.00% 55.00% 68.00% 64.00% 74.00% 66.00% 67.00% ------ 76.00% 61.00% 62.00% 62.00% 70.00% 68.00% 69.71%
71.00% 83.00% 77.00% 82.00% 81.00% 73.00% 83.00% 84.00% 78.00% 68.00% 71.00% 68.00% 72.00% 65.00% 63.00% 70.00% 59.00% 59.00% 58.00% 67.00% 59.00% 69.00% 59.00% 58.00% 51.00% 63.00% 57.00% 59.00% 65.00% 44.00% 66.00% 67.00% 64.00% 54.00% 54.00% 67.00% 50.00% 53.00% 56.00% 68.00% 50.00% 53.00% 42.00% 41.00% ------ 56.00% 52.00% 41.00% 52.00% 65.00% 62.59%
67.00% 82.00% 89.00% 89.00% 84.00% 77.00% 85.00% 82.00% 78.00% 75.00% 74.00% 75.00% 75.00% 73.00% 77.00% 80.00% 78.00% 66.00% 63.00% 61.00% 66.00% 78.00% 70.00% 64.00% 67.00% 65.00% 70.00% 75.00% 62.00% 56.00% 71.00% 78.00% 65.00% 67.00% 66.00% 68.00% 73.00% 64.00% 61.00% 59.00% 66.00% 57.00% 51.00% 67.00% 76.00% ------ 64.00% 63.00% 67.00% 57.00% 70.27%
69.00% 85.00% 84.00% 92.00% 85.00% 82.00% 77.00% 88.00% 79.00% 74.00% 74.00% 75.00% 79.00% 66.00% 68.00% 73.00% 68.00% 69.00% 71.00% 61.00% 53.00% 71.00% 69.00% 66.00% 66.00% 59.00% 57.00% 64.00% 71.00% 65.00% 59.00% 77.00% 69.00% 56.00% 69.00% 66.00% 58.00% 68.00% 61.00% 58.00% 70.00% 66.00% 68.00% 55.00% 75.00% 56.00% ------ 63.00% 63.00% 65.00% 69.02%
68.00% 85.00% 88.00% 86.00% 88.00% 82.00% 76.00% 84.00% 69.00% 66.00% 68.00% 79.00% 75.00% 71.00% 71.00% 82.00% 82.00% 65.00% 70.00% 62.00% 66.00% 65.00% 67.00% 66.00% 68.00% 67.00% 64.00% 69.00% 71.00% 66.00% 72.00% 78.00% 69.00% 64.00% 68.00% 58.00% 75.00% 71.00% 68.00% 62.00% 74.00% 63.00% 56.00% 48.00% 73.00% 60.00% 64.00% ------ 62.00% 73.00% 70.29%
70.00% 84.00% 80.00% 78.00% 83.00% 72.00% 81.00% 83.00% 68.00% 79.00% 69.00% 68.00% 76.00% 69.00% 73.00% 66.00% 74.00% 68.00% 74.00% 58.00% 68.00% 68.00% 62.00% 72.00% 69.00% 72.00% 70.00% 75.00% 59.00% 55.00% 68.00% 71.00% 67.00% 62.00% 64.00% 57.00% 70.00% 59.00% 57.00% 59.00% 68.00% 65.00% 55.00% 57.00% 64.00% 61.00% 62.00% 65.00% ------ 63.00% 68.10%
66.00% 76.00% 92.00% 82.00% 84.00% 85.00% 83.00% 85.00% 85.00% 67.00% 80.00% 76.00% 70.00% 70.00% 76.00% 70.00% 72.00% 71.00% 60.00% 67.00% 68.00% 63.00% 59.00% 75.00% 71.00% 59.00% 68.00% 64.00% 72.00% 59.00% 68.00% 76.00% 70.00% 60.00% 57.00% 63.00% 71.00% 58.00% 69.00% 56.00% 72.00% 62.00% 53.00% 63.00% 70.00% 52.00% 63.00% 60.00% 61.00% ------ 68.96%
