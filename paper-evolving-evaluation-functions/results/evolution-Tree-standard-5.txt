Parameters:
  ELITISM 5
  EVALUATOR_DRAFTS 10
  EVALUATOR_ROUNDS 10
  EVOLUTION_DRAFTS 10
  EVOLUTION_ROUNDS 10
  GENERATIONS 50
  INDIVIDUAL Tree
  MUTATION_RATE 0.05
  POPULATION 50
  SCORING standard

generation   1: 27.91s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasGuard]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasCharge]), Literal(0.18201971)])])])])]), FeatureAttack]), state_node: FeatureMeRune }
generation   2: 14.85s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasGuard]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasCharge]), Literal(0.18201971)])])])])]), FeatureAttack]), state_node: FeatureOpCurrentMana }
generation   3: 19.18s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasGuard]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasCharge]), Literal(0.59287)])])])])]), FeatureAttack]), state_node: FeatureOpCurrentMana }
generation   4: 22.79s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasGuard]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasCharge]), Literal(0.18201971)])])])])]), FeatureAttack]), state_node: FeatureOpCurrentMana }
generation   5: 27.74s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasGuard]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasCharge]), FeatureDefense])])])])]), FeatureAttack]), state_node: Literal(-0.8806615) }
generation   6: 32.77s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureAttack, FeatureHasGuard]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorMin([OperatorAdd([FeatureHasDrain, FeatureAttack, FeatureHasCharge]), Literal(0.18201971)]), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasCharge]), Literal(0.59287)])])])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation   7: 30.91s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasGuard]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasGuard])]), Literal(0.18201971)])])])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation   8: 38.06s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasLethal, Literal(0.59287), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasCharge, Literal(0.59287)]), FeatureHasCharge]), Literal(0.18201971)])])])])]), FeatureAttack]), state_node: FeatureOpCurrentMana }
generation   9: 30.30s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasGuard]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasCharge]), OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough]), Literal(0.18201971)]), OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, OperatorMul([Literal(-0.23851728), OperatorNeg(FeatureHasBreakthrough)])])]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureDefense, FeatureHasGuard])]), Literal(0.18201971)])])])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  10: 27.51s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureAttack, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasGuard]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, FeatureHasCharge, FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), Literal(-0.23851728)])]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureDefense, FeatureHasGuard])]), Literal(0.18201971)])])]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorMin([OperatorAdd([FeatureHasDrain, FeatureAttack, FeatureHasCharge]), Literal(0.18201971)]), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(0.18201971)])]), FeatureHasCharge]), Literal(0.59287)])])])])]), FeatureAttack]), state_node: OperatorNeg(FeatureMeDecksize) }
generation  11: 33.57s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])])])]), FeatureAttack]), state_node: FeatureOpCurrentMana }
generation  12: 34.26s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, FeatureHasWard])]), FeatureAttack]), state_node: FeatureOpCurrentMana }
generation  13: 38.31s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, FeatureHasWard])]), FeatureAttack]), state_node: FeatureOpCurrentMana }
generation  14: 43.77s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, FeatureHasWard])]), FeatureAttack]), state_node: FeatureOpCurrentMana }
generation  15: 45.65s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, FeatureHasWard])]), FeatureHasCharge]), state_node: FeatureMeRune }
generation  16: 39.85s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, OperatorMin([FeatureHasCharge, OperatorMax([FeatureHasDrain, FeatureHasBreakthrough, OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(Literal(0.59287))), FeatureHasWard])]), FeatureDefense, OperatorMin([OperatorAdd([OperatorNeg(FeatureHasCharge), OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasWard])]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasGuard])]), Literal(0.18201971)])])])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), FeatureHasCharge]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  17: 42.15s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, FeatureHasWard])]), FeatureHasCharge]), FeatureAttack]), state_node: FeatureMeRune }
generation  18: 54.46s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, FeatureHasWard])]), FeatureHasCharge]), FeatureAttack]), state_node: FeatureMeRune }
generation  19: 47.21s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureDefense, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasGuard])]), FeatureHasCharge]), Literal(0.59287)])]), FeatureHasBreakthrough])]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasGuard])]), state_node: OperatorNeg(FeatureMeRune) }
generation  20: 49.08s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, OperatorMin([FeatureHasCharge, OperatorMax([FeatureHasDrain, FeatureHasBreakthrough, OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(Literal(0.59287))), FeatureHasWard])]), FeatureDefense, OperatorMin([OperatorAdd([OperatorNeg(FeatureHasCharge), OperatorMul([OperatorAdd([FeatureHasGuard, FeatureHasWard]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasWard])]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasGuard])]), Literal(0.18201971)])])])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), FeatureHasCharge]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  21: 62.60s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureDefense, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasGuard, FeatureHasDrain, FeatureHasDrain])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])), FeatureHasBreakthrough])])]), FeatureHasCharge]), FeatureDefense, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)])])])])])]), FeatureAttack]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), FeatureHasCharge]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  22: 65.84s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, Literal(-0.23851728)])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureMeDecksize }
generation  23: 59.05s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, Literal(-0.23851728)])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureMeDecksize }
generation  24: 78.15s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, Literal(-0.23851728)])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureMeDecksize }
generation  25: 77.96s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureAttack])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, Literal(-0.23851728)])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpMaxMana }
generation  26: 53.69s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, Literal(-0.23851728)])]), OperatorMin([OperatorMin([OperatorMul([Literal(-0.23851728), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  27: 44.22s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  28: 47.00s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])), FeatureHasBreakthrough])])]), FeatureHasCharge]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), FeatureAttack]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  29: 54.59s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, Literal(-0.23851728)])]), OperatorMin([OperatorMin([OperatorMul([Literal(-0.23851728), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  30: 59.43s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  31: 72.35s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  32: 91.99s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureAttack, OperatorAdd([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasDrain, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureAttack, FeatureHasBreakthrough])), FeatureHasBreakthrough])])]), FeatureHasCharge]), FeatureDefense, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])])])]), FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureMeDecksize }
generation  33: 86.23s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([FeatureHasCharge, FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasCharge]), OperatorMax([FeatureHasDrain, FeatureHasGuard, Literal(-0.23851728)])]), OperatorMin([OperatorMin([OperatorMul([Literal(-0.23851728), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  34: 87.02s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, Literal(-0.23851728), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: Literal(-0.55909467) }
generation  35: 93.21s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([OperatorAdd([OperatorMul([FeatureAttack, OperatorMul([OperatorMul([FeatureHasGuard, FeatureHasDrain]), OperatorMul([FeatureAttack, OperatorNeg(FeatureHasCharge)])])]), FeatureHasDrain]), Literal(-0.23851728)])])])])])]), FeatureAttack]), state_node: FeatureMeMaxMana }
generation  36: 95.18s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([OperatorAdd([OperatorMul([FeatureAttack, OperatorMul([OperatorMul([FeatureHasGuard, FeatureHasDrain]), OperatorMul([FeatureAttack, OperatorNeg(FeatureHasCharge)])])]), FeatureHasDrain]), Literal(-0.23851728)])])])])])]), FeatureAttack]), state_node: FeatureMeMaxMana }
generation  37: 124.81s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])])])]), Literal(-0.23851728)]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack])]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureHasCharge]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), OperatorNeg(FeatureHasBreakthrough)]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  38: 133.88s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureHasCharge]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), FeatureAttack]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  39: 126.80s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])])])]), Literal(-0.23851728)]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack])]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureHasCharge]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), OperatorNeg(FeatureHasBreakthrough)]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  40: 163.76s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureHasCharge]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), FeatureAttack]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  41: 187.90s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])])])]), Literal(-0.23851728)]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack])]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureHasCharge]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), OperatorNeg(FeatureHasBreakthrough)]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  42: 169.18s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([FeatureHasCharge, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), Literal(0.18201971)]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), FeatureHasDrain]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  43: 171.77s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])), FeatureHasBreakthrough])])]), Literal(-0.23851728)]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])), FeatureHasBreakthrough])])]), FeatureHasCharge]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, OperatorMin([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([OperatorAdd([OperatorMul([FeatureAttack, OperatorMul([OperatorMul([FeatureHasGuard, FeatureHasDrain]), OperatorMul([FeatureAttack, OperatorNeg(FeatureHasCharge)])])]), FeatureHasDrain]), Literal(-0.23851728)])])])]), OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)])])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorAdd([FeatureAttack, OperatorMin([FeatureHasLethal, OperatorMin([FeatureAttack, OperatorAdd([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasWard, FeatureHasWard])]), Literal(0.18201971)])]), OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([FeatureHasCharge, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), Literal(0.18201971)]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), FeatureHasDrain]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])]), FeatureHasBreakthrough])])]), FeatureHasCharge]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])])])]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), FeatureAttack]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), OperatorMul([FeatureHasGuard, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, FeatureHasDrain]), FeatureHasCharge]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])])])]), OperatorMin([OperatorMin([OperatorMul([Literal(-0.23851728), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureHasWard])]))])]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)]), FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  44: 178.44s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorNeg(FeatureHasBreakthrough)])])]), FeatureAttack]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasCharge, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  45: 185.92s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, FeatureHasBreakthrough, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack])]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])])]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), OperatorNeg(FeatureHasBreakthrough)]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(OperatorNeg(FeatureHasBreakthrough))), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  46: 182.32s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, FeatureHasBreakthrough, OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([FeatureHasLethal, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureAttack])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorNeg(FeatureHasBreakthrough)])])]), FeatureAttack]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasBreakthrough)), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])])])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  47: 193.93s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, FeatureHasBreakthrough, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack])]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorNeg(FeatureHasBreakthrough)])])]), FeatureAttack]), FeatureAttack]), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])])]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), OperatorNeg(FeatureHasBreakthrough)]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(OperatorNeg(FeatureHasBreakthrough))), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureMeDecksize }
generation  48: 186.12s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, FeatureHasBreakthrough, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack])]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorNeg(FeatureHasBreakthrough)])])]), FeatureAttack]), FeatureAttack]), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])])]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), OperatorNeg(FeatureHasBreakthrough)]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(OperatorNeg(FeatureHasBreakthrough))), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureMeDecksize }
generation  49: 163.73s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, OperatorNeg(OperatorAdd([FeatureHasDrain, OperatorMul([OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, FeatureHasBreakthrough, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack])]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(OperatorMin([OperatorMul([FeatureAttack, OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorAdd([FeatureHasBreakthrough, FeatureDefense, FeatureHasBreakthrough])), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])])])]), Literal(-0.23851728)]))]), FeatureHasWard, FeatureHasGuard]), OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, Literal(-0.23851728), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])])]), FeatureAttack, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorMax([FeatureHasCharge, FeatureHasDrain, FeatureHasDrain]), FeatureHasBreakthrough, FeatureHasGuard])]), OperatorMin([FeatureHasCharge, OperatorMin([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorNeg(FeatureHasBreakthrough), FeatureHasDrain, FeatureHasLethal]), FeatureHasCharge]), FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(Literal(-0.23851728))]), FeatureHasWard, FeatureHasGuard])])])])])])])])]), OperatorNeg(FeatureHasBreakthrough)]), FeatureAttack]), OperatorMin([OperatorMin([OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(OperatorNeg(FeatureHasBreakthrough))), FeatureHasBreakthrough]), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]))])]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), Literal(0.59287)])])]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  50: 168.97s // best: TreeIndividual { card_node: OperatorAdd([OperatorMul([FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMin([OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorAdd([FeatureHasGuard, OperatorMin([FeatureHasLethal, OperatorMin([FeatureHasCharge, OperatorMin([OperatorMin([FeatureHasCharge, OperatorNeg(FeatureHasBreakthrough)]), FeatureHasWard, FeatureHasGuard]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMul([Literal(-0.23851728), OperatorAdd([FeatureHasBreakthrough, OperatorNeg(FeatureHasWard), FeatureHasBreakthrough])]), FeatureHasDrain]), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMin([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasGuard, Literal(-0.23851728)])]), OperatorMul([OperatorMul([Literal(-0.23851728), FeatureHasDrain]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), OperatorMin([OperatorAdd([FeatureHasDrain, OperatorNeg(FeatureHasCharge), OperatorMin([OperatorMin([OperatorNeg(FeatureHasCharge), OperatorNeg(FeatureHasCharge)]), FeatureHasBreakthrough, FeatureHasWard])]), Literal(0.18201971)])])]), OperatorMax([FeatureHasDrain, FeatureHasDrain, Literal(-0.23851728)])]), FeatureHasWard])])]), FeatureAttack]), state_node: FeatureOpMaxMana }
------ 63.00% 58.00% 60.00% 59.00% 57.00% 57.00% 63.00% 54.00% 59.00% 63.00% 60.00% 54.00% 51.00% 61.00% 37.00% 51.00% 57.00% 57.00% 53.00% 56.00% 56.00% 51.00% 53.00% 51.00% 46.00% 54.00% 45.00% 50.00% 51.00% 50.00% 66.00% 60.00% 49.00% 51.00% 45.00% 43.00% 48.00% 46.00% 50.00% 42.00% 49.00% 53.00% 52.00% 58.00% 48.00% 51.00% 54.00% 44.00% 48.00% 52.94%
64.00% ------ 60.00% 60.00% 54.00% 67.00% 67.00% 69.00% 66.00% 59.00% 68.00% 54.00% 56.00% 47.00% 59.00% 54.00% 64.00% 57.00% 62.00% 59.00% 53.00% 60.00% 54.00% 51.00% 51.00% 48.00% 54.00% 54.00% 49.00% 56.00% 45.00% 49.00% 39.00% 56.00% 48.00% 55.00% 50.00% 51.00% 43.00% 55.00% 47.00% 50.00% 56.00% 54.00% 51.00% 53.00% 52.00% 53.00% 48.00% 55.00% 54.82%
59.00% 65.00% ------ 59.00% 62.00% 75.00% 70.00% 58.00% 70.00% 54.00% 66.00% 51.00% 48.00% 58.00% 65.00% 54.00% 51.00% 62.00% 63.00% 52.00% 57.00% 50.00% 64.00% 48.00% 52.00% 51.00% 47.00% 54.00% 54.00% 64.00% 56.00% 54.00% 45.00% 51.00% 53.00% 59.00% 59.00% 56.00% 54.00% 51.00% 53.00% 55.00% 61.00% 44.00% 52.00% 55.00% 51.00% 50.00% 42.00% 55.00% 55.90%
54.00% 70.00% 67.00% ------ 56.00% 72.00% 57.00% 54.00% 65.00% 51.00% 68.00% 58.00% 48.00% 61.00% 67.00% 50.00% 62.00% 68.00% 56.00% 40.00% 57.00% 55.00% 59.00% 49.00% 57.00% 56.00% 47.00% 58.00% 53.00% 54.00% 53.00% 47.00% 50.00% 58.00% 44.00% 49.00% 60.00% 53.00% 47.00% 57.00% 53.00% 56.00% 59.00% 48.00% 54.00% 51.00% 56.00% 55.00% 49.00% 52.00% 55.51%
60.00% 60.00% 61.00% 69.00% ------ 63.00% 64.00% 56.00% 63.00% 54.00% 63.00% 53.00% 64.00% 53.00% 56.00% 46.00% 55.00% 67.00% 58.00% 58.00% 61.00% 60.00% 53.00% 62.00% 55.00% 51.00% 48.00% 64.00% 62.00% 45.00% 56.00% 53.00% 58.00% 55.00% 46.00% 53.00% 59.00% 58.00% 58.00% 55.00% 59.00% 59.00% 63.00% 53.00% 54.00% 62.00% 47.00% 65.00% 51.00% 54.00% 57.18%
67.00% 59.00% 63.00% 60.00% 63.00% ------ 59.00% 58.00% 59.00% 55.00% 66.00% 63.00% 44.00% 56.00% 54.00% 55.00% 55.00% 47.00% 54.00% 51.00% 58.00% 57.00% 46.00% 58.00% 50.00% 58.00% 55.00% 45.00% 54.00% 59.00% 53.00% 51.00% 52.00% 58.00% 55.00% 52.00% 52.00% 54.00% 57.00% 57.00% 55.00% 51.00% 58.00% 55.00% 58.00% 51.00% 56.00% 55.00% 47.00% 53.00% 55.27%
67.00% 62.00% 70.00% 60.00% 55.00% 57.00% ------ 66.00% 65.00% 57.00% 62.00% 48.00% 54.00% 59.00% 62.00% 59.00% 64.00% 62.00% 52.00% 51.00% 49.00% 49.00% 54.00% 52.00% 60.00% 50.00% 53.00% 50.00% 62.00% 53.00% 50.00% 53.00% 49.00% 54.00% 47.00% 45.00% 52.00% 50.00% 52.00% 56.00% 53.00% 57.00% 65.00% 52.00% 58.00% 59.00% 56.00% 66.00% 44.00% 63.00% 56.02%
53.00% 51.00% 55.00% 48.00% 59.00% 61.00% 58.00% ------ 67.00% 52.00% 58.00% 59.00% 54.00% 49.00% 56.00% 53.00% 48.00% 53.00% 60.00% 45.00% 49.00% 47.00% 47.00% 52.00% 50.00% 49.00% 50.00% 52.00% 51.00% 53.00% 53.00% 46.00% 49.00% 56.00% 34.00% 49.00% 60.00% 57.00% 54.00% 50.00% 48.00% 48.00% 53.00% 47.00% 55.00% 45.00% 54.00% 50.00% 49.00% 52.00% 52.00%
61.00% 60.00% 59.00% 69.00% 64.00% 61.00% 59.00% 71.00% ------ 70.00% 57.00% 51.00% 56.00% 61.00% 54.00% 56.00% 61.00% 61.00% 57.00% 56.00% 43.00% 50.00% 64.00% 53.00% 44.00% 44.00% 63.00% 45.00% 45.00% 54.00% 60.00% 56.00% 45.00% 65.00% 45.00% 47.00% 52.00% 57.00% 55.00% 55.00% 51.00% 56.00% 53.00% 56.00% 61.00% 49.00% 47.00% 52.00% 60.00% 60.00% 55.73%
67.00% 61.00% 64.00% 61.00% 52.00% 63.00% 68.00% 66.00% 57.00% ------ 69.00% 54.00% 60.00% 60.00% 62.00% 55.00% 59.00% 56.00% 65.00% 53.00% 64.00% 58.00% 58.00% 61.00% 59.00% 51.00% 49.00% 58.00% 55.00% 51.00% 61.00% 53.00% 59.00% 63.00% 36.00% 49.00% 51.00% 55.00% 64.00% 55.00% 50.00% 50.00% 54.00% 59.00% 46.00% 42.00% 54.00% 62.00% 50.00% 60.00% 56.92%
63.00% 53.00% 64.00% 55.00% 60.00% 58.00% 56.00% 54.00% 53.00% 58.00% ------ 55.00% 63.00% 57.00% 47.00% 58.00% 48.00% 51.00% 54.00% 45.00% 41.00% 36.00% 44.00% 51.00% 54.00% 60.00% 52.00% 41.00% 38.00% 53.00% 39.00% 56.00% 51.00% 59.00% 51.00% 58.00% 46.00% 47.00% 52.00% 51.00% 48.00% 52.00% 54.00% 54.00% 48.00% 52.00% 54.00% 54.00% 55.00% 47.00% 52.04%
65.00% 69.00% 63.00% 54.00% 63.00% 64.00% 70.00% 66.00% 53.00% 67.00% 66.00% ------ 64.00% 53.00% 69.00% 56.00% 64.00% 56.00% 49.00% 58.00% 57.00% 67.00% 60.00% 48.00% 59.00% 63.00% 56.00% 63.00% 64.00% 62.00% 64.00% 59.00% 60.00% 64.00% 43.00% 56.00% 62.00% 48.00% 59.00% 55.00% 64.00% 56.00% 56.00% 56.00% 57.00% 58.00% 56.00% 61.00% 61.00% 55.00% 59.55%
71.00% 68.00% 54.00% 66.00% 62.00% 68.00% 65.00% 68.00% 72.00% 57.00% 68.00% 56.00% ------ 62.00% 61.00% 60.00% 67.00% 57.00% 61.00% 54.00% 61.00% 53.00% 64.00% 52.00% 52.00% 57.00% 51.00% 52.00% 56.00% 64.00% 58.00% 58.00% 55.00% 64.00% 45.00% 50.00% 58.00% 67.00% 58.00% 63.00% 54.00% 67.00% 66.00% 61.00% 66.00% 56.00% 62.00% 58.00% 49.00% 61.00% 59.90%
74.00% 67.00% 64.00% 66.00% 70.00% 75.00% 69.00% 72.00% 62.00% 71.00% 68.00% 50.00% 59.00% ------ 72.00% 50.00% 59.00% 64.00% 67.00% 56.00% 64.00% 56.00% 66.00% 56.00% 59.00% 56.00% 54.00% 59.00% 56.00% 53.00% 62.00% 61.00% 60.00% 59.00% 49.00% 63.00% 57.00% 65.00% 63.00% 55.00% 53.00% 60.00% 72.00% 53.00% 64.00% 57.00% 59.00% 67.00% 57.00% 59.00% 61.41%
64.00% 62.00% 61.00% 53.00% 53.00% 58.00% 64.00% 55.00% 58.00% 71.00% 61.00% 49.00% 52.00% 56.00% ------ 53.00% 51.00% 49.00% 42.00% 61.00% 70.00% 57.00% 60.00% 53.00% 53.00% 67.00% 57.00% 57.00% 61.00% 53.00% 60.00% 63.00% 56.00% 63.00% 46.00% 52.00% 49.00% 54.00% 53.00% 57.00% 48.00% 62.00% 55.00% 51.00% 59.00% 68.00% 60.00% 57.00% 58.00% 66.00% 57.10%
77.00% 72.00% 72.00% 62.00% 66.00% 63.00% 75.00% 63.00% 77.00% 73.00% 59.00% 63.00% 55.00% 53.00% 62.00% ------ 68.00% 62.00% 56.00% 69.00% 62.00% 56.00% 55.00% 62.00% 62.00% 50.00% 61.00% 65.00% 64.00% 51.00% 52.00% 66.00% 63.00% 62.00% 43.00% 57.00% 62.00% 47.00% 63.00% 56.00% 58.00% 53.00% 59.00% 56.00% 47.00% 53.00% 49.00% 60.00% 65.00% 64.00% 60.61%
75.00% 61.00% 58.00% 64.00% 69.00% 59.00% 64.00% 59.00% 65.00% 56.00% 67.00% 55.00% 57.00% 62.00% 77.00% 47.00% ------ 55.00% 61.00% 54.00% 54.00% 62.00% 65.00% 61.00% 57.00% 65.00% 56.00% 61.00% 63.00% 57.00% 62.00% 61.00% 59.00% 67.00% 51.00% 48.00% 63.00% 59.00% 56.00% 66.00% 64.00% 60.00% 68.00% 59.00% 51.00% 55.00% 63.00% 65.00% 60.00% 64.00% 60.55%
65.00% 63.00% 65.00% 63.00% 66.00% 71.00% 68.00% 72.00% 52.00% 70.00% 56.00% 55.00% 64.00% 59.00% 62.00% 56.00% 56.00% ------ 49.00% 61.00% 59.00% 51.00% 66.00% 65.00% 57.00% 50.00% 65.00% 64.00% 52.00% 58.00% 60.00% 53.00% 55.00% 66.00% 49.00% 51.00% 55.00% 52.00% 51.00% 55.00% 57.00% 54.00% 61.00% 57.00% 61.00% 53.00% 60.00% 59.00% 59.00% 58.00% 58.90%
59.00% 58.00% 55.00% 64.00% 48.00% 53.00% 64.00% 66.00% 58.00% 54.00% 53.00% 48.00% 44.00% 60.00% 68.00% 53.00% 50.00% 58.00% ------ 53.00% 47.00% 45.00% 44.00% 48.00% 57.00% 44.00% 54.00% 46.00% 45.00% 47.00% 48.00% 44.00% 51.00% 53.00% 78.00% 74.00% 47.00% 38.00% 54.00% 48.00% 47.00% 47.00% 46.00% 47.00% 43.00% 45.00% 46.00% 41.00% 43.00% 63.00% 51.96%
74.00% 70.00% 71.00% 68.00% 70.00% 64.00% 73.00% 67.00% 67.00% 69.00% 71.00% 59.00% 66.00% 63.00% 63.00% 59.00% 69.00% 67.00% 59.00% ------ 46.00% 51.00% 59.00% 57.00% 56.00% 58.00% 61.00% 56.00% 60.00% 43.00% 55.00% 54.00% 55.00% 58.00% 52.00% 50.00% 62.00% 57.00% 57.00% 61.00% 52.00% 60.00% 67.00% 63.00% 60.00% 58.00% 60.00% 64.00% 51.00% 52.00% 60.49%
72.00% 70.00% 63.00% 69.00% 67.00% 71.00% 74.00% 73.00% 69.00% 65.00% 64.00% 58.00% 67.00% 56.00% 48.00% 59.00% 65.00% 53.00% 58.00% 55.00% ------ 67.00% 59.00% 60.00% 76.00% 54.00% 63.00% 56.00% 58.00% 64.00% 66.00% 53.00% 54.00% 63.00% 47.00% 41.00% 50.00% 56.00% 62.00% 54.00% 62.00% 54.00% 66.00% 47.00% 59.00% 53.00% 66.00% 55.00% 56.00% 59.00% 60.33%
72.00% 72.00% 59.00% 63.00% 69.00% 64.00% 60.00% 66.00% 64.00% 66.00% 62.00% 68.00% 55.00% 59.00% 57.00% 64.00% 57.00% 54.00% 63.00% 56.00% 58.00% ------ 57.00% 46.00% 62.00% 59.00% 62.00% 59.00% 54.00% 49.00% 57.00% 52.00% 58.00% 54.00% 54.00% 51.00% 47.00% 55.00% 59.00% 60.00% 60.00% 58.00% 64.00% 57.00% 55.00% 63.00% 60.00% 60.00% 52.00% 53.00% 58.88%
67.00% 74.00% 67.00% 60.00% 64.00% 61.00% 63.00% 66.00% 70.00% 70.00% 66.00% 68.00% 56.00% 55.00% 51.00% 60.00% 60.00% 62.00% 66.00% 61.00% 51.00% 54.00% ------ 64.00% 53.00% 61.00% 46.00% 69.00% 57.00% 56.00% 53.00% 56.00% 45.00% 56.00% 54.00% 48.00% 65.00% 59.00% 56.00% 49.00% 59.00% 55.00% 63.00% 69.00% 53.00% 62.00% 65.00% 58.00% 66.00% 67.00% 59.92%
73.00% 64.00% 65.00% 59.00% 66.00% 59.00% 64.00% 64.00% 61.00% 69.00% 68.00% 65.00% 61.00% 57.00% 52.00% 59.00% 65.00% 53.00% 66.00% 57.00% 54.00% 58.00% 51.00% ------ 59.00% 57.00% 56.00% 62.00% 61.00% 54.00% 56.00% 48.00% 54.00% 58.00% 44.00% 48.00% 57.00% 61.00% 53.00% 56.00% 66.00% 57.00% 65.00% 54.00% 60.00% 58.00% 48.00% 60.00% 60.00% 50.00% 58.61%
72.00% 69.00% 60.00% 64.00% 64.00% 65.00% 65.00% 72.00% 63.00% 59.00% 63.00% 58.00% 53.00% 62.00% 57.00% 64.00% 59.00% 64.00% 63.00% 48.00% 55.00% 57.00% 52.00% 54.00% ------ 60.00% 60.00% 58.00% 48.00% 56.00% 54.00% 59.00% 53.00% 58.00% 48.00% 48.00% 55.00% 51.00% 55.00% 55.00% 52.00% 61.00% 66.00% 65.00% 55.00% 54.00% 56.00% 51.00% 60.00% 51.00% 58.18%
62.00% 70.00% 67.00% 67.00% 72.00% 68.00% 63.00% 66.00% 62.00% 66.00% 72.00% 69.00% 59.00% 68.00% 51.00% 61.00% 61.00% 60.00% 55.00% 58.00% 57.00% 54.00% 54.00% 49.00% 59.00% ------ 49.00% 62.00% 52.00% 57.00% 52.00% 60.00% 59.00% 66.00% 55.00% 59.00% 54.00% 48.00% 50.00% 54.00% 55.00% 59.00% 58.00% 58.00% 58.00% 56.00% 65.00% 59.00% 59.00% 53.00% 59.33%
65.00% 65.00% 75.00% 73.00% 71.00% 65.00% 75.00% 72.00% 68.00% 66.00% 64.00% 62.00% 64.00% 64.00% 52.00% 65.00% 51.00% 62.00% 65.00% 62.00% 59.00% 54.00% 53.00% 57.00% 62.00% 52.00% ------ 53.00% 47.00% 62.00% 58.00% 50.00% 59.00% 72.00% 39.00% 53.00% 57.00% 66.00% 61.00% 63.00% 54.00% 58.00% 58.00% 56.00% 51.00% 63.00% 53.00% 45.00% 53.00% 55.00% 59.78%
60.00% 74.00% 72.00% 62.00% 67.00% 65.00% 60.00% 63.00% 63.00% 66.00% 75.00% 65.00% 69.00% 71.00% 61.00% 58.00% 61.00% 65.00% 60.00% 66.00% 62.00% 58.00% 64.00% 57.00% 55.00% 65.00% 52.00% ------ 57.00% 54.00% 64.00% 57.00% 44.00% 74.00% 46.00% 46.00% 51.00% 58.00% 55.00% 65.00% 64.00% 54.00% 65.00% 52.00% 54.00% 49.00% 56.00% 53.00% 59.00% 49.00% 60.04%
62.00% 69.00% 67.00% 55.00% 68.00% 67.00% 66.00% 62.00% 65.00% 65.00% 59.00% 53.00% 55.00% 56.00% 55.00% 48.00% 53.00% 64.00% 64.00% 58.00% 52.00% 55.00% 63.00% 53.00% 57.00% 58.00% 51.00% 59.00% ------ 58.00% 39.00% 59.00% 62.00% 65.00% 54.00% 42.00% 57.00% 61.00% 58.00% 59.00% 61.00% 55.00% 59.00% 52.00% 54.00% 55.00% 55.00% 53.00% 60.00% 55.00% 57.80%
60.00% 69.00% 72.00% 72.00% 68.00% 75.00% 66.00% 69.00% 65.00% 64.00% 72.00% 50.00% 52.00% 59.00% 48.00% 54.00% 66.00% 53.00% 60.00% 59.00% 55.00% 56.00% 58.00% 52.00% 58.00% 54.00% 58.00% 55.00% 59.00% ------ 59.00% 66.00% 61.00% 66.00% 66.00% 53.00% 60.00% 58.00% 57.00% 53.00% 71.00% 66.00% 58.00% 56.00% 62.00% 65.00% 60.00% 67.00% 61.00% 51.00% 60.69%
66.00% 60.00% 67.00% 73.00% 68.00% 66.00% 60.00% 62.00% 68.00% 68.00% 68.00% 61.00% 63.00% 58.00% 52.00% 67.00% 60.00% 63.00% 65.00% 58.00% 54.00% 57.00% 61.00% 62.00% 70.00% 50.00% 62.00% 54.00% 62.00% 54.00% ------ 52.00% 53.00% 69.00% 57.00% 48.00% 68.00% 58.00% 62.00% 59.00% 61.00% 46.00% 63.00% 52.00% 58.00% 60.00% 56.00% 49.00% 68.00% 53.00% 60.22%
65.00% 70.00% 73.00% 66.00% 66.00% 76.00% 63.00% 64.00% 64.00% 76.00% 73.00% 54.00% 57.00% 55.00% 45.00% 62.00% 63.00% 58.00% 60.00% 55.00% 58.00% 50.00% 65.00% 63.00% 53.00% 54.00% 56.00% 51.00% 56.00% 62.00% 60.00% ------ 59.00% 64.00% 37.00% 47.00% 55.00% 58.00% 60.00% 56.00% 51.00% 59.00% 59.00% 57.00% 58.00% 60.00% 61.00% 56.00% 55.00% 57.00% 59.22%
65.00% 70.00% 66.00% 59.00% 69.00% 72.00% 70.00% 61.00% 75.00% 65.00% 66.00% 53.00% 69.00% 69.00% 52.00% 54.00% 66.00% 61.00% 60.00% 59.00% 54.00% 57.00% 58.00% 56.00% 66.00% 52.00% 57.00% 57.00% 56.00% 59.00% 60.00% 58.00% ------ 60.00% 46.00% 58.00% 57.00% 59.00% 55.00% 53.00% 50.00% 60.00% 61.00% 59.00% 51.00% 53.00% 63.00% 50.00% 59.00% 57.00% 59.63%
68.00% 59.00% 68.00% 69.00% 62.00% 68.00% 64.00% 59.00% 67.00% 68.00% 66.00% 54.00% 59.00% 55.00% 60.00% 50.00% 62.00% 52.00% 62.00% 60.00% 50.00% 52.00% 51.00% 58.00% 63.00% 58.00% 56.00% 47.00% 58.00% 56.00% 52.00% 52.00% 54.00% ------ 46.00% 50.00% 57.00% 48.00% 50.00% 57.00% 54.00% 50.00% 56.00% 53.00% 58.00% 56.00% 59.00% 53.00% 52.00% 49.00% 56.88%
65.00% 69.00% 52.00% 62.00% 63.00% 60.00% 69.00% 62.00% 64.00% 63.00% 55.00% 68.00% 67.00% 56.00% 60.00% 64.00% 67.00% 64.00% 31.00% 56.00% 67.00% 65.00% 68.00% 60.00% 65.00% 59.00% 62.00% 54.00% 61.00% 58.00% 57.00% 59.00% 57.00% 56.00% ------ 45.00% 58.00% 63.00% 67.00% 57.00% 59.00% 57.00% 63.00% 57.00% 58.00% 47.00% 64.00% 62.00% 52.00% 78.00% 60.24%
61.00% 67.00% 65.00% 63.00% 67.00% 62.00% 64.00% 55.00% 66.00% 69.00% 53.00% 55.00% 61.00% 62.00% 56.00% 69.00% 71.00% 55.00% 36.00% 62.00% 63.00% 62.00% 68.00% 65.00% 68.00% 61.00% 61.00% 58.00% 60.00% 51.00% 58.00% 68.00% 61.00% 51.00% 59.00% ------ 57.00% 60.00% 54.00% 57.00% 59.00% 53.00% 65.00% 56.00% 59.00% 53.00% 63.00% 62.00% 57.00% 78.00% 60.53%
73.00% 68.00% 69.00% 72.00% 66.00% 67.00% 68.00% 68.00% 63.00% 72.00% 74.00% 63.00% 69.00% 63.00% 57.00% 56.00% 65.00% 58.00% 69.00% 55.00% 56.00% 61.00% 59.00% 61.00% 57.00% 55.00% 57.00% 53.00% 62.00% 60.00% 57.00% 57.00% 50.00% 72.00% 51.00% 51.00% ------ 61.00% 57.00% 56.00% 61.00% 61.00% 64.00% 48.00% 59.00% 67.00% 59.00% 53.00% 57.00% 59.00% 61.14%
64.00% 66.00% 61.00% 67.00% 72.00% 63.00% 70.00% 75.00% 66.00% 78.00% 72.00% 66.00% 55.00% 70.00% 55.00% 64.00% 62.00% 63.00% 69.00% 64.00% 69.00% 47.00% 57.00% 56.00% 53.00% 57.00% 60.00% 54.00% 55.00% 58.00% 50.00% 53.00% 52.00% 67.00% 39.00% 53.00% 57.00% ------ 59.00% 61.00% 48.00% 47.00% 51.00% 54.00% 54.00% 42.00% 71.00% 56.00% 55.00% 46.00% 59.24%
72.00% 68.00% 70.00% 67.00% 67.00% 59.00% 71.00% 62.00% 68.00% 69.00% 67.00% 60.00% 64.00% 55.00% 57.00% 55.00% 70.00% 65.00% 67.00% 48.00% 61.00% 55.00% 55.00% 51.00% 64.00% 64.00% 58.00% 54.00% 53.00% 58.00% 55.00% 57.00% 53.00% 68.00% 53.00% 55.00% 58.00% 60.00% ------ 60.00% 54.00% 64.00% 57.00% 57.00% 59.00% 48.00% 64.00% 55.00% 54.00% 57.00% 60.04%
68.00% 60.00% 64.00% 71.00% 68.00% 68.00% 67.00% 66.00% 61.00% 71.00% 67.00% 62.00% 61.00% 60.00% 48.00% 54.00% 60.00% 64.00% 70.00% 56.00% 69.00% 58.00% 61.00% 57.00% 58.00% 50.00% 60.00% 50.00% 59.00% 60.00% 62.00% 52.00% 61.00% 54.00% 63.00% 53.00% 54.00% 51.00% 65.00% ------ 60.00% 56.00% 55.00% 55.00% 55.00% 57.00% 56.00% 56.00% 60.00% 59.00% 59.84%
69.00% 68.00% 76.00% 66.00% 73.00% 66.00% 71.00% 56.00% 74.00% 67.00% 76.00% 64.00% 56.00% 47.00% 51.00% 65.00% 62.00% 67.00% 64.00% 57.00% 55.00% 59.00% 55.00% 52.00% 66.00% 58.00% 50.00% 62.00% 64.00% 52.00% 58.00% 53.00% 53.00% 69.00% 61.00% 59.00% 51.00% 52.00% 59.00% 55.00% ------ 64.00% 48.00% 54.00% 55.00% 50.00% 62.00% 55.00% 55.00% 50.00% 59.82%
70.00% 72.00% 70.00% 65.00% 65.00% 67.00% 67.00% 66.00% 71.00% 67.00% 66.00% 57.00% 61.00% 69.00% 53.00% 59.00% 62.00% 60.00% 65.00% 58.00% 57.00% 55.00% 55.00% 60.00% 64.00% 57.00% 58.00% 49.00% 58.00% 55.00% 53.00% 63.00% 67.00% 56.00% 48.00% 49.00% 57.00% 44.00% 62.00% 61.00% 55.00% ------ 61.00% 53.00% 46.00% 61.00% 65.00% 55.00% 57.00% 54.00% 59.69%
72.00% 59.00% 59.00% 63.00% 64.00% 67.00% 66.00% 73.00% 62.00% 70.00% 65.00% 53.00% 60.00% 65.00% 49.00% 54.00% 61.00% 61.00% 61.00% 54.00% 58.00% 51.00% 54.00% 50.00% 59.00% 58.00% 52.00% 50.00% 53.00% 60.00% 55.00% 57.00% 50.00% 69.00% 37.00% 45.00% 67.00% 54.00% 58.00% 59.00% 52.00% 59.00% ------ 54.00% 60.00% 58.00% 52.00% 56.00% 55.00% 49.00% 57.73%
77.00% 71.00% 64.00% 57.00% 74.00% 69.00% 68.00% 62.00% 69.00% 64.00% 75.00% 67.00% 61.00% 67.00% 51.00% 60.00% 67.00% 67.00% 57.00% 64.00% 64.00% 53.00% 54.00% 55.00% 61.00% 57.00% 54.00% 51.00% 51.00% 58.00% 59.00% 62.00% 53.00% 61.00% 51.00% 57.00% 56.00% 60.00% 64.00% 56.00% 55.00% 55.00% 58.00% ------ 64.00% 52.00% 55.00% 52.00% 64.00% 49.00% 60.24%
68.00% 57.00% 71.00% 67.00% 69.00% 63.00% 67.00% 69.00% 67.00% 70.00% 68.00% 65.00% 58.00% 59.00% 64.00% 70.00% 65.00% 56.00% 68.00% 64.00% 60.00% 56.00% 53.00% 57.00% 61.00% 59.00% 61.00% 57.00% 52.00% 59.00% 51.00% 54.00% 61.00% 66.00% 60.00% 44.00% 57.00% 59.00% 50.00% 64.00% 61.00% 55.00% 63.00% 66.00% ------ 55.00% 48.00% 64.00% 62.00% 55.00% 60.71%
68.00% 65.00% 70.00% 68.00% 65.00% 66.00% 66.00% 68.00% 69.00% 67.00% 70.00% 57.00% 67.00% 68.00% 47.00% 60.00% 61.00% 60.00% 71.00% 60.00% 59.00% 66.00% 58.00% 55.00% 58.00% 55.00% 59.00% 57.00% 54.00% 52.00% 60.00% 66.00% 63.00% 62.00% 49.00% 57.00% 72.00% 60.00% 62.00% 57.00% 63.00% 58.00% 61.00% 58.00% 61.00% ------ 55.00% 57.00% 59.00% 57.00% 61.29%
64.00% 75.00% 72.00% 68.00% 56.00% 66.00% 78.00% 63.00% 67.00% 54.00% 78.00% 51.00% 42.00% 54.00% 46.00% 52.00% 64.00% 66.00% 66.00% 53.00% 45.00% 53.00% 57.00% 61.00% 63.00% 55.00% 55.00% 52.00% 56.00% 49.00% 52.00% 59.00% 63.00% 55.00% 51.00% 53.00% 57.00% 61.00% 58.00% 54.00% 55.00% 64.00% 65.00% 56.00% 58.00% 51.00% ------ 59.00% 58.00% 45.00% 58.27%
68.00% 66.00% 67.00% 69.00% 66.00% 68.00% 70.00% 70.00% 69.00% 68.00% 63.00% 67.00% 59.00% 52.00% 63.00% 52.00% 57.00% 56.00% 60.00% 61.00% 52.00% 61.00% 53.00% 55.00% 50.00% 59.00% 56.00% 59.00% 49.00% 53.00% 53.00% 52.00% 46.00% 63.00% 56.00% 53.00% 58.00% 57.00% 57.00% 54.00% 60.00% 49.00% 55.00% 54.00% 54.00% 61.00% 60.00% ------ 64.00% 63.00% 58.92%
64.00% 71.00% 75.00% 65.00% 67.00% 66.00% 67.00% 65.00% 64.00% 68.00% 69.00% 57.00% 57.00% 58.00% 52.00% 65.00% 64.00% 63.00% 71.00% 61.00% 61.00% 62.00% 51.00% 52.00% 63.00% 61.00% 56.00% 53.00% 52.00% 64.00% 53.00% 51.00% 54.00% 60.00% 53.00% 57.00% 65.00% 60.00% 62.00% 54.00% 54.00% 47.00% 62.00% 59.00% 63.00% 62.00% 55.00% 58.00% ------ 48.00% 60.02%
64.00% 67.00% 58.00% 70.00% 69.00% 65.00% 64.00% 62.00% 65.00% 73.00% 57.00% 60.00% 50.00% 58.00% 37.00% 66.00% 66.00% 55.00% 46.00% 65.00% 70.00% 62.00% 66.00% 64.00% 62.00% 56.00% 61.00% 67.00% 61.00% 65.00% 58.00% 61.00% 54.00% 57.00% 37.00% 37.00% 65.00% 68.00% 60.00% 70.00% 62.00% 61.00% 61.00% 66.00% 62.00% 52.00% 64.00% 65.00% 62.00% ------ 60.67%
