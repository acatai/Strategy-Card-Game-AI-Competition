Parameters:
  ELITISM 5
  EVALUATOR_DRAFTS 10
  EVALUATOR_ROUNDS 10
  EVOLUTION_DRAFTS 10
  EVOLUTION_ROUNDS 10
  GENERATIONS 50
  INDIVIDUAL Tree
  MUTATION_RATE 0.05
  POPULATION 50
  SCORING baseline

generation   1: 15.03s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, FeatureHasCharge]), FeatureHasCharge, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), FeatureHasCharge, FeatureAttack]), state_node: FeatureOpMaxMana }
generation   2: 13.53s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, FeatureHasCharge]), FeatureHasCharge, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), FeatureHasCharge, FeatureAttack]), state_node: FeatureOpMaxMana }
generation   3: 12.17s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack]), OperatorMin([OperatorMin([FeatureHasCharge, FeatureHasCharge]), FeatureHasCharge, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), FeatureHasCharge, FeatureAttack]), state_node: FeatureOpMaxMana }
generation   4: 12.64s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack]), OperatorMin([FeatureHasCharge, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), FeatureHasCharge, FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation   5: 14.71s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack]), OperatorMin([FeatureHasCharge, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), FeatureHasCharge, FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation   6: 15.65s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack]), OperatorMin([FeatureHasCharge, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), FeatureHasCharge, FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation   7: 17.57s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureHasCharge, FeatureAttack]), state_node: OperatorNeg(FeatureMeDecksize) }
generation   8: 20.61s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack]), state_node: FeatureMeDecksize }
generation   9: 21.71s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack]), OperatorNeg(OperatorMin([OperatorMin([OperatorNeg(OperatorMax([FeatureAttack, OperatorMax([FeatureHasWard, OperatorMin([OperatorNeg(OperatorMul([FeatureHasLethal, OperatorMax([FeatureHasBreakthrough, FeatureHasBreakthrough, FeatureHasDrain, OperatorAdd([FeatureHasDrain, OperatorNeg(FeatureHasLethal), FeatureDefense, OperatorMul([FeatureHasGuard, FeatureHasWard])])]), FeatureAttack])), OperatorMin([OperatorMin([OperatorMin([FeatureHasBreakthrough, OperatorAdd([OperatorMin([FeatureHasBreakthrough, FeatureHasLethal]), OperatorNeg(OperatorMax([FeatureHasGuard, FeatureHasLethal, OperatorMin([FeatureHasGuard, FeatureHasCharge, Literal(0.34148693)])]))])]), OperatorAdd([FeatureHasWard, Literal(-0.026201725)]), FeatureHasWard]), OperatorMin([OperatorMin([FeatureDefense, FeatureHasCharge]), FeatureHasCharge, FeatureHasCharge]), OperatorNeg(FeatureHasBreakthrough), FeatureHasGuard])])])])), FeatureHasDrain]), FeatureHasLethal, OperatorAdd([FeatureHasBreakthrough, OperatorNeg(OperatorNeg(FeatureHasLethal)), OperatorAdd([FeatureHasBreakthrough, FeatureHasDrain, FeatureHasLethal]), OperatorNeg(OperatorMul([FeatureHasDrain, FeatureHasWard, FeatureDefense]))])])), OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack]), FeatureHasDrain]), FeatureHasCharge, FeatureAttack]), state_node: FeatureMeHealth }
generation  10: 20.10s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureHasBreakthrough, OperatorMin([FeatureAttack, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  11: 25.03s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([OperatorMin([FeatureAttack, FeatureHasCharge, FeatureDefense, OperatorMin([FeatureHasDrain, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge])])]), FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, OperatorMin([OperatorNeg(OperatorMul([FeatureHasLethal, OperatorMax([FeatureHasBreakthrough, FeatureHasBreakthrough, FeatureHasDrain, OperatorAdd([FeatureHasDrain, OperatorNeg(FeatureHasLethal), FeatureDefense, OperatorMul([FeatureHasGuard, FeatureHasWard])])]), FeatureAttack])), OperatorMin([OperatorMin([OperatorMin([FeatureHasBreakthrough, OperatorAdd([OperatorMin([FeatureHasBreakthrough, FeatureHasLethal]), OperatorNeg(OperatorMax([FeatureHasGuard, FeatureHasLethal, OperatorMin([FeatureHasGuard, FeatureHasCharge, Literal(0.34148693)])]))])]), OperatorAdd([FeatureHasWard, Literal(-0.026201725)]), FeatureHasWard]), OperatorMin([OperatorMin([FeatureDefense, FeatureHasCharge]), FeatureHasCharge, FeatureHasCharge]), OperatorNeg(FeatureHasBreakthrough), FeatureHasGuard])]), FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack]), state_node: FeatureOpMaxMana }
generation  12: 25.27s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  13: 27.63s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  14: 19.33s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack]), FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  15: 22.35s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, FeatureAttack, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([FeatureHasDrain, FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  16: 21.45s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, FeatureAttack, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([FeatureHasDrain, FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  17: 21.17s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureHasBreakthrough, OperatorMin([FeatureAttack, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureDefense, FeatureHasLethal, OperatorAdd([FeatureHasLethal, OperatorMul([FeatureHasBreakthrough, OperatorMin([FeatureAttack, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureDefense, FeatureDefense, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack])]), FeatureAttack, OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMax([FeatureHasGuard, Literal(0.22555518), OperatorMin([FeatureHasLethal, FeatureHasBreakthrough, FeatureHasCharge]), FeatureHasCharge]), OperatorNeg(Literal(0.3660717))])]), FeatureHasDrain]), FeatureAttack]), state_node: OperatorNeg(FeatureOpHealth) }
generation  18: 27.46s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureHasBreakthrough, OperatorMin([FeatureAttack, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureDefense, FeatureHasLethal, OperatorAdd([FeatureHasLethal, OperatorMul([FeatureHasBreakthrough, OperatorMin([FeatureAttack, FeatureHasCharge, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureDefense, FeatureDefense, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack])]), FeatureAttack, OperatorAdd([FeatureHasDrain, OperatorMul([OperatorMax([FeatureHasGuard, Literal(0.22555518), OperatorMin([FeatureHasLethal, FeatureHasBreakthrough, FeatureHasCharge]), FeatureHasCharge]), OperatorNeg(Literal(0.3660717))])]), FeatureHasDrain]), FeatureAttack]), state_node: OperatorNeg(FeatureOpHealth) }
generation  19: 21.75s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  20: 20.50s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, FeatureHasCharge, FeatureHasCharge, FeatureHasDrain]), OperatorMul([FeatureAttack, FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  21: 18.58s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  22: 23.01s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, OperatorMul([FeatureHasDrain, FeatureHasCharge]), FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  23: 26.41s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, FeatureAttack, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasDrain])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  24: 28.85s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([FeatureAttack, OperatorMin([FeatureAttack, FeatureAttack, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasDrain])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  25: 25.93s // best: TreeIndividual { card_node: OperatorAdd([OperatorMin([FeatureAttack, FeatureHasCharge, OperatorMul([FeatureAttack, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureAttack, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])])]), OperatorMul([FeatureHasWard, OperatorAdd([FeatureAttack, FeatureDefense, FeatureDefense, FeatureAttack])])]), OperatorMin([FeatureHasBreakthrough, OperatorAdd([FeatureHasCharge, FeatureHasGuard])]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  26: 28.92s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorMin([FeatureAttack, FeatureAttack, OperatorAdd([FeatureHasLethal, FeatureHasDrain, OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge]), FeatureAttack]), OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureHasLethal, FeatureAttack])]), FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasCharge]), FeatureAttack]), OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasLethal, FeatureHasCharge]), FeatureHasLethal, FeatureHasLethal]), OperatorMin([FeatureAttack, FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureAttack])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  27: 35.55s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorMin([FeatureAttack, FeatureAttack, OperatorAdd([FeatureHasLethal, FeatureHasDrain, OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge]), FeatureAttack]), OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureHasLethal, FeatureAttack])]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge]), FeatureAttack]), OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasLethal, FeatureHasCharge]), FeatureHasLethal, FeatureHasLethal]), OperatorMin([FeatureAttack, FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureAttack])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  28: 37.01s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorMin([FeatureAttack, FeatureAttack, OperatorAdd([FeatureHasLethal, FeatureHasDrain, OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge]), FeatureAttack]), OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureHasLethal, FeatureAttack])]), FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasCharge]), FeatureAttack]), OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasLethal, FeatureHasCharge]), FeatureHasLethal, FeatureHasLethal]), OperatorMin([FeatureAttack, FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureAttack])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  29: 40.35s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  30: 36.33s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  31: 43.46s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMin([OperatorAdd([FeatureDefense, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorMin([FeatureAttack, FeatureAttack, OperatorAdd([FeatureHasLethal, FeatureHasDrain, OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge]), FeatureAttack]), OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureAttack, FeatureHasCharge, FeatureHasLethal, FeatureHasCharge]), FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureHasLethal, FeatureAttack])]), FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasCharge]), FeatureAttack]), OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasLethal, FeatureHasCharge]), FeatureHasLethal, FeatureHasLethal]), OperatorMin([FeatureAttack, FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureAttack])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureHasDrain]), FeatureAttack]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal, FeatureHasDrain]), FeatureAttack]), FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: OperatorNeg(FeatureOpHealth) }
generation  32: 41.71s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMin([OperatorAdd([FeatureDefense, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorMin([FeatureAttack, FeatureAttack, OperatorAdd([FeatureHasLethal, FeatureHasDrain, OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge]), FeatureAttack]), OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureAttack, FeatureHasCharge, FeatureHasLethal, FeatureHasCharge]), FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureHasLethal, FeatureAttack])]), FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasCharge]), FeatureAttack]), OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasLethal, FeatureHasCharge]), FeatureHasLethal, FeatureHasLethal]), OperatorMin([FeatureAttack, FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureAttack])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureHasDrain]), FeatureAttack]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal, FeatureHasDrain]), FeatureAttack]), FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: OperatorNeg(FeatureOpHealth) }
generation  33: 42.94s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasCharge, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])]), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  34: 51.69s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasDrain, OperatorMul([FeatureAttack, OperatorMin([OperatorAdd([FeatureDefense, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorMin([FeatureAttack, FeatureAttack, OperatorAdd([FeatureHasLethal, FeatureHasDrain, OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureDefense, OperatorMul([FeatureHasCharge, FeatureHasCharge]), FeatureAttack]), OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureAttack, FeatureHasCharge, FeatureHasLethal, FeatureHasCharge]), FeatureHasLethal, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureHasLethal, FeatureAttack])]), FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureAttack])]), FeatureAttack, FeatureAttack, FeatureHasCharge]), FeatureAttack]), OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasLethal, FeatureHasCharge]), FeatureHasLethal, FeatureHasLethal]), OperatorMin([FeatureAttack, FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureAttack])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureHasDrain]), FeatureAttack]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal, FeatureHasDrain]), FeatureAttack]), FeatureAttack, FeatureHasDrain, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasCharge, FeatureHasDrain]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, FeatureAttack]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: OperatorNeg(FeatureOpHealth) }
generation  35: 50.52s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasCharge, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorAdd([FeatureDefense, FeatureHasDrain, FeatureHasLethal, FeatureAttack])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  36: 53.36s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasCharge, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])]), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  37: 48.68s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasCharge, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge]), FeatureAttack]), FeatureHasCharge, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorAdd([FeatureDefense, OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorAdd([FeatureDefense, FeatureHasDrain, FeatureHasLethal, FeatureAttack])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  38: 54.69s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasCharge, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  39: 63.22s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasCharge, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  40: 50.06s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasCharge, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  41: 48.83s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasDrain, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  42: 54.95s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([OperatorMin([FeatureAttack, FeatureAttack, FeatureDefense, OperatorMul([FeatureAttack, FeatureHasCharge])]), FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasCharge, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureDefense]), Literal(0.92770195), FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureMeDecksize }
generation  43: 54.81s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasDrain, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasBreakthrough, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  44: 50.48s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureAttack, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasDrain, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasBreakthrough, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  45: 54.79s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasLethal), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureDefense, OperatorMul([OperatorMul([OperatorAdd([OperatorAdd([FeatureDefense, FeatureHasLethal, FeatureAttack, FeatureAttack]), FeatureHasDrain, FeatureDefense, FeatureHasCharge]), FeatureAttack, FeatureAttack, FeatureHasDrain]), OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  46: 44.90s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  47: 60.55s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  48: 67.81s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  49: 62.95s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
generation  50: 71.06s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, OperatorMin([OperatorNeg(OperatorMax([OperatorNeg(FeatureHasBreakthrough), OperatorMax([FeatureDefense, FeatureHasLethal, FeatureHasBreakthrough]), OperatorMin([FeatureHasGuard, FeatureHasCharge])])), FeatureDefense, Literal(-0.7795334)]), OperatorMul([OperatorAdd([FeatureHasLethal, FeatureAttack, FeatureAttack, OperatorMul([FeatureHasLethal, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, OperatorAdd([FeatureDefense, FeatureHasCharge, FeatureHasLethal, FeatureHasDrain]), FeatureAttack, OperatorMin([OperatorNeg(OperatorMul([OperatorAdd([FeatureAttack, OperatorAdd([FeatureDefense, FeatureDefense, FeatureHasLethal, FeatureAttack]), FeatureDefense, FeatureHasDrain]), FeatureAttack, FeatureAttack, FeatureHasCharge])), FeatureDefense, Literal(-0.7795334)])]), FeatureHasLethal, FeatureAttack]), FeatureAttack, FeatureHasCharge])]), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureAttack]), state_node: FeatureOpNextTurnDraw }
------ 51.00% 58.00% 64.00% 56.00% 55.00% 76.00% 66.00% 80.00% 63.00% 77.00% 72.00% 74.00% 65.00% 67.00% 64.00% 73.00% 69.00% 61.00% 69.00% 69.00% 62.00% 68.00% 62.00% 64.00% 72.00% 59.00% 77.00% 69.00% 72.00% 63.00% 57.00% 65.00% 63.00% 68.00% 73.00% 66.00% 66.00% 71.00% 67.00% 71.00% 67.00% 62.00% 65.00% 78.00% 70.00% 71.00% 70.00% 66.00% 71.00% 67.02%
56.00% ------ 59.00% 57.00% 56.00% 54.00% 74.00% 77.00% 73.00% 72.00% 77.00% 76.00% 80.00% 71.00% 63.00% 74.00% 58.00% 65.00% 63.00% 72.00% 66.00% 62.00% 75.00% 59.00% 73.00% 63.00% 64.00% 64.00% 64.00% 69.00% 51.00% 65.00% 70.00% 64.00% 71.00% 66.00% 76.00% 68.00% 71.00% 70.00% 73.00% 76.00% 79.00% 68.00% 73.00% 71.00% 62.00% 68.00% 61.00% 71.00% 67.55%
70.00% 64.00% ------ 59.00% 52.00% 52.00% 78.00% 80.00% 75.00% 70.00% 78.00% 65.00% 70.00% 72.00% 72.00% 59.00% 61.00% 74.00% 66.00% 70.00% 71.00% 70.00% 67.00% 73.00% 69.00% 69.00% 71.00% 61.00% 68.00% 73.00% 60.00% 59.00% 76.00% 73.00% 64.00% 70.00% 70.00% 66.00% 66.00% 74.00% 70.00% 66.00% 75.00% 67.00% 67.00% 68.00% 63.00% 65.00% 68.00% 75.00% 68.18%
57.00% 62.00% 62.00% ------ 61.00% 56.00% 67.00% 76.00% 76.00% 72.00% 76.00% 72.00% 67.00% 71.00% 73.00% 72.00% 56.00% 72.00% 66.00% 63.00% 64.00% 70.00% 62.00% 59.00% 69.00% 70.00% 68.00% 64.00% 74.00% 72.00% 67.00% 62.00% 74.00% 67.00% 62.00% 68.00% 69.00% 59.00% 63.00% 63.00% 65.00% 69.00% 68.00% 69.00% 67.00% 70.00% 68.00% 60.00% 56.00% 68.00% 66.59%
63.00% 64.00% 64.00% 61.00% ------ 49.00% 63.00% 82.00% 76.00% 77.00% 75.00% 71.00% 74.00% 68.00% 66.00% 58.00% 60.00% 64.00% 66.00% 62.00% 71.00% 63.00% 63.00% 71.00% 66.00% 66.00% 66.00% 65.00% 67.00% 65.00% 56.00% 54.00% 73.00% 60.00% 59.00% 69.00% 61.00% 75.00% 63.00% 71.00% 77.00% 64.00% 65.00% 69.00% 71.00% 63.00% 70.00% 62.00% 70.00% 71.00% 66.31%
62.00% 60.00% 63.00% 58.00% 56.00% ------ 75.00% 78.00% 74.00% 67.00% 75.00% 70.00% 75.00% 73.00% 73.00% 65.00% 70.00% 70.00% 68.00% 68.00% 64.00% 69.00% 65.00% 70.00% 71.00% 68.00% 63.00% 64.00% 71.00% 71.00% 63.00% 67.00% 64.00% 65.00% 75.00% 70.00% 70.00% 66.00% 57.00% 60.00% 79.00% 57.00% 72.00% 65.00% 74.00% 69.00% 69.00% 64.00% 66.00% 67.00% 67.65%
41.00% 40.00% 43.00% 52.00% 42.00% 42.00% ------ 60.00% 75.00% 66.00% 63.00% 50.00% 49.00% 52.00% 43.00% 44.00% 52.00% 56.00% 44.00% 54.00% 58.00% 40.00% 49.00% 51.00% 52.00% 45.00% 45.00% 48.00% 48.00% 38.00% 46.00% 43.00% 52.00% 43.00% 50.00% 46.00% 56.00% 57.00% 54.00% 59.00% 62.00% 55.00% 59.00% 51.00% 54.00% 60.00% 58.00% 67.00% 63.00% 58.00% 51.73%
51.00% 48.00% 41.00% 49.00% 44.00% 37.00% 67.00% ------ 61.00% 68.00% 69.00% 54.00% 60.00% 61.00% 47.00% 45.00% 50.00% 55.00% 50.00% 52.00% 50.00% 53.00% 50.00% 56.00% 48.00% 44.00% 46.00% 52.00% 52.00% 49.00% 47.00% 45.00% 50.00% 44.00% 55.00% 51.00% 55.00% 61.00% 58.00% 57.00% 50.00% 61.00% 54.00% 49.00% 49.00% 58.00% 62.00% 55.00% 59.00% 59.00% 52.82%
41.00% 48.00% 46.00% 45.00% 44.00% 42.00% 58.00% 60.00% ------ 52.00% 53.00% 52.00% 58.00% 54.00% 41.00% 39.00% 60.00% 47.00% 47.00% 49.00% 43.00% 50.00% 46.00% 42.00% 49.00% 42.00% 43.00% 43.00% 48.00% 42.00% 50.00% 44.00% 60.00% 39.00% 51.00% 59.00% 62.00% 57.00% 64.00% 54.00% 56.00% 58.00% 62.00% 60.00% 61.00% 58.00% 61.00% 63.00% 63.00% 56.00% 51.47%
42.00% 47.00% 42.00% 55.00% 43.00% 40.00% 62.00% 61.00% 69.00% ------ 64.00% 59.00% 60.00% 65.00% 53.00% 49.00% 63.00% 63.00% 40.00% 54.00% 55.00% 53.00% 53.00% 54.00% 46.00% 58.00% 49.00% 54.00% 52.00% 47.00% 59.00% 41.00% 53.00% 46.00% 52.00% 56.00% 61.00% 55.00% 64.00% 54.00% 49.00% 68.00% 57.00% 52.00% 50.00% 66.00% 63.00% 68.00% 66.00% 67.00% 55.08%
54.00% 46.00% 39.00% 37.00% 42.00% 50.00% 50.00% 56.00% 52.00% 53.00% ------ 55.00% 55.00% 61.00% 38.00% 38.00% 50.00% 48.00% 36.00% 39.00% 48.00% 51.00% 42.00% 38.00% 46.00% 52.00% 55.00% 40.00% 49.00% 52.00% 37.00% 47.00% 54.00% 49.00% 63.00% 53.00% 51.00% 46.00% 51.00% 53.00% 55.00% 42.00% 58.00% 54.00% 57.00% 56.00% 44.00% 57.00% 49.00% 59.00% 49.12%
49.00% 48.00% 41.00% 47.00% 45.00% 44.00% 59.00% 56.00% 69.00% 60.00% 70.00% ------ 60.00% 61.00% 46.00% 47.00% 58.00% 50.00% 50.00% 58.00% 53.00% 45.00% 53.00% 44.00% 54.00% 44.00% 52.00% 54.00% 65.00% 51.00% 49.00% 53.00% 50.00% 58.00% 51.00% 59.00% 60.00% 62.00% 62.00% 61.00% 61.00% 56.00% 53.00% 55.00% 60.00% 57.00% 66.00% 60.00% 62.00% 66.00% 54.98%
56.00% 50.00% 48.00% 48.00% 47.00% 47.00% 64.00% 60.00% 66.00% 65.00% 68.00% 64.00% ------ 59.00% 47.00% 58.00% 48.00% 64.00% 57.00% 54.00% 53.00% 48.00% 56.00% 45.00% 47.00% 48.00% 60.00% 49.00% 49.00% 58.00% 56.00% 52.00% 51.00% 61.00% 62.00% 68.00% 54.00% 60.00% 62.00% 54.00% 59.00% 59.00% 56.00% 62.00% 53.00% 61.00% 64.00% 61.00% 66.00% 65.00% 56.51%
55.00% 51.00% 44.00% 42.00% 47.00% 39.00% 55.00% 64.00% 65.00% 61.00% 66.00% 60.00% 50.00% ------ 45.00% 42.00% 66.00% 65.00% 48.00% 54.00% 56.00% 56.00% 45.00% 55.00% 50.00% 50.00% 44.00% 52.00% 54.00% 52.00% 47.00% 50.00% 58.00% 59.00% 59.00% 54.00% 54.00% 53.00% 50.00% 54.00% 59.00% 63.00% 58.00% 52.00% 53.00% 60.00% 62.00% 60.00% 64.00% 57.00% 54.27%
60.00% 57.00% 59.00% 58.00% 44.00% 63.00% 71.00% 71.00% 66.00% 71.00% 73.00% 62.00% 71.00% 73.00% ------ 72.00% 66.00% 67.00% 59.00% 60.00% 64.00% 56.00% 61.00% 63.00% 67.00% 68.00% 66.00% 68.00% 63.00% 69.00% 56.00% 62.00% 65.00% 62.00% 63.00% 61.00% 60.00% 74.00% 66.00% 60.00% 67.00% 66.00% 62.00% 65.00% 65.00% 65.00% 69.00% 74.00% 69.00% 75.00% 64.78%
57.00% 49.00% 49.00% 50.00% 47.00% 55.00% 77.00% 68.00% 72.00% 82.00% 77.00% 67.00% 76.00% 69.00% 56.00% ------ 67.00% 68.00% 66.00% 56.00% 55.00% 52.00% 58.00% 62.00% 61.00% 64.00% 63.00% 58.00% 64.00% 65.00% 53.00% 57.00% 66.00% 51.00% 59.00% 56.00% 65.00% 67.00% 62.00% 69.00% 66.00% 54.00% 68.00% 70.00% 66.00% 73.00% 69.00% 66.00% 73.00% 72.00% 63.10%
49.00% 42.00% 56.00% 52.00% 51.00% 60.00% 64.00% 70.00% 71.00% 62.00% 68.00% 54.00% 52.00% 63.00% 58.00% 67.00% ------ 68.00% 55.00% 59.00% 52.00% 52.00% 50.00% 47.00% 50.00% 53.00% 56.00% 56.00% 46.00% 61.00% 48.00% 52.00% 57.00% 46.00% 49.00% 60.00% 50.00% 54.00% 60.00% 52.00% 53.00% 58.00% 51.00% 53.00% 55.00% 56.00% 64.00% 65.00% 55.00% 61.00% 55.98%
50.00% 55.00% 47.00% 59.00% 56.00% 54.00% 64.00% 69.00% 62.00% 58.00% 71.00% 61.00% 61.00% 63.00% 45.00% 49.00% 55.00% ------ 54.00% 59.00% 49.00% 43.00% 56.00% 54.00% 55.00% 63.00% 54.00% 51.00% 50.00% 49.00% 53.00% 48.00% 52.00% 55.00% 54.00% 54.00% 60.00% 58.00% 44.00% 47.00% 58.00% 49.00% 52.00% 50.00% 63.00% 57.00% 61.00% 56.00% 62.00% 64.00% 55.37%
48.00% 49.00% 42.00% 58.00% 54.00% 45.00% 77.00% 68.00% 64.00% 65.00% 77.00% 68.00% 60.00% 63.00% 59.00% 57.00% 65.00% 71.00% ------ 51.00% 63.00% 59.00% 53.00% 60.00% 54.00% 56.00% 59.00% 59.00% 53.00% 60.00% 46.00% 58.00% 70.00% 54.00% 72.00% 67.00% 61.00% 71.00% 71.00% 66.00% 61.00% 69.00% 61.00% 71.00% 67.00% 64.00% 71.00% 63.00% 71.00% 76.00% 61.78%
58.00% 60.00% 49.00% 47.00% 43.00% 50.00% 62.00% 69.00% 70.00% 63.00% 81.00% 66.00% 67.00% 59.00% 56.00% 56.00% 63.00% 71.00% 64.00% ------ 64.00% 60.00% 50.00% 51.00% 52.00% 62.00% 57.00% 60.00% 63.00% 61.00% 63.00% 53.00% 69.00% 59.00% 61.00% 62.00% 67.00% 65.00% 65.00% 61.00% 66.00% 67.00% 60.00% 67.00% 64.00% 70.00% 67.00% 67.00% 61.00% 62.00% 61.43%
45.00% 54.00% 53.00% 53.00% 53.00% 51.00% 70.00% 74.00% 75.00% 76.00% 82.00% 71.00% 61.00% 62.00% 55.00% 63.00% 60.00% 65.00% 57.00% 62.00% ------ 56.00% 60.00% 54.00% 64.00% 53.00% 54.00% 62.00% 69.00% 60.00% 58.00% 51.00% 68.00% 58.00% 61.00% 72.00% 68.00% 67.00% 60.00% 75.00% 61.00% 66.00% 58.00% 68.00% 62.00% 76.00% 71.00% 76.00% 64.00% 71.00% 62.96%
61.00% 57.00% 51.00% 50.00% 50.00% 50.00% 69.00% 66.00% 76.00% 74.00% 70.00% 72.00% 65.00% 71.00% 60.00% 60.00% 62.00% 62.00% 64.00% 62.00% 64.00% ------ 63.00% 60.00% 64.00% 57.00% 64.00% 58.00% 56.00% 61.00% 53.00% 57.00% 66.00% 63.00% 65.00% 59.00% 68.00% 70.00% 65.00% 62.00% 71.00% 64.00% 66.00% 62.00% 68.00% 69.00% 70.00% 70.00% 75.00% 61.00% 63.33%
57.00% 53.00% 53.00% 51.00% 53.00% 58.00% 74.00% 70.00% 74.00% 61.00% 79.00% 68.00% 63.00% 70.00% 61.00% 55.00% 64.00% 58.00% 56.00% 57.00% 70.00% 59.00% ------ 49.00% 61.00% 49.00% 51.00% 63.00% 66.00% 70.00% 58.00% 61.00% 64.00% 59.00% 63.00% 67.00% 60.00% 70.00% 72.00% 66.00% 67.00% 74.00% 64.00% 70.00% 75.00% 63.00% 68.00% 69.00% 70.00% 66.00% 63.24%
46.00% 55.00% 49.00% 47.00% 58.00% 44.00% 64.00% 75.00% 69.00% 75.00% 72.00% 67.00% 72.00% 68.00% 62.00% 61.00% 58.00% 74.00% 50.00% 58.00% 58.00% 66.00% 62.00% ------ 67.00% 52.00% 72.00% 67.00% 62.00% 56.00% 62.00% 57.00% 65.00% 61.00% 72.00% 67.00% 67.00% 74.00% 69.00% 63.00% 69.00% 64.00% 71.00% 68.00% 70.00% 72.00% 67.00% 70.00% 73.00% 72.00% 64.06%
51.00% 51.00% 51.00% 58.00% 54.00% 43.00% 72.00% 64.00% 81.00% 74.00% 70.00% 71.00% 62.00% 68.00% 54.00% 56.00% 71.00% 73.00% 75.00% 49.00% 66.00% 62.00% 58.00% 65.00% ------ 57.00% 59.00% 57.00% 55.00% 59.00% 63.00% 61.00% 76.00% 58.00% 62.00% 69.00% 66.00% 72.00% 58.00% 67.00% 72.00% 64.00% 69.00% 77.00% 68.00% 70.00% 70.00% 68.00% 64.00% 74.00% 63.96%
48.00% 52.00% 52.00% 51.00% 46.00% 47.00% 68.00% 65.00% 75.00% 68.00% 74.00% 72.00% 69.00% 77.00% 56.00% 52.00% 69.00% 60.00% 59.00% 55.00% 57.00% 55.00% 55.00% 53.00% 63.00% ------ 41.00% 63.00% 54.00% 58.00% 66.00% 57.00% 76.00% 67.00% 78.00% 66.00% 67.00% 78.00% 78.00% 72.00% 68.00% 70.00% 60.00% 67.00% 72.00% 66.00% 75.00% 77.00% 67.00% 74.00% 63.57%
52.00% 47.00% 51.00% 60.00% 50.00% 53.00% 65.00% 68.00% 65.00% 71.00% 77.00% 66.00% 72.00% 73.00% 61.00% 60.00% 71.00% 63.00% 59.00% 53.00% 62.00% 66.00% 62.00% 52.00% 51.00% 59.00% ------ 61.00% 61.00% 58.00% 55.00% 58.00% 67.00% 64.00% 55.00% 63.00% 72.00% 66.00% 66.00% 69.00% 65.00% 68.00% 73.00% 73.00% 67.00% 71.00% 76.00% 69.00% 74.00% 68.00% 63.43%
49.00% 62.00% 48.00% 52.00% 48.00% 54.00% 72.00% 69.00% 71.00% 67.00% 77.00% 59.00% 59.00% 66.00% 56.00% 54.00% 67.00% 67.00% 57.00% 62.00% 62.00% 58.00% 57.00% 71.00% 57.00% 59.00% 51.00% ------ 54.00% 60.00% 54.00% 60.00% 66.00% 61.00% 66.00% 69.00% 71.00% 75.00% 63.00% 66.00% 65.00% 65.00% 69.00% 67.00% 70.00% 73.00% 67.00% 67.00% 68.00% 69.00% 62.78%
57.00% 55.00% 50.00% 52.00% 50.00% 51.00% 60.00% 79.00% 72.00% 71.00% 76.00% 68.00% 68.00% 70.00% 58.00% 56.00% 63.00% 59.00% 62.00% 60.00% 61.00% 57.00% 60.00% 63.00% 62.00% 62.00% 59.00% 61.00% ------ 56.00% 60.00% 58.00% 76.00% 64.00% 63.00% 71.00% 63.00% 58.00% 73.00% 72.00% 62.00% 68.00% 70.00% 70.00% 68.00% 61.00% 69.00% 79.00% 64.00% 73.00% 63.67%
52.00% 49.00% 51.00% 54.00% 50.00% 47.00% 78.00% 61.00% 69.00% 59.00% 78.00% 68.00% 64.00% 73.00% 59.00% 49.00% 69.00% 63.00% 55.00% 49.00% 59.00% 53.00% 57.00% 64.00% 53.00% 54.00% 60.00% 54.00% 61.00% ------ 67.00% 61.00% 57.00% 69.00% 61.00% 58.00% 67.00% 79.00% 64.00% 74.00% 66.00% 72.00% 69.00% 77.00% 79.00% 69.00% 78.00% 67.00% 74.00% 65.00% 62.96%
62.00% 59.00% 53.00% 64.00% 54.00% 62.00% 70.00% 76.00% 73.00% 70.00% 66.00% 68.00% 63.00% 65.00% 60.00% 60.00% 67.00% 63.00% 57.00% 53.00% 53.00% 54.00% 59.00% 65.00% 57.00% 61.00% 58.00% 60.00% 63.00% 60.00% ------ 54.00% 65.00% 65.00% 61.00% 57.00% 56.00% 61.00% 65.00% 68.00% 61.00% 70.00% 67.00% 63.00% 68.00% 60.00% 68.00% 69.00% 67.00% 66.00% 62.57%
60.00% 59.00% 61.00% 52.00% 45.00% 49.00% 66.00% 73.00% 71.00% 61.00% 63.00% 68.00% 63.00% 66.00% 52.00% 54.00% 66.00% 70.00% 58.00% 66.00% 73.00% 63.00% 61.00% 52.00% 57.00% 52.00% 52.00% 62.00% 56.00% 54.00% 49.00% ------ 66.00% 59.00% 63.00% 68.00% 69.00% 64.00% 68.00% 69.00% 67.00% 65.00% 62.00% 71.00% 71.00% 68.00% 54.00% 59.00% 62.00% 60.00% 61.61%
45.00% 37.00% 43.00% 35.00% 42.00% 47.00% 55.00% 49.00% 47.00% 61.00% 59.00% 59.00% 45.00% 60.00% 47.00% 44.00% 51.00% 60.00% 39.00% 41.00% 44.00% 45.00% 44.00% 41.00% 38.00% 48.00% 42.00% 38.00% 43.00% 36.00% 45.00% 45.00% ------ 39.00% 55.00% 52.00% 52.00% 45.00% 52.00% 66.00% 65.00% 49.00% 69.00% 59.00% 62.00% 55.00% 44.00% 63.00% 46.00% 52.00% 48.98%
57.00% 49.00% 60.00% 57.00% 54.00% 62.00% 68.00% 69.00% 79.00% 63.00% 69.00% 70.00% 69.00% 68.00% 54.00% 58.00% 61.00% 69.00% 60.00% 59.00% 51.00% 63.00% 64.00% 59.00% 58.00% 47.00% 68.00% 55.00% 60.00% 62.00% 57.00% 56.00% 64.00% ------ 70.00% 68.00% 60.00% 58.00% 59.00% 61.00% 76.00% 60.00% 61.00% 59.00% 64.00% 68.00% 71.00% 54.00% 66.00% 59.00% 61.90%
44.00% 41.00% 42.00% 39.00% 44.00% 50.00% 57.00% 58.00% 57.00% 55.00% 59.00% 48.00% 50.00% 56.00% 51.00% 48.00% 52.00% 57.00% 45.00% 46.00% 48.00% 39.00% 43.00% 53.00% 49.00% 36.00% 40.00% 41.00% 39.00% 44.00% 44.00% 40.00% 61.00% 42.00% ------ 57.00% 62.00% 46.00% 56.00% 61.00% 61.00% 47.00% 76.00% 64.00% 74.00% 55.00% 63.00% 58.00% 62.00% 61.00% 51.45%
33.00% 43.00% 48.00% 40.00% 37.00% 44.00% 58.00% 52.00% 59.00% 59.00% 55.00% 56.00% 60.00% 63.00% 40.00% 47.00% 64.00% 51.00% 44.00% 53.00% 48.00% 33.00% 43.00% 41.00% 44.00% 52.00% 57.00% 41.00% 42.00% 47.00% 46.00% 45.00% 57.00% 40.00% 56.00% ------ 49.00% 52.00% 45.00% 70.00% 61.00% 50.00% 63.00% 68.00% 65.00% 56.00% 62.00% 52.00% 54.00% 58.00% 51.08%
35.00% 39.00% 46.00% 43.00% 40.00% 38.00% 50.00% 53.00% 61.00% 48.00% 55.00% 56.00% 52.00% 55.00% 39.00% 45.00% 52.00% 48.00% 44.00% 38.00% 49.00% 46.00% 40.00% 56.00% 45.00% 43.00% 45.00% 48.00% 38.00% 32.00% 42.00% 43.00% 53.00% 42.00% 50.00% 49.00% ------ 41.00% 41.00% 59.00% 58.00% 43.00% 69.00% 66.00% 59.00% 47.00% 59.00% 51.00% 53.00% 52.00% 48.08%
42.00% 38.00% 43.00% 45.00% 49.00% 45.00% 65.00% 52.00% 56.00% 58.00% 62.00% 56.00% 52.00% 54.00% 53.00% 48.00% 49.00% 52.00% 53.00% 48.00% 44.00% 41.00% 33.00% 40.00% 45.00% 37.00% 38.00% 40.00% 47.00% 39.00% 43.00% 47.00% 60.00% 47.00% 54.00% 65.00% 68.00% ------ 49.00% 67.00% 68.00% 55.00% 71.00% 64.00% 65.00% 71.00% 72.00% 66.00% 68.00% 74.00% 53.02%
45.00% 38.00% 51.00% 42.00% 52.00% 53.00% 58.00% 57.00% 61.00% 55.00% 74.00% 60.00% 51.00% 60.00% 47.00% 56.00% 53.00% 52.00% 51.00% 42.00% 46.00% 50.00% 52.00% 38.00% 48.00% 41.00% 40.00% 48.00% 48.00% 52.00% 41.00% 50.00% 65.00% 52.00% 71.00% 62.00% 72.00% 58.00% ------ 73.00% 69.00% 59.00% 75.00% 72.00% 68.00% 66.00% 68.00% 69.00% 63.00% 64.00% 55.88%
38.00% 26.00% 49.00% 48.00% 37.00% 33.00% 54.00% 49.00% 53.00% 50.00% 52.00% 55.00% 51.00% 50.00% 35.00% 46.00% 49.00% 45.00% 45.00% 42.00% 48.00% 48.00% 40.00% 51.00% 47.00% 45.00% 41.00% 41.00% 50.00% 50.00% 40.00% 38.00% 46.00% 42.00% 53.00% 47.00% 35.00% 36.00% 35.00% ------ 52.00% 37.00% 56.00% 65.00% 55.00% 37.00% 41.00% 36.00% 49.00% 41.00% 45.08%
39.00% 27.00% 38.00% 46.00% 45.00% 46.00% 59.00% 48.00% 53.00% 50.00% 58.00% 53.00% 55.00% 57.00% 40.00% 49.00% 56.00% 55.00% 52.00% 39.00% 44.00% 46.00% 40.00% 37.00% 41.00% 46.00% 42.00% 42.00% 38.00% 40.00% 42.00% 40.00% 52.00% 52.00% 48.00% 46.00% 52.00% 29.00% 35.00% 62.00% ------ 46.00% 47.00% 48.00% 46.00% 39.00% 42.00% 44.00% 45.00% 39.00% 45.61%
49.00% 37.00% 47.00% 52.00% 51.00% 43.00% 48.00% 46.00% 61.00% 52.00% 70.00% 55.00% 51.00% 55.00% 39.00% 47.00% 53.00% 53.00% 42.00% 49.00% 45.00% 42.00% 31.00% 44.00% 41.00% 38.00% 44.00% 41.00% 46.00% 45.00% 49.00% 49.00% 61.00% 46.00% 62.00% 65.00% 42.00% 53.00% 47.00% 76.00% 66.00% ------ 72.00% 67.00% 72.00% 62.00% 68.00% 64.00% 61.00% 67.00% 52.37%
34.00% 37.00% 42.00% 39.00% 46.00% 47.00% 58.00% 56.00% 51.00% 56.00% 50.00% 59.00% 53.00% 59.00% 33.00% 49.00% 55.00% 48.00% 43.00% 38.00% 42.00% 38.00% 37.00% 35.00% 39.00% 44.00% 42.00% 37.00% 45.00% 42.00% 50.00% 48.00% 49.00% 43.00% 48.00% 42.00% 41.00% 38.00% 40.00% 62.00% 64.00% 38.00% ------ 62.00% 62.00% 49.00% 45.00% 42.00% 35.00% 49.00% 46.14%
49.00% 45.00% 47.00% 46.00% 40.00% 40.00% 50.00% 53.00% 57.00% 54.00% 57.00% 60.00% 42.00% 56.00% 48.00% 43.00% 56.00% 52.00% 41.00% 47.00% 39.00% 50.00% 42.00% 38.00% 41.00% 50.00% 51.00% 50.00% 45.00% 48.00% 45.00% 42.00% 59.00% 40.00% 48.00% 46.00% 43.00% 40.00% 37.00% 58.00% 59.00% 32.00% 50.00% ------ 56.00% 52.00% 50.00% 48.00% 43.00% 39.00% 47.43%
34.00% 37.00% 46.00% 39.00% 45.00% 38.00% 53.00% 55.00% 56.00% 50.00% 46.00% 65.00% 47.00% 55.00% 41.00% 41.00% 51.00% 57.00% 38.00% 50.00% 36.00% 41.00% 45.00% 41.00% 34.00% 46.00% 39.00% 36.00% 47.00% 40.00% 47.00% 41.00% 45.00% 47.00% 45.00% 51.00% 47.00% 32.00% 36.00% 54.00% 56.00% 31.00% 52.00% 52.00% ------ 52.00% 49.00% 45.00% 39.00% 41.00% 45.12%
49.00% 45.00% 41.00% 46.00% 42.00% 42.00% 51.00% 49.00% 48.00% 53.00% 47.00% 43.00% 52.00% 61.00% 43.00% 45.00% 52.00% 53.00% 38.00% 42.00% 48.00% 38.00% 37.00% 47.00% 43.00% 42.00% 39.00% 42.00% 40.00% 42.00% 41.00% 42.00% 62.00% 45.00% 50.00% 58.00% 52.00% 44.00% 34.00% 70.00% 65.00% 46.00% 70.00% 62.00% 65.00% ------ 55.00% 52.00% 62.00% 57.00% 48.82%
41.00% 43.00% 43.00% 36.00% 41.00% 50.00% 49.00% 59.00% 58.00% 50.00% 53.00% 53.00% 53.00% 51.00% 50.00% 38.00% 46.00% 58.00% 39.00% 55.00% 47.00% 46.00% 40.00% 35.00% 50.00% 38.00% 42.00% 38.00% 41.00% 47.00% 46.00% 52.00% 59.00% 45.00% 57.00% 56.00% 54.00% 39.00% 47.00% 65.00% 66.00% 41.00% 58.00% 73.00% 59.00% 58.00% ------ 53.00% 55.00% 52.00% 49.49%
46.00% 43.00% 43.00% 49.00% 44.00% 45.00% 59.00% 53.00% 61.00% 48.00% 57.00% 45.00% 42.00% 59.00% 39.00% 47.00% 59.00% 50.00% 37.00% 38.00% 47.00% 47.00% 36.00% 39.00% 44.00% 37.00% 44.00% 34.00% 46.00% 42.00% 42.00% 54.00% 51.00% 48.00% 63.00% 59.00% 52.00% 44.00% 37.00% 67.00% 63.00% 50.00% 60.00% 62.00% 62.00% 46.00% 58.00% ------ 62.00% 46.00% 49.10%
46.00% 48.00% 48.00% 48.00% 49.00% 44.00% 47.00% 45.00% 53.00% 45.00% 59.00% 57.00% 51.00% 52.00% 52.00% 52.00% 48.00% 58.00% 33.00% 45.00% 45.00% 46.00% 39.00% 41.00% 47.00% 38.00% 40.00% 36.00% 47.00% 36.00% 56.00% 51.00% 55.00% 40.00% 60.00% 60.00% 50.00% 49.00% 47.00% 67.00% 72.00% 30.00% 68.00% 52.00% 63.00% 50.00% 54.00% 56.00% ------ 55.00% 49.59%
45.00% 39.00% 44.00% 40.00% 42.00% 45.00% 57.00% 59.00% 50.00% 44.00% 55.00% 45.00% 47.00% 52.00% 43.00% 44.00% 53.00% 61.00% 39.00% 49.00% 44.00% 39.00% 36.00% 42.00% 39.00% 46.00% 36.00% 43.00% 33.00% 43.00% 38.00% 49.00% 55.00% 62.00% 60.00% 55.00% 67.00% 43.00% 47.00% 60.00% 67.00% 41.00% 60.00% 72.00% 57.00% 55.00% 53.00% 57.00% 46.00% ------ 48.94%
