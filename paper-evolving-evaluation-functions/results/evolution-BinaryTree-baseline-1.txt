Parameters:
  ELITISM 5
  EVALUATOR_DRAFTS 10
  EVALUATOR_ROUNDS 10
  EVOLUTION_DRAFTS 10
  EVOLUTION_ROUNDS 10
  GENERATIONS 50
  INDIVIDUAL BinaryTree
  MUTATION_RATE 0.05
  POPULATION 50
  SCORING baseline

generation   1: 11.11s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasCharge), FeatureDefense), state_node: FeatureMeNextTurnDraw }
generation   2: 19.10s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasCharge), FeatureDefense), state_node: FeatureMeNextTurnDraw }
generation   3: 14.59s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasCharge), FeatureDefense), state_node: OperatorMin(FeatureMeDecksize, OperatorMul(FeatureMeDecksize, FeatureMeNextTurnDraw)) }
generation   4: 12.94s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasCharge), FeatureDefense), state_node: OperatorMin(FeatureMeDecksize, OperatorMul(FeatureMeDecksize, FeatureMeNextTurnDraw)) }
generation   5: 11.95s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasCharge), FeatureDefense), state_node: OperatorMin(FeatureMeDecksize, OperatorMul(FeatureMeDecksize, FeatureMeNextTurnDraw)) }
generation   6: 13.27s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasDrain), FeatureDefense), state_node: OperatorMin(FeatureMeHealth, FeatureOpNextTurnDraw) }
generation   7: 10.62s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureAttack, OperatorMax(FeatureHasDrain, FeatureDefense)), state_node: FeatureMeDecksize }
generation   8: 11.45s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense), state_node: OperatorMax(FeatureOpMaxMana, OperatorMin(OperatorMax(OperatorMin(FeatureMeMaxMana, FeatureOpRune), FeatureMeNextTurnDraw), Literal(0.85993886))) }
generation   9: 10.06s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureAttack, OperatorMax(FeatureHasDrain, FeatureDefense)), state_node: FeatureMeDecksize }
generation  10: 10.40s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasLethal), FeatureDefense), state_node: FeatureOpNextTurnDraw }
generation  11: 10.42s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasLethal), FeatureDefense), state_node: FeatureOpNextTurnDraw }
generation  12: 10.12s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasLethal), FeatureDefense), state_node: FeatureOpNextTurnDraw }
generation  13: 11.35s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasLethal), FeatureDefense), state_node: FeatureOpNextTurnDraw }
generation  14: 10.45s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureHasDrain, FeatureDefense), FeatureAttack), state_node: OperatorMax(FeatureOpMaxMana, OperatorMin(FeatureOpNextTurnDraw, Literal(0.85993886))) }
generation  15: 10.09s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense), state_node: FeatureOpNextTurnDraw }
generation  16: 9.03s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense), state_node: OperatorMin(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  17: 9.35s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureHasDrain, FeatureDefense), FeatureAttack), state_node: OperatorMax(FeatureOpMaxMana, OperatorMin(FeatureOpNextTurnDraw, Literal(0.85993886))) }
generation  18: 12.27s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasDrain, OperatorSub(OperatorSub(FeatureAttack, FeatureHasLethal), FeatureDefense)), state_node: OperatorMin(FeatureOpNextTurnDraw, OperatorMax(Literal(0.85993886), FeatureOpNextTurnDraw)) }
generation  19: 12.03s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureHasDrain)), state_node: OperatorMax(FeatureOpNextTurnDraw, OperatorMin(OperatorMax(OperatorSub(FeatureMeMaxMana, FeatureMeNextTurnDraw), OperatorMin(OperatorMax(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureMeHealth)), Literal(0.85993886))) }
generation  20: 12.36s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureHasDrain)), state_node: OperatorMax(FeatureOpNextTurnDraw, OperatorMin(OperatorMax(OperatorSub(FeatureMeMaxMana, FeatureMeNextTurnDraw), OperatorMin(OperatorMax(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureMeHealth)), Literal(0.85993886))) }
generation  21: 13.17s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense), state_node: OperatorMin(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  22: 12.89s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense), state_node: FeatureOpNextTurnDraw }
generation  23: 14.40s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasDrain, OperatorSub(OperatorSub(FeatureAttack, FeatureHasLethal), FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation  24: 10.96s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasDrain, OperatorSub(OperatorSub(FeatureAttack, FeatureHasLethal), FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation  25: 12.88s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), FeatureAttack)), OperatorSub(FeatureDefense, FeatureHasDrain)), state_node: OperatorMax(FeatureOpNextTurnDraw, OperatorMin(OperatorMax(OperatorMin(FeatureOpNextTurnDraw, OperatorMax(Literal(0.85993886), FeatureOpNextTurnDraw)), OperatorMin(OperatorMax(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureMeNextTurnDraw)), Literal(0.85993886))) }
generation  26: 13.20s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasBreakthrough)), OperatorMax(FeatureDefense, FeatureDefense)), state_node: OperatorMax(FeatureOpNextTurnDraw, OperatorMin(OperatorMax(OperatorMin(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw), FeatureOpNextTurnDraw), Literal(0.85993886))) }
generation  27: 13.03s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: OperatorMin(OperatorSub(FeatureOpNextTurnDraw, OperatorMin(FeatureOpNextTurnDraw, Literal(-0.9870057))), FeatureOpNextTurnDraw) }
generation  28: 10.76s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)), OperatorMax(FeatureDefense, FeatureDefense)), state_node: OperatorMax(FeatureOpNextTurnDraw, OperatorMin(OperatorMin(Literal(0.85993886), FeatureOpMaxMana), Literal(0.85993886))) }
generation  29: 12.29s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)), OperatorMax(FeatureDefense, FeatureDefense)), state_node: OperatorMax(FeatureOpNextTurnDraw, OperatorMin(OperatorMin(Literal(0.85993886), FeatureOpMaxMana), Literal(0.85993886))) }
generation  30: 13.18s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasGuard), FeatureHasDrain)), OperatorMax(FeatureDefense, FeatureDefense)), state_node: OperatorMin(FeatureOpNextTurnDraw, Literal(-0.9870057)) }
generation  31: 14.40s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)), OperatorMax(FeatureDefense, FeatureDefense)), state_node: OperatorMax(FeatureOpNextTurnDraw, OperatorMin(OperatorMin(Literal(0.85993886), FeatureOpMaxMana), Literal(0.85993886))) }
generation  32: 15.65s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack))), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), OperatorSub(FeatureAttack, FeatureAttack))), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: OperatorMin(FeatureOpNextTurnDraw, Literal(-0.9870057)) }
generation  33: 18.60s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)), OperatorMax(FeatureDefense, FeatureDefense)), state_node: OperatorMax(FeatureOpNextTurnDraw, OperatorMin(OperatorMin(Literal(0.85993886), FeatureOpMaxMana), Literal(0.85993886))) }
generation  34: 20.05s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)), OperatorMax(FeatureDefense, FeatureDefense)), state_node: OperatorMax(FeatureOpNextTurnDraw, Literal(-0.9870057)) }
generation  35: 16.95s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasGuard), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: OperatorMin(OperatorSub(FeatureOpNextTurnDraw, OperatorMin(FeatureOpNextTurnDraw, Literal(-0.9870057))), FeatureOpNextTurnDraw) }
generation  36: 17.64s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasGuard), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: OperatorMin(OperatorSub(FeatureOpNextTurnDraw, OperatorMin(FeatureOpNextTurnDraw, Literal(-0.9870057))), FeatureOpNextTurnDraw) }
generation  37: 17.10s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasGuard), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: OperatorMin(OperatorSub(FeatureOpNextTurnDraw, OperatorMin(FeatureOpNextTurnDraw, Literal(-0.9870057))), FeatureOpNextTurnDraw) }
generation  38: 20.84s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack)))))), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: Literal(-0.9870057) }
generation  39: 31.89s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack)))))), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: Literal(-0.9870057) }
generation  40: 29.64s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureHasDrain, FeatureHasDrain)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack)))))), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: FeatureOpNextTurnDraw }
generation  41: 34.71s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureHasDrain, FeatureHasDrain)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack)))))), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: FeatureOpNextTurnDraw }
generation  42: 44.34s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureDefense, FeatureHasGuard), FeatureDefense)), OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack))))), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  43: 45.16s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureHasDrain, FeatureHasDrain)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack)))))), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: FeatureOpNextTurnDraw }
generation  44: 48.42s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureDefense, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasLethal), FeatureAttack)), OperatorSub(FeatureDefense, FeatureAttack)), OperatorSub(FeatureHasWard, FeatureHasBreakthrough)), OperatorSub(OperatorSub(FeatureAttack, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureDefense)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack))))))), OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack)))))), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense))))), FeatureDefense), FeatureHasBreakthrough), state_node: FeatureMeMaxMana }
generation  45: 46.67s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureDefense, FeatureHasGuard), FeatureDefense)), OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack))))), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  46: 53.34s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureDefense, FeatureHasGuard), FeatureDefense)), OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack))))), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  47: 51.53s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureDefense, FeatureHasGuard), FeatureDefense)), OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack))))), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  48: 40.23s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureDefense, FeatureHasGuard), FeatureDefense)), OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack))))), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  49: 53.31s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureHasDrain, FeatureHasDrain)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack)))))), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: FeatureOpNextTurnDraw }
generation  50: 59.69s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureHasWard, OperatorSub(FeatureHasGuard, OperatorSub(OperatorSub(FeatureDefense, FeatureHasDrain), OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, FeatureAttack)), OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureAttack, OperatorSub(OperatorSub(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), FeatureAttack)), FeatureDefense), FeatureHasBreakthrough), OperatorSub(OperatorSub(FeatureHasWard, FeatureHasGuard), FeatureHasDrain)))), FeatureAttack)))))), FeatureDefense)), OperatorMax(FeatureDefense, FeatureDefense)), FeatureDefense)), FeatureAttack)), OperatorSub(FeatureAttack, FeatureAttack)), FeatureHasBreakthrough), FeatureAttack), state_node: FeatureOpNextTurnDraw }
------ 55.00% 54.00% 56.00% 48.00% 53.00% 55.00% 53.00% 50.00% 51.00% 49.00% 52.00% 45.00% 47.00% 55.00% 49.00% 40.00% 42.00% 45.00% 46.00% 54.00% 55.00% 53.00% 51.00% 49.00% 39.00% 56.00% 40.00% 52.00% 33.00% 45.00% 48.00% 53.00% 53.00% 41.00% 37.00% 34.00% 49.00% 41.00% 44.00% 50.00% 39.00% 36.00% 34.00% 35.00% 47.00% 37.00% 32.00% 43.00% 44.00% 46.31%
46.00% ------ 48.00% 51.00% 46.00% 53.00% 39.00% 56.00% 43.00% 53.00% 51.00% 41.00% 43.00% 48.00% 53.00% 50.00% 43.00% 53.00% 48.00% 39.00% 53.00% 50.00% 48.00% 48.00% 34.00% 43.00% 58.00% 39.00% 46.00% 34.00% 39.00% 53.00% 33.00% 46.00% 45.00% 35.00% 51.00% 41.00% 44.00% 47.00% 41.00% 43.00% 48.00% 32.00% 38.00% 39.00% 39.00% 40.00% 44.00% 43.00% 44.86%
54.00% 55.00% ------ 46.00% 49.00% 58.00% 51.00% 52.00% 51.00% 47.00% 54.00% 47.00% 58.00% 44.00% 48.00% 59.00% 44.00% 51.00% 42.00% 36.00% 58.00% 50.00% 55.00% 47.00% 33.00% 41.00% 53.00% 44.00% 45.00% 32.00% 46.00% 45.00% 46.00% 50.00% 39.00% 37.00% 34.00% 48.00% 50.00% 39.00% 46.00% 45.00% 45.00% 32.00% 37.00% 42.00% 45.00% 41.00% 48.00% 50.00% 46.31%
60.00% 58.00% 59.00% ------ 60.00% 39.00% 48.00% 47.00% 47.00% 56.00% 48.00% 52.00% 53.00% 46.00% 53.00% 52.00% 42.00% 46.00% 51.00% 33.00% 48.00% 56.00% 54.00% 47.00% 37.00% 44.00% 63.00% 49.00% 50.00% 26.00% 43.00% 54.00% 45.00% 45.00% 42.00% 47.00% 37.00% 48.00% 39.00% 45.00% 44.00% 47.00% 47.00% 31.00% 42.00% 39.00% 40.00% 38.00% 40.00% 49.00% 46.65%
58.00% 54.00% 52.00% 57.00% ------ 47.00% 43.00% 53.00% 49.00% 46.00% 44.00% 45.00% 39.00% 49.00% 49.00% 58.00% 43.00% 49.00% 40.00% 39.00% 66.00% 50.00% 44.00% 54.00% 55.00% 35.00% 52.00% 52.00% 57.00% 35.00% 44.00% 48.00% 50.00% 50.00% 36.00% 40.00% 37.00% 42.00% 52.00% 46.00% 31.00% 44.00% 47.00% 32.00% 45.00% 44.00% 38.00% 44.00% 38.00% 42.00% 46.20%
50.00% 54.00% 61.00% 53.00% 53.00% ------ 49.00% 48.00% 50.00% 50.00% 57.00% 49.00% 51.00% 45.00% 54.00% 58.00% 44.00% 44.00% 46.00% 42.00% 46.00% 57.00% 40.00% 48.00% 46.00% 39.00% 50.00% 42.00% 37.00% 34.00% 45.00% 43.00% 44.00% 46.00% 47.00% 41.00% 46.00% 49.00% 44.00% 38.00% 37.00% 42.00% 39.00% 26.00% 41.00% 40.00% 42.00% 40.00% 38.00% 40.00% 45.41%
65.00% 68.00% 59.00% 55.00% 59.00% 59.00% ------ 60.00% 45.00% 61.00% 56.00% 62.00% 50.00% 37.00% 55.00% 64.00% 42.00% 48.00% 46.00% 49.00% 62.00% 60.00% 50.00% 58.00% 52.00% 57.00% 68.00% 45.00% 48.00% 40.00% 48.00% 56.00% 50.00% 56.00% 44.00% 37.00% 40.00% 59.00% 41.00% 47.00% 47.00% 40.00% 47.00% 35.00% 47.00% 37.00% 40.00% 45.00% 49.00% 51.00% 50.94%
49.00% 56.00% 44.00% 52.00% 47.00% 59.00% 44.00% ------ 52.00% 48.00% 53.00% 45.00% 49.00% 41.00% 53.00% 53.00% 41.00% 48.00% 44.00% 43.00% 56.00% 47.00% 52.00% 46.00% 50.00% 56.00% 52.00% 41.00% 45.00% 31.00% 53.00% 42.00% 44.00% 43.00% 41.00% 40.00% 40.00% 34.00% 50.00% 44.00% 45.00% 36.00% 51.00% 36.00% 50.00% 39.00% 35.00% 44.00% 42.00% 43.00% 45.90%
53.00% 57.00% 60.00% 64.00% 55.00% 58.00% 59.00% 65.00% ------ 58.00% 54.00% 69.00% 55.00% 51.00% 56.00% 59.00% 44.00% 47.00% 49.00% 48.00% 61.00% 59.00% 61.00% 54.00% 44.00% 50.00% 64.00% 51.00% 50.00% 35.00% 52.00% 63.00% 48.00% 46.00% 52.00% 44.00% 42.00% 44.00% 53.00% 46.00% 49.00% 41.00% 46.00% 46.00% 47.00% 44.00% 46.00% 43.00% 45.00% 48.00% 51.73%
63.00% 57.00% 48.00% 63.00% 59.00% 63.00% 48.00% 55.00% 47.00% ------ 54.00% 44.00% 53.00% 44.00% 59.00% 47.00% 53.00% 56.00% 52.00% 37.00% 61.00% 60.00% 53.00% 57.00% 45.00% 50.00% 52.00% 53.00% 46.00% 27.00% 50.00% 53.00% 45.00% 52.00% 46.00% 38.00% 30.00% 42.00% 49.00% 47.00% 41.00% 47.00% 46.00% 32.00% 41.00% 38.00% 47.00% 44.00% 41.00% 44.00% 48.55%
63.00% 48.00% 53.00% 52.00% 56.00% 64.00% 52.00% 54.00% 49.00% 57.00% ------ 53.00% 53.00% 44.00% 62.00% 52.00% 40.00% 63.00% 49.00% 49.00% 58.00% 61.00% 52.00% 48.00% 49.00% 53.00% 58.00% 41.00% 46.00% 40.00% 58.00% 60.00% 44.00% 50.00% 50.00% 34.00% 34.00% 55.00% 45.00% 41.00% 58.00% 47.00% 38.00% 45.00% 37.00% 38.00% 44.00% 40.00% 44.00% 47.00% 49.55%
56.00% 57.00% 57.00% 62.00% 60.00% 63.00% 47.00% 52.00% 45.00% 52.00% 64.00% ------ 49.00% 58.00% 58.00% 55.00% 45.00% 58.00% 51.00% 50.00% 59.00% 64.00% 46.00% 54.00% 48.00% 48.00% 53.00% 47.00% 49.00% 42.00% 43.00% 53.00% 56.00% 45.00% 40.00% 42.00% 44.00% 48.00% 35.00% 48.00% 53.00% 39.00% 51.00% 36.00% 39.00% 39.00% 41.00% 35.00% 49.00% 49.00% 49.67%
50.00% 52.00% 51.00% 65.00% 56.00% 52.00% 57.00% 56.00% 56.00% 54.00% 50.00% 49.00% ------ 46.00% 55.00% 51.00% 46.00% 50.00% 41.00% 49.00% 50.00% 59.00% 55.00% 56.00% 50.00% 48.00% 59.00% 54.00% 53.00% 25.00% 55.00% 51.00% 40.00% 54.00% 41.00% 50.00% 48.00% 58.00% 45.00% 49.00% 42.00% 43.00% 45.00% 38.00% 43.00% 38.00% 42.00% 45.00% 51.00% 53.00% 49.51%
66.00% 69.00% 66.00% 69.00% 65.00% 62.00% 57.00% 68.00% 57.00% 61.00% 57.00% 64.00% 59.00% ------ 61.00% 56.00% 56.00% 64.00% 48.00% 57.00% 60.00% 59.00% 60.00% 54.00% 53.00% 54.00% 71.00% 53.00% 57.00% 45.00% 59.00% 57.00% 54.00% 54.00% 52.00% 46.00% 46.00% 47.00% 62.00% 49.00% 51.00% 44.00% 55.00% 38.00% 55.00% 44.00% 44.00% 49.00% 52.00% 50.00% 55.84%
54.00% 51.00% 54.00% 49.00% 50.00% 52.00% 51.00% 51.00% 48.00% 50.00% 55.00% 61.00% 49.00% 48.00% ------ 48.00% 54.00% 50.00% 47.00% 48.00% 47.00% 53.00% 57.00% 56.00% 39.00% 40.00% 65.00% 41.00% 37.00% 32.00% 39.00% 46.00% 52.00% 45.00% 38.00% 38.00% 35.00% 44.00% 47.00% 42.00% 48.00% 38.00% 46.00% 31.00% 38.00% 38.00% 42.00% 39.00% 43.00% 39.00% 46.22%
48.00% 55.00% 50.00% 52.00% 43.00% 59.00% 46.00% 45.00% 53.00% 50.00% 50.00% 47.00% 54.00% 50.00% 48.00% ------ 39.00% 47.00% 38.00% 49.00% 52.00% 59.00% 47.00% 48.00% 53.00% 50.00% 56.00% 33.00% 43.00% 41.00% 40.00% 44.00% 44.00% 42.00% 46.00% 45.00% 43.00% 44.00% 48.00% 46.00% 39.00% 46.00% 37.00% 43.00% 39.00% 35.00% 43.00% 41.00% 51.00% 51.00% 46.37%
61.00% 53.00% 65.00% 58.00% 62.00% 65.00% 67.00% 64.00% 56.00% 68.00% 57.00% 65.00% 56.00% 46.00% 62.00% 68.00% ------ 57.00% 51.00% 55.00% 55.00% 68.00% 58.00% 51.00% 46.00% 53.00% 58.00% 53.00% 55.00% 42.00% 57.00% 64.00% 62.00% 64.00% 49.00% 52.00% 49.00% 49.00% 56.00% 47.00% 45.00% 45.00% 47.00% 50.00% 47.00% 41.00% 48.00% 55.00% 44.00% 43.00% 54.88%
56.00% 52.00% 63.00% 62.00% 54.00% 54.00% 51.00% 65.00% 51.00% 59.00% 57.00% 55.00% 48.00% 38.00% 64.00% 63.00% 45.00% ------ 54.00% 52.00% 60.00% 61.00% 57.00% 49.00% 51.00% 53.00% 65.00% 45.00% 49.00% 41.00% 50.00% 61.00% 57.00% 52.00% 40.00% 36.00% 50.00% 49.00% 51.00% 51.00% 43.00% 35.00% 48.00% 38.00% 41.00% 41.00% 34.00% 38.00% 49.00% 50.00% 50.78%
68.00% 69.00% 58.00% 56.00% 63.00% 60.00% 65.00% 68.00% 53.00% 60.00% 65.00% 59.00% 68.00% 58.00% 55.00% 61.00% 59.00% 59.00% ------ 56.00% 58.00% 62.00% 58.00% 57.00% 58.00% 53.00% 61.00% 47.00% 56.00% 43.00% 50.00% 66.00% 67.00% 55.00% 53.00% 50.00% 53.00% 48.00% 50.00% 42.00% 54.00% 53.00% 55.00% 44.00% 40.00% 51.00% 52.00% 59.00% 49.00% 53.00% 56.27%
60.00% 64.00% 64.00% 70.00% 61.00% 70.00% 52.00% 58.00% 58.00% 56.00% 60.00% 55.00% 61.00% 60.00% 64.00% 62.00% 50.00% 58.00% 58.00% ------ 60.00% 62.00% 69.00% 56.00% 52.00% 56.00% 68.00% 53.00% 62.00% 42.00% 56.00% 57.00% 51.00% 58.00% 51.00% 56.00% 48.00% 52.00% 46.00% 46.00% 53.00% 54.00% 63.00% 51.00% 52.00% 49.00% 42.00% 48.00% 56.00% 52.00% 56.37%
48.00% 56.00% 57.00% 54.00% 60.00% 60.00% 53.00% 47.00% 47.00% 59.00% 45.00% 52.00% 47.00% 43.00% 50.00% 53.00% 42.00% 44.00% 46.00% 47.00% ------ 57.00% 57.00% 41.00% 43.00% 44.00% 58.00% 45.00% 41.00% 39.00% 45.00% 42.00% 41.00% 43.00% 37.00% 38.00% 40.00% 43.00% 50.00% 50.00% 43.00% 41.00% 39.00% 35.00% 37.00% 37.00% 39.00% 38.00% 51.00% 47.00% 46.35%
53.00% 58.00% 63.00% 48.00% 53.00% 49.00% 60.00% 52.00% 43.00% 42.00% 45.00% 55.00% 47.00% 39.00% 46.00% 54.00% 41.00% 48.00% 38.00% 44.00% 55.00% ------ 44.00% 50.00% 49.00% 47.00% 61.00% 43.00% 47.00% 29.00% 41.00% 41.00% 46.00% 45.00% 52.00% 41.00% 41.00% 40.00% 45.00% 47.00% 43.00% 41.00% 42.00% 29.00% 45.00% 36.00% 43.00% 43.00% 47.00% 41.00% 45.96%
63.00% 62.00% 51.00% 62.00% 49.00% 67.00% 53.00% 59.00% 50.00% 61.00% 61.00% 62.00% 48.00% 51.00% 58.00% 50.00% 51.00% 50.00% 48.00% 55.00% 58.00% 64.00% ------ 52.00% 46.00% 53.00% 59.00% 43.00% 51.00% 42.00% 52.00% 65.00% 54.00% 47.00% 42.00% 35.00% 43.00% 55.00% 50.00% 50.00% 47.00% 46.00% 37.00% 37.00% 44.00% 39.00% 40.00% 42.00% 55.00% 48.00% 51.16%
57.00% 54.00% 60.00% 63.00% 54.00% 62.00% 44.00% 58.00% 57.00% 48.00% 51.00% 64.00% 65.00% 51.00% 52.00% 53.00% 49.00% 46.00% 53.00% 48.00% 63.00% 51.00% 50.00% ------ 47.00% 51.00% 54.00% 41.00% 49.00% 33.00% 54.00% 60.00% 45.00% 57.00% 42.00% 46.00% 41.00% 43.00% 48.00% 53.00% 47.00% 41.00% 47.00% 35.00% 43.00% 47.00% 45.00% 39.00% 50.00% 51.00% 50.24%
56.00% 70.00% 72.00% 70.00% 67.00% 57.00% 52.00% 66.00% 51.00% 57.00% 62.00% 62.00% 52.00% 54.00% 60.00% 66.00% 49.00% 55.00% 50.00% 56.00% 59.00% 59.00% 60.00% 54.00% ------ 55.00% 64.00% 59.00% 59.00% 45.00% 64.00% 60.00% 57.00% 59.00% 41.00% 52.00% 42.00% 48.00% 54.00% 52.00% 53.00% 48.00% 51.00% 46.00% 49.00% 51.00% 46.00% 49.00% 54.00% 54.00% 55.67%
62.00% 60.00% 60.00% 58.00% 68.00% 61.00% 50.00% 67.00% 62.00% 60.00% 64.00% 64.00% 61.00% 58.00% 61.00% 66.00% 50.00% 54.00% 57.00% 60.00% 52.00% 66.00% 58.00% 58.00% 50.00% ------ 67.00% 56.00% 65.00% 54.00% 62.00% 63.00% 48.00% 60.00% 57.00% 50.00% 53.00% 58.00% 62.00% 53.00% 49.00% 43.00% 48.00% 41.00% 36.00% 47.00% 45.00% 48.00% 52.00% 57.00% 56.35%
50.00% 52.00% 53.00% 55.00% 50.00% 59.00% 55.00% 46.00% 50.00% 47.00% 54.00% 53.00% 55.00% 42.00% 46.00% 45.00% 47.00% 53.00% 44.00% 43.00% 41.00% 46.00% 47.00% 37.00% 43.00% 45.00% ------ 41.00% 43.00% 38.00% 38.00% 53.00% 40.00% 43.00% 40.00% 45.00% 29.00% 38.00% 48.00% 41.00% 46.00% 40.00% 45.00% 39.00% 40.00% 42.00% 35.00% 39.00% 45.00% 41.00% 45.04%
70.00% 61.00% 59.00% 54.00% 63.00% 60.00% 54.00% 66.00% 53.00% 61.00% 54.00% 53.00% 57.00% 53.00% 59.00% 63.00% 54.00% 54.00% 50.00% 54.00% 60.00% 57.00% 54.00% 63.00% 53.00% 45.00% 67.00% ------ 45.00% 38.00% 56.00% 61.00% 55.00% 51.00% 52.00% 52.00% 64.00% 59.00% 57.00% 60.00% 68.00% 49.00% 59.00% 52.00% 55.00% 42.00% 45.00% 49.00% 50.00% 61.00% 55.73%
55.00% 60.00% 65.00% 52.00% 59.00% 58.00% 49.00% 67.00% 60.00% 55.00% 62.00% 60.00% 62.00% 55.00% 51.00% 70.00% 53.00% 62.00% 46.00% 51.00% 67.00% 71.00% 61.00% 54.00% 48.00% 54.00% 60.00% 60.00% ------ 43.00% 47.00% 71.00% 56.00% 53.00% 50.00% 54.00% 57.00% 53.00% 52.00% 66.00% 66.00% 52.00% 58.00% 50.00% 62.00% 52.00% 48.00% 47.00% 56.00% 56.00% 56.65%
69.00% 79.00% 65.00% 75.00% 74.00% 74.00% 65.00% 69.00% 69.00% 76.00% 76.00% 69.00% 68.00% 58.00% 70.00% 68.00% 66.00% 61.00% 61.00% 62.00% 70.00% 67.00% 67.00% 73.00% 56.00% 57.00% 70.00% 58.00% 68.00% ------ 66.00% 74.00% 56.00% 61.00% 65.00% 55.00% 62.00% 65.00% 63.00% 67.00% 64.00% 73.00% 64.00% 58.00% 62.00% 57.00% 65.00% 58.00% 60.00% 55.00% 65.51%
60.00% 62.00% 51.00% 65.00% 53.00% 66.00% 58.00% 65.00% 54.00% 57.00% 55.00% 66.00% 58.00% 47.00% 60.00% 55.00% 51.00% 56.00% 58.00% 57.00% 62.00% 65.00% 59.00% 54.00% 46.00% 54.00% 72.00% 54.00% 52.00% 56.00% ------ 68.00% 55.00% 59.00% 45.00% 52.00% 57.00% 65.00% 60.00% 54.00% 52.00% 51.00% 55.00% 55.00% 55.00% 52.00% 48.00% 61.00% 56.00% 46.00% 56.61%
60.00% 56.00% 49.00% 49.00% 48.00% 48.00% 52.00% 59.00% 42.00% 48.00% 50.00% 49.00% 61.00% 46.00% 58.00% 54.00% 45.00% 47.00% 48.00% 52.00% 54.00% 56.00% 46.00% 51.00% 49.00% 52.00% 48.00% 50.00% 46.00% 34.00% 42.00% ------ 56.00% 44.00% 42.00% 38.00% 43.00% 45.00% 47.00% 46.00% 32.00% 41.00% 50.00% 43.00% 38.00% 47.00% 43.00% 38.00% 54.00% 43.00% 47.73%
61.00% 60.00% 61.00% 65.00% 63.00% 55.00% 54.00% 61.00% 52.00% 61.00% 54.00% 63.00% 56.00% 48.00% 64.00% 54.00% 55.00% 51.00% 52.00% 46.00% 57.00% 49.00% 57.00% 52.00% 53.00% 52.00% 65.00% 52.00% 61.00% 44.00% 54.00% 63.00% ------ 58.00% 49.00% 52.00% 56.00% 65.00% 57.00% 58.00% 57.00% 54.00% 62.00% 49.00% 52.00% 50.00% 49.00% 39.00% 58.00% 53.00% 55.37%
62.00% 60.00% 57.00% 55.00% 57.00% 60.00% 55.00% 64.00% 56.00% 57.00% 50.00% 61.00% 55.00% 54.00% 65.00% 57.00% 48.00% 66.00% 61.00% 60.00% 56.00% 59.00% 53.00% 57.00% 55.00% 60.00% 65.00% 60.00% 48.00% 45.00% 52.00% 65.00% 56.00% ------ 57.00% 50.00% 50.00% 57.00% 56.00% 55.00% 60.00% 49.00% 60.00% 53.00% 43.00% 48.00% 48.00% 64.00% 54.00% 54.00% 56.10%
67.00% 73.00% 63.00% 64.00% 64.00% 59.00% 59.00% 65.00% 59.00% 65.00% 58.00% 68.00% 59.00% 68.00% 63.00% 63.00% 54.00% 65.00% 67.00% 64.00% 66.00% 67.00% 57.00% 61.00% 58.00% 59.00% 63.00% 61.00% 56.00% 47.00% 49.00% 63.00% 46.00% 49.00% ------ 57.00% 49.00% 51.00% 62.00% 63.00% 62.00% 45.00% 65.00% 58.00% 57.00% 55.00% 53.00% 60.00% 62.00% 67.00% 59.90%
68.00% 62.00% 62.00% 56.00% 55.00% 64.00% 61.00% 65.00% 58.00% 66.00% 63.00% 58.00% 63.00% 58.00% 63.00% 61.00% 50.00% 64.00% 58.00% 57.00% 62.00% 56.00% 60.00% 64.00% 53.00% 62.00% 72.00% 53.00% 57.00% 55.00% 49.00% 62.00% 43.00% 50.00% 61.00% ------ 62.00% 59.00% 55.00% 54.00% 62.00% 55.00% 56.00% 54.00% 53.00% 53.00% 64.00% 43.00% 63.00% 55.00% 58.35%
61.00% 55.00% 60.00% 74.00% 57.00% 70.00% 65.00% 60.00% 66.00% 66.00% 68.00% 60.00% 62.00% 51.00% 63.00% 64.00% 56.00% 54.00% 63.00% 58.00% 67.00% 60.00% 63.00% 55.00% 46.00% 55.00% 66.00% 53.00% 49.00% 50.00% 58.00% 61.00% 54.00% 57.00% 50.00% 65.00% ------ 67.00% 64.00% 67.00% 53.00% 49.00% 59.00% 50.00% 58.00% 56.00% 59.00% 47.00% 56.00% 54.00% 58.80%
55.00% 56.00% 58.00% 56.00% 60.00% 62.00% 63.00% 55.00% 57.00% 61.00% 58.00% 55.00% 67.00% 50.00% 52.00% 55.00% 49.00% 58.00% 51.00% 51.00% 54.00% 63.00% 58.00% 57.00% 62.00% 50.00% 54.00% 53.00% 46.00% 40.00% 45.00% 53.00% 41.00% 43.00% 52.00% 33.00% 40.00% ------ 57.00% 53.00% 47.00% 42.00% 41.00% 48.00% 40.00% 48.00% 44.00% 45.00% 48.00% 59.00% 51.94%
64.00% 57.00% 51.00% 62.00% 57.00% 57.00% 56.00% 53.00% 53.00% 52.00% 63.00% 63.00% 57.00% 57.00% 61.00% 59.00% 64.00% 66.00% 56.00% 51.00% 52.00% 51.00% 46.00% 55.00% 44.00% 51.00% 61.00% 55.00% 41.00% 40.00% 38.00% 48.00% 45.00% 46.00% 42.00% 42.00% 37.00% 38.00% ------ 55.00% 45.00% 41.00% 44.00% 48.00% 39.00% 48.00% 40.00% 41.00% 46.00% 51.00% 50.80%
55.00% 54.00% 56.00% 63.00% 60.00% 65.00% 54.00% 52.00% 56.00% 58.00% 62.00% 59.00% 53.00% 51.00% 63.00% 55.00% 56.00% 60.00% 58.00% 53.00% 64.00% 65.00% 57.00% 61.00% 47.00% 44.00% 61.00% 43.00% 44.00% 38.00% 55.00% 56.00% 54.00% 50.00% 41.00% 37.00% 49.00% 41.00% 43.00% ------ 50.00% 42.00% 51.00% 40.00% 46.00% 32.00% 47.00% 36.00% 56.00% 51.00% 51.92%
62.00% 58.00% 55.00% 65.00% 60.00% 61.00% 53.00% 65.00% 59.00% 61.00% 61.00% 61.00% 63.00% 54.00% 58.00% 61.00% 60.00% 47.00% 51.00% 52.00% 55.00% 61.00% 61.00% 56.00% 54.00% 52.00% 49.00% 49.00% 46.00% 43.00% 52.00% 57.00% 54.00% 52.00% 37.00% 43.00% 44.00% 50.00% 53.00% 51.00% ------ 35.00% 50.00% 44.00% 41.00% 35.00% 34.00% 36.00% 53.00% 49.00% 52.31%
69.00% 71.00% 66.00% 64.00% 76.00% 67.00% 69.00% 67.00% 55.00% 64.00% 66.00% 60.00% 58.00% 55.00% 53.00% 65.00% 57.00% 68.00% 58.00% 59.00% 69.00% 67.00% 57.00% 63.00% 58.00% 60.00% 57.00% 55.00% 54.00% 47.00% 59.00% 67.00% 53.00% 44.00% 51.00% 50.00% 50.00% 69.00% 71.00% 56.00% 64.00% ------ 58.00% 53.00% 45.00% 46.00% 57.00% 54.00% 64.00% 64.00% 59.78%
62.00% 58.00% 55.00% 57.00% 58.00% 64.00% 52.00% 58.00% 62.00% 62.00% 59.00% 68.00% 62.00% 59.00% 59.00% 54.00% 58.00% 64.00% 55.00% 51.00% 56.00% 51.00% 51.00% 58.00% 48.00% 53.00% 54.00% 44.00% 42.00% 40.00% 46.00% 55.00% 47.00% 52.00% 37.00% 45.00% 41.00% 55.00% 56.00% 46.00% 48.00% 37.00% ------ 45.00% 39.00% 44.00% 33.00% 32.00% 51.00% 52.00% 51.73%
71.00% 64.00% 74.00% 77.00% 68.00% 78.00% 63.00% 67.00% 71.00% 63.00% 66.00% 70.00% 64.00% 60.00% 65.00% 73.00% 64.00% 61.00% 55.00% 73.00% 60.00% 68.00% 66.00% 72.00% 63.00% 55.00% 64.00% 62.00% 56.00% 42.00% 60.00% 58.00% 45.00% 51.00% 44.00% 55.00% 46.00% 59.00% 50.00% 50.00% 59.00% 47.00% 61.00% ------ 48.00% 46.00% 36.00% 53.00% 58.00% 50.00% 59.82%
67.00% 61.00% 63.00% 63.00% 66.00% 66.00% 59.00% 72.00% 67.00% 69.00% 58.00% 68.00% 62.00% 61.00% 55.00% 70.00% 52.00% 59.00% 49.00% 54.00% 64.00% 69.00% 66.00% 51.00% 54.00% 51.00% 66.00% 54.00% 55.00% 57.00% 44.00% 59.00% 53.00% 58.00% 53.00% 46.00% 53.00% 63.00% 62.00% 60.00% 62.00% 52.00% 62.00% 63.00% ------ 50.00% 59.00% 50.00% 62.00% 52.00% 59.00%
70.00% 69.00% 61.00% 59.00% 61.00% 67.00% 62.00% 69.00% 57.00% 70.00% 64.00% 59.00% 70.00% 59.00% 62.00% 65.00% 55.00% 51.00% 60.00% 62.00% 68.00% 68.00% 60.00% 64.00% 54.00% 48.00% 61.00% 58.00% 53.00% 45.00% 56.00% 67.00% 51.00% 47.00% 50.00% 54.00% 57.00% 61.00% 67.00% 66.00% 54.00% 61.00% 65.00% 49.00% 56.00% ------ 48.00% 55.00% 55.00% 64.00% 59.47%
63.00% 64.00% 63.00% 58.00% 66.00% 74.00% 66.00% 65.00% 59.00% 64.00% 54.00% 69.00% 61.00% 58.00% 69.00% 64.00% 50.00% 61.00% 57.00% 63.00% 51.00% 63.00% 62.00% 54.00% 49.00% 53.00% 61.00% 45.00% 53.00% 49.00% 49.00% 65.00% 58.00% 53.00% 48.00% 55.00% 49.00% 66.00% 58.00% 72.00% 56.00% 48.00% 66.00% 54.00% 54.00% 50.00% ------ 41.00% 58.00% 61.00% 58.14%
64.00% 63.00% 66.00% 61.00% 56.00% 65.00% 72.00% 63.00% 61.00% 62.00% 65.00% 63.00% 60.00% 62.00% 67.00% 66.00% 57.00% 66.00% 62.00% 50.00% 59.00% 67.00% 63.00% 65.00% 61.00% 58.00% 65.00% 58.00% 50.00% 43.00% 56.00% 63.00% 56.00% 60.00% 52.00% 50.00% 51.00% 59.00% 67.00% 54.00% 59.00% 46.00% 63.00% 51.00% 59.00% 58.00% 54.00% ------ 50.00% 54.00% 59.22%
61.00% 60.00% 60.00% 62.00% 69.00% 58.00% 55.00% 57.00% 55.00% 59.00% 59.00% 51.00% 48.00% 54.00% 66.00% 53.00% 43.00% 56.00% 50.00% 54.00% 58.00% 50.00% 53.00% 58.00% 55.00% 52.00% 55.00% 49.00% 50.00% 34.00% 49.00% 52.00% 54.00% 41.00% 37.00% 33.00% 43.00% 48.00% 52.00% 42.00% 56.00% 43.00% 43.00% 46.00% 44.00% 45.00% 36.00% 38.00% ------ 62.00% 51.18%
61.00% 61.00% 57.00% 64.00% 62.00% 58.00% 57.00% 59.00% 63.00% 49.00% 65.00% 58.00% 56.00% 51.00% 57.00% 52.00% 55.00% 56.00% 61.00% 57.00% 55.00% 62.00% 55.00% 57.00% 46.00% 54.00% 67.00% 51.00% 59.00% 45.00% 51.00% 50.00% 54.00% 52.00% 46.00% 47.00% 43.00% 59.00% 50.00% 52.00% 52.00% 36.00% 44.00% 45.00% 36.00% 42.00% 43.00% 44.00% 46.00% ------ 53.10%
