Parameters:
  ELITISM 5
  EVALUATOR_DRAFTS 10
  EVALUATOR_ROUNDS 10
  EVOLUTION_DRAFTS 10
  EVOLUTION_ROUNDS 10
  GENERATIONS 50
  INDIVIDUAL BinaryTree
  MUTATION_RATE 0.05
  POPULATION 50
  SCORING frombest

generation   1: 132.64s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureAttack, FeatureHasWard), state_node: FeatureMeDecksize }
generation   2: 125.83s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureAttack, Literal(-0.92011094)), state_node: FeatureOpNextTurnDraw }
generation   3: 117.42s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureAttack, FeatureHasWard), state_node: OperatorSub(FeatureMeDecksize, FeatureOpHealth) }
generation   4: 123.84s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureAttack, FeatureHasWard), state_node: OperatorSub(FeatureMeDecksize, FeatureOpHealth) }
generation   5: 138.22s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureAttack, FeatureHasWard), state_node: OperatorSub(FeatureMeDecksize, FeatureOpHealth) }
generation   6: 134.02s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureAttack, FeatureHasWard), state_node: OperatorSub(FeatureMeDecksize, FeatureOpHealth) }
generation   7: 134.40s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureAttack, OperatorMin(FeatureHasCharge, OperatorMax(FeatureAttack, FeatureHasDrain))), state_node: OperatorSub(FeatureMeDecksize, FeatureOpHealth) }
generation   8: 142.45s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasGuard, FeatureAttack), FeatureHasWard), FeatureAttack), state_node: OperatorSub(FeatureOpMaxMana, FeatureOpHealth) }
generation   9: 137.76s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasGuard, FeatureHasCharge), FeatureHasDrain), FeatureAttack), state_node: OperatorSub(FeatureOpNextTurnDraw, FeatureOpHealth) }
generation  10: 134.08s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorMul(FeatureHasDrain, OperatorAdd(FeatureAttack, FeatureAttack)), OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), state_node: FeatureOpNextTurnDraw }
generation  11: 136.51s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorMul(FeatureHasDrain, OperatorAdd(FeatureAttack, FeatureAttack)), OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), state_node: FeatureOpNextTurnDraw }
generation  12: 127.35s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), state_node: FeatureOpMaxMana }
generation  13: 142.75s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorMul(FeatureHasDrain, OperatorAdd(FeatureAttack, OperatorMul(FeatureHasBreakthrough, OperatorMul(FeatureHasCharge, OperatorAdd(OperatorMax(FeatureHasWard, FeatureHasWard), FeatureHasWard))))), OperatorMin(OperatorMul(FeatureAttack, FeatureHasGuard), FeatureAttack)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), state_node: OperatorSub(FeatureOpNextTurnDraw, FeatureOpHealth) }
generation  14: 139.74s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorMul(FeatureHasDrain, OperatorAdd(FeatureAttack, OperatorMul(FeatureHasBreakthrough, OperatorMul(FeatureHasCharge, OperatorAdd(OperatorMax(FeatureHasWard, FeatureHasWard), FeatureHasWard))))), OperatorMin(OperatorMul(FeatureAttack, FeatureHasGuard), FeatureAttack)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), state_node: OperatorSub(FeatureOpNextTurnDraw, FeatureOpHealth) }
generation  15: 130.95s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), state_node: FeatureOpNextTurnDraw }
generation  16: 141.93s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), state_node: FeatureOpNextTurnDraw }
generation  17: 135.54s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasDrain), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), state_node: FeatureOpNextTurnDraw }
generation  18: 139.29s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, FeatureHasLethal)), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), state_node: FeatureMeDecksize }
generation  19: 130.42s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(FeatureHasBreakthrough, FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, FeatureHasBreakthrough), OperatorAdd(FeatureDefense, OperatorSub(FeatureAttack, FeatureHasWard))))))), state_node: OperatorSub(FeatureOpNextTurnDraw, FeatureOpHealth) }
generation  20: 156.28s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(FeatureHasBreakthrough, FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, FeatureHasBreakthrough), OperatorAdd(FeatureDefense, OperatorSub(FeatureAttack, FeatureHasWard))))))), state_node: OperatorSub(FeatureOpNextTurnDraw, FeatureOpHealth) }
generation  21: 150.99s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasBreakthrough, FeatureHasLethal), OperatorMax(OperatorAdd(FeatureDefense, FeatureHasGuard), OperatorMin(FeatureHasDrain, FeatureDefense)))), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasLethal), state_node: OperatorSub(FeatureMeRune, FeatureOpHealth) }
generation  22: 157.54s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasBreakthrough, FeatureHasLethal), OperatorMax(OperatorAdd(FeatureDefense, FeatureHasGuard), OperatorMin(FeatureHasDrain, FeatureDefense)))), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasLethal), state_node: OperatorSub(FeatureMeRune, FeatureOpHealth) }
generation  23: 154.33s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(FeatureAttack, OperatorMin(OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, FeatureHasLethal)), FeatureHasWard)))), FeatureAttack))), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, FeatureHasLethal)), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  24: 170.49s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), FeatureAttack), OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, FeatureHasLethal)), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  25: 169.58s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(FeatureHasBreakthrough, FeatureHasGuard), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  26: 151.92s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(FeatureHasBreakthrough, FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(FeatureHasLethal, FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  27: 137.49s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, FeatureDefense), FeatureHasWard))), OperatorAdd(FeatureDefense, FeatureHasLethal)))), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureMeDecksize) }
generation  28: 141.79s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasGuard, OperatorSub(OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  29: 148.95s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorAdd(FeatureDefense, FeatureHasLethal)), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  30: 147.72s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorAdd(FeatureDefense, FeatureHasLethal)), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  31: 143.00s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(FeatureHasLethal, OperatorAdd(FeatureDefense, FeatureDefense)))), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasLethal)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureMeDecksize) }
generation  32: 141.92s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorAdd(FeatureDefense, FeatureHasLethal)), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  33: 139.89s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(FeatureAttack, FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(Literal(0.13555455), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal))))), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  34: 139.80s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorAdd(FeatureDefense, FeatureHasLethal)), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorMul(FeatureHasLethal, OperatorAdd(FeatureDefense, FeatureDefense)), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  35: 130.37s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorAdd(FeatureDefense, FeatureHasLethal)), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorMul(FeatureHasLethal, OperatorAdd(FeatureDefense, FeatureDefense)), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  36: 140.09s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(FeatureHasLethal, OperatorAdd(FeatureDefense, FeatureDefense)))), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(FeatureHasLethal, OperatorMin(FeatureHasGuard, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(FeatureHasBreakthrough, OperatorAdd(FeatureDefense, FeatureHasLethal)), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureDefense)))), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  37: 150.42s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMul(FeatureHasDrain, OperatorAdd(OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasGuard)), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasGuard, OperatorSub(OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureHasLethal, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  38: 148.90s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMul(FeatureHasDrain, OperatorAdd(OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasGuard)), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasGuard, OperatorSub(OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureHasLethal, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  39: 167.56s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMul(FeatureHasDrain, OperatorAdd(OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasGuard)), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasGuard, OperatorSub(OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureHasLethal, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, FeatureHasLethal), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureMeMaxMana, FeatureOpNextTurnDraw) }
generation  40: 160.81s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorAdd(FeatureDefense, FeatureHasLethal), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, FeatureHasLethal), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  41: 157.47s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMul(FeatureHasDrain, OperatorAdd(FeatureDefense, FeatureHasGuard)), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasGuard, OperatorSub(OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal)))))), FeatureHasGuard)), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  42: 164.74s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureDefense), OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(FeatureHasBreakthrough, FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasWard))), OperatorMul(FeatureHasCharge, OperatorMin(OperatorMax(OperatorSub(FeatureAttack, FeatureHasLethal), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), OperatorMin(FeatureHasGuard, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureDefense))), FeatureHasGuard)), OperatorMul(OperatorMin(FeatureDefense, FeatureAttack), OperatorAdd(FeatureDefense, FeatureHasLethal))))), OperatorAdd(FeatureDefense, FeatureHasLethal))), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasLethal)), FeatureHasCharge))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(OperatorMax(FeatureAttack, OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorAdd(FeatureDefense, FeatureHasLethal)), FeatureHasWard)))), OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), OperatorAdd(Literal(0.13555455), FeatureHasGuard))), state_node: OperatorSub(OperatorAdd(FeatureOpDecksize, FeatureOpNextTurnDraw), FeatureOpDecksize) }
generation  43: 145.98s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMul(FeatureHasDrain, OperatorAdd(OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasGuard)), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasBreakthrough), FeatureDefense)), OperatorAdd(FeatureDefense, FeatureHasGuard)), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureHasLethal, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  44: 158.86s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal))), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(FeatureHasLethal, OperatorMin(FeatureHasGuard, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(FeatureHasLethal, OperatorMin(FeatureHasGuard, OperatorSub(FeatureHasBreakthrough, FeatureHasWard))), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)), FeatureHasLethal)), OperatorAdd(OperatorAdd(FeatureDefense, FeatureHasLethal), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal))))), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpDecksize, FeatureOpMaxMana)) }
generation  45: 165.66s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(FeatureAttack, OperatorAdd(FeatureDefense, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal))))), FeatureHasWard)), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorAdd(FeatureHasLethal, OperatorMin(FeatureHasGuard, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(FeatureHasBreakthrough, OperatorAdd(FeatureDefense, FeatureHasLethal)), OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureDefense, OperatorAdd(OperatorMax(FeatureAttack, FeatureHasLethal), FeatureHasGuard)))))))), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureHasWard, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  46: 157.83s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMul(FeatureHasDrain, OperatorAdd(OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasGuard)), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasBreakthrough), FeatureDefense)), OperatorAdd(FeatureDefense, FeatureHasGuard)), OperatorSub(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, OperatorMax(FeatureHasGuard, OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureAttack), FeatureHasLethal), FeatureHasLethal)))), FeatureHasWard))))), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureHasLethal, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(OperatorAdd(FeatureOpNextTurnDraw, Literal(-0.72061825)), FeatureOpNextTurnDraw)) }
generation  47: 158.36s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorAdd(FeatureDefense, FeatureHasLethal), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMul(FeatureHasDrain, OperatorAdd(FeatureDefense, FeatureHasGuard)), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureHasGuard, OperatorSub(OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), FeatureDefense), OperatorAdd(FeatureDefense, FeatureDefense))), FeatureHasWard))))), FeatureDefense)), OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), OperatorMin(FeatureDefense, OperatorMul(OperatorMin(OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorMin(OperatorMax(OperatorMul(Literal(0.13555455), FeatureHasGuard), OperatorSub(Literal(0.13555455), FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorAdd(FeatureHasDrain, OperatorMin(FeatureHasGuard, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(FeatureHasBreakthrough, OperatorAdd(FeatureDefense, FeatureHasLethal)), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasGuard))))))), OperatorAdd(FeatureAttack, FeatureHasGuard)), OperatorSub(Literal(0.13555455), FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense), OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal))))), OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal)))))), FeatureHasGuard)), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard))))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  48: 149.82s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMul(FeatureHasDrain, OperatorAdd(OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasGuard)), FeatureHasGuard), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasBreakthrough), FeatureDefense)), OperatorAdd(FeatureDefense, FeatureHasGuard)), OperatorSub(FeatureAttack, OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureHasLethal, OperatorAdd(OperatorAdd(OperatorMax(FeatureHasDrain, FeatureAttack), FeatureDefense), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard))), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureHasLethal, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  49: 144.30s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMul(OperatorMul(FeatureHasDrain, OperatorAdd(OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureHasGuard)), OperatorAdd(FeatureDefense, FeatureHasGuard)), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasBreakthrough), FeatureDefense)), OperatorAdd(FeatureDefense, FeatureHasGuard)), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureHasLethal, OperatorAdd(OperatorAdd(OperatorSub(FeatureHasBreakthrough, FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  50: 170.55s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(FeatureAttack, OperatorMax(OperatorMul(FeatureAttack, OperatorMin(FeatureDefense, OperatorAdd(FeatureDefense, FeatureHasLethal))), FeatureDefense)), OperatorAdd(OperatorAdd(OperatorMax(FeatureAttack, OperatorMin(FeatureDefense, OperatorMul(OperatorMin(FeatureDefense, OperatorAdd(OperatorAdd(OperatorSub(OperatorMax(FeatureHasCharge, OperatorMin(FeatureHasWard, OperatorAdd(FeatureHasBreakthrough, FeatureHasLethal))), FeatureHasWard), FeatureHasLethal), FeatureHasLethal)), OperatorAdd(FeatureDefense, FeatureHasLethal)))), FeatureHasGuard), FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
------ 64.00% 57.00% 52.00% 45.00% 58.00% 62.00% 53.00% 67.00% 61.00% 75.00% 52.00% 64.00% 51.00% 59.00% 57.00% 46.00% 63.00% 66.00% 60.00% 47.00% 62.00% 63.00% 57.00% 61.00% 57.00% 47.00% 56.00% 58.00% 59.00% 60.00% 68.00% 59.00% 60.00% 52.00% 70.00% 55.00% 61.00% 49.00% 53.00% 50.00% 63.00% 61.00% 56.00% 60.00% 63.00% 55.00% 55.00% 50.00% 59.00% 57.92%
47.00% ------ 50.00% 53.00% 52.00% 45.00% 56.00% 59.00% 57.00% 57.00% 53.00% 56.00% 50.00% 48.00% 49.00% 47.00% 50.00% 49.00% 57.00% 56.00% 44.00% 46.00% 46.00% 50.00% 47.00% 43.00% 46.00% 49.00% 43.00% 42.00% 46.00% 54.00% 49.00% 45.00% 57.00% 43.00% 45.00% 50.00% 51.00% 39.00% 45.00% 46.00% 53.00% 44.00% 47.00% 58.00% 57.00% 45.00% 42.00% 51.00% 49.27%
50.00% 53.00% ------ 47.00% 51.00% 50.00% 55.00% 54.00% 53.00% 57.00% 52.00% 52.00% 43.00% 58.00% 59.00% 49.00% 48.00% 52.00% 49.00% 46.00% 49.00% 44.00% 55.00% 49.00% 53.00% 54.00% 52.00% 51.00% 64.00% 51.00% 47.00% 54.00% 49.00% 62.00% 56.00% 66.00% 51.00% 54.00% 47.00% 53.00% 56.00% 55.00% 46.00% 47.00% 54.00% 46.00% 45.00% 59.00% 53.00% 62.00% 52.29%
50.00% 48.00% 53.00% ------ 52.00% 56.00% 45.00% 57.00% 57.00% 60.00% 54.00% 60.00% 48.00% 50.00% 52.00% 57.00% 53.00% 62.00% 54.00% 61.00% 44.00% 52.00% 55.00% 53.00% 51.00% 57.00% 53.00% 59.00% 60.00% 49.00% 53.00% 51.00% 61.00% 62.00% 55.00% 65.00% 63.00% 50.00% 50.00% 48.00% 49.00% 56.00% 56.00% 53.00% 57.00% 53.00% 51.00% 50.00% 55.00% 53.00% 54.14%
49.00% 50.00% 47.00% 52.00% ------ 44.00% 58.00% 44.00% 57.00% 56.00% 60.00% 60.00% 48.00% 52.00% 55.00% 47.00% 55.00% 61.00% 52.00% 54.00% 42.00% 51.00% 49.00% 52.00% 56.00% 53.00% 48.00% 49.00% 59.00% 65.00% 56.00% 47.00% 53.00% 56.00% 52.00% 65.00% 51.00% 52.00% 48.00% 58.00% 49.00% 51.00% 52.00% 51.00% 56.00% 62.00% 48.00% 56.00% 60.00% 57.00% 53.16%
53.00% 54.00% 48.00% 51.00% 60.00% ------ 50.00% 48.00% 52.00% 65.00% 59.00% 53.00% 48.00% 47.00% 49.00% 60.00% 46.00% 56.00% 55.00% 55.00% 54.00% 42.00% 58.00% 54.00% 64.00% 58.00% 62.00% 67.00% 51.00% 59.00% 49.00% 53.00% 50.00% 55.00% 62.00% 57.00% 58.00% 52.00% 46.00% 59.00% 50.00% 56.00% 54.00% 57.00% 41.00% 53.00% 57.00% 53.00% 49.00% 53.00% 53.92%
52.00% 64.00% 53.00% 53.00% 43.00% 46.00% ------ 49.00% 67.00% 47.00% 44.00% 48.00% 54.00% 53.00% 49.00% 55.00% 51.00% 51.00% 50.00% 58.00% 47.00% 47.00% 44.00% 54.00% 59.00% 54.00% 43.00% 50.00% 48.00% 46.00% 51.00% 53.00% 50.00% 45.00% 54.00% 67.00% 53.00% 50.00% 52.00% 55.00% 45.00% 53.00% 56.00% 56.00% 52.00% 61.00% 50.00% 51.00% 48.00% 54.00% 51.73%
56.00% 53.00% 45.00% 47.00% 45.00% 50.00% 46.00% ------ 45.00% 53.00% 52.00% 48.00% 37.00% 48.00% 44.00% 47.00% 58.00% 61.00% 50.00% 46.00% 50.00% 56.00% 52.00% 51.00% 53.00% 45.00% 52.00% 58.00% 51.00% 56.00% 53.00% 56.00% 57.00% 52.00% 54.00% 70.00% 47.00% 52.00% 52.00% 45.00% 49.00% 50.00% 47.00% 48.00% 48.00% 53.00% 51.00% 42.00% 54.00% 61.00% 50.94%
56.00% 57.00% 44.00% 52.00% 44.00% 55.00% 53.00% 58.00% ------ 58.00% 50.00% 61.00% 55.00% 54.00% 45.00% 57.00% 42.00% 47.00% 49.00% 40.00% 57.00% 45.00% 49.00% 51.00% 55.00% 51.00% 45.00% 48.00% 47.00% 46.00% 53.00% 51.00% 52.00% 53.00% 49.00% 50.00% 48.00% 51.00% 50.00% 44.00% 45.00% 57.00% 43.00% 56.00% 46.00% 45.00% 49.00% 51.00% 49.00% 43.00% 50.12%
57.00% 59.00% 57.00% 63.00% 50.00% 50.00% 63.00% 61.00% 56.00% ------ 56.00% 59.00% 51.00% 50.00% 51.00% 61.00% 60.00% 61.00% 71.00% 64.00% 57.00% 61.00% 55.00% 62.00% 58.00% 59.00% 56.00% 53.00% 58.00% 52.00% 55.00% 61.00% 54.00% 54.00% 52.00% 67.00% 57.00% 51.00% 48.00% 51.00% 58.00% 59.00% 51.00% 61.00% 58.00% 56.00% 54.00% 56.00% 55.00% 55.00% 56.82%
57.00% 58.00% 49.00% 59.00% 54.00% 58.00% 60.00% 53.00% 56.00% 48.00% ------ 49.00% 56.00% 61.00% 58.00% 58.00% 54.00% 54.00% 53.00% 52.00% 53.00% 57.00% 66.00% 58.00% 65.00% 65.00% 53.00% 65.00% 57.00% 47.00% 58.00% 62.00% 60.00% 55.00% 66.00% 62.00% 57.00% 55.00% 61.00% 52.00% 61.00% 55.00% 57.00% 51.00% 56.00% 62.00% 52.00% 57.00% 64.00% 56.00% 56.98%
53.00% 54.00% 60.00% 59.00% 61.00% 58.00% 61.00% 65.00% 61.00% 62.00% 64.00% ------ 54.00% 60.00% 59.00% 64.00% 61.00% 64.00% 57.00% 62.00% 60.00% 55.00% 54.00% 59.00% 68.00% 48.00% 55.00% 61.00% 56.00% 60.00% 56.00% 55.00% 57.00% 62.00% 59.00% 68.00% 59.00% 68.00% 54.00% 61.00% 56.00% 63.00% 66.00% 52.00% 64.00% 56.00% 57.00% 62.00% 55.00% 65.00% 59.39%
54.00% 67.00% 57.00% 51.00% 59.00% 54.00% 56.00% 39.00% 54.00% 49.00% 62.00% 50.00% ------ 56.00% 42.00% 46.00% 57.00% 62.00% 52.00% 53.00% 47.00% 59.00% 54.00% 53.00% 60.00% 58.00% 61.00% 46.00% 60.00% 55.00% 53.00% 50.00% 54.00% 55.00% 58.00% 68.00% 49.00% 54.00% 50.00% 51.00% 51.00% 47.00% 48.00% 49.00% 54.00% 55.00% 54.00% 49.00% 44.00% 54.00% 53.47%
50.00% 55.00% 50.00% 46.00% 46.00% 65.00% 58.00% 48.00% 56.00% 54.00% 56.00% 56.00% 51.00% ------ 53.00% 63.00% 59.00% 60.00% 60.00% 61.00% 57.00% 49.00% 61.00% 53.00% 56.00% 51.00% 52.00% 57.00% 53.00% 63.00% 47.00% 56.00% 53.00% 51.00% 58.00% 65.00% 48.00% 55.00% 48.00% 55.00% 56.00% 55.00% 58.00% 50.00% 47.00% 59.00% 41.00% 51.00% 49.00% 48.00% 54.06%
62.00% 55.00% 62.00% 60.00% 60.00% 58.00% 52.00% 58.00% 64.00% 48.00% 66.00% 61.00% 53.00% 69.00% ------ 64.00% 60.00% 60.00% 65.00% 59.00% 59.00% 66.00% 52.00% 62.00% 60.00% 56.00% 61.00% 65.00% 60.00% 60.00% 54.00% 53.00% 63.00% 69.00% 52.00% 73.00% 55.00% 53.00% 50.00% 57.00% 63.00% 66.00% 60.00% 52.00% 49.00% 59.00% 65.00% 60.00% 54.00% 67.00% 59.41%
65.00% 64.00% 55.00% 62.00% 62.00% 60.00% 69.00% 49.00% 61.00% 61.00% 65.00% 61.00% 56.00% 55.00% 55.00% ------ 63.00% 61.00% 61.00% 59.00% 52.00% 63.00% 69.00% 55.00% 61.00% 66.00% 60.00% 67.00% 52.00% 57.00% 59.00% 54.00% 69.00% 62.00% 58.00% 84.00% 53.00% 66.00% 53.00% 63.00% 54.00% 56.00% 56.00% 53.00% 58.00% 61.00% 55.00% 65.00% 63.00% 57.00% 60.10%
54.00% 73.00% 51.00% 57.00% 51.00% 55.00% 63.00% 63.00% 61.00% 61.00% 59.00% 55.00% 66.00% 63.00% 62.00% 60.00% ------ 69.00% 68.00% 54.00% 51.00% 60.00% 64.00% 64.00% 54.00% 58.00% 64.00% 58.00% 61.00% 51.00% 46.00% 55.00% 65.00% 67.00% 62.00% 69.00% 64.00% 66.00% 55.00% 58.00% 66.00% 58.00% 61.00% 57.00% 59.00% 54.00% 50.00% 63.00% 58.00% 59.00% 59.63%
49.00% 63.00% 52.00% 58.00% 58.00% 48.00% 67.00% 64.00% 63.00% 61.00% 62.00% 63.00% 64.00% 56.00% 56.00% 49.00% 59.00% ------ 61.00% 64.00% 56.00% 64.00% 60.00% 63.00% 68.00% 65.00% 58.00% 54.00% 64.00% 51.00% 53.00% 59.00% 56.00% 67.00% 68.00% 67.00% 56.00% 62.00% 63.00% 59.00% 58.00% 58.00% 58.00% 54.00% 61.00% 52.00% 59.00% 60.00% 58.00% 61.00% 59.37%
48.00% 69.00% 60.00% 49.00% 42.00% 56.00% 62.00% 59.00% 46.00% 55.00% 50.00% 55.00% 64.00% 54.00% 47.00% 53.00% 53.00% 55.00% ------ 58.00% 51.00% 55.00% 54.00% 64.00% 58.00% 59.00% 46.00% 53.00% 58.00% 61.00% 51.00% 52.00% 69.00% 55.00% 59.00% 69.00% 50.00% 52.00% 48.00% 55.00% 58.00% 50.00% 62.00% 51.00% 57.00% 54.00% 59.00% 53.00% 55.00% 51.00% 55.18%
58.00% 60.00% 55.00% 52.00% 50.00% 60.00% 61.00% 52.00% 49.00% 53.00% 55.00% 56.00% 50.00% 49.00% 50.00% 58.00% 59.00% 51.00% 57.00% ------ 53.00% 48.00% 56.00% 56.00% 55.00% 54.00% 55.00% 53.00% 62.00% 52.00% 53.00% 51.00% 60.00% 55.00% 60.00% 67.00% 46.00% 52.00% 49.00% 53.00% 50.00% 54.00% 48.00% 45.00% 60.00% 58.00% 61.00% 58.00% 59.00% 62.00% 54.69%
58.00% 60.00% 57.00% 61.00% 57.00% 55.00% 61.00% 57.00% 63.00% 61.00% 49.00% 63.00% 56.00% 59.00% 52.00% 52.00% 52.00% 53.00% 54.00% 63.00% ------ 56.00% 58.00% 52.00% 57.00% 62.00% 56.00% 61.00% 56.00% 49.00% 52.00% 51.00% 64.00% 65.00% 58.00% 67.00% 64.00% 42.00% 60.00% 51.00% 51.00% 53.00% 56.00% 60.00% 52.00% 63.00% 53.00% 60.00% 58.00% 59.00% 56.92%
68.00% 67.00% 60.00% 54.00% 63.00% 67.00% 50.00% 55.00% 65.00% 51.00% 57.00% 54.00% 56.00% 50.00% 63.00% 61.00% 55.00% 52.00% 60.00% 67.00% 57.00% ------ 62.00% 49.00% 57.00% 53.00% 65.00% 58.00% 56.00% 56.00% 56.00% 55.00% 61.00% 62.00% 56.00% 62.00% 53.00% 55.00% 65.00% 55.00% 61.00% 54.00% 53.00% 58.00% 56.00% 61.00% 60.00% 54.00% 55.00% 64.00% 58.04%
57.00% 59.00% 59.00% 67.00% 55.00% 59.00% 65.00% 68.00% 66.00% 63.00% 59.00% 55.00% 67.00% 62.00% 55.00% 55.00% 64.00% 66.00% 52.00% 60.00% 61.00% 64.00% ------ 58.00% 58.00% 63.00% 57.00% 60.00% 57.00% 55.00% 55.00% 64.00% 64.00% 58.00% 70.00% 74.00% 56.00% 58.00% 58.00% 51.00% 62.00% 63.00% 50.00% 59.00% 53.00% 63.00% 62.00% 61.00% 57.00% 58.00% 60.04%
62.00% 71.00% 68.00% 62.00% 57.00% 61.00% 63.00% 62.00% 59.00% 59.00% 60.00% 61.00% 65.00% 62.00% 61.00% 54.00% 62.00% 56.00% 57.00% 52.00% 63.00% 61.00% 62.00% ------ 54.00% 60.00% 61.00% 47.00% 62.00% 65.00% 52.00% 62.00% 60.00% 55.00% 53.00% 78.00% 57.00% 64.00% 56.00% 57.00% 58.00% 63.00% 54.00% 64.00% 57.00% 59.00% 61.00% 62.00% 60.00% 68.00% 60.18%
56.00% 66.00% 57.00% 46.00% 64.00% 52.00% 64.00% 62.00% 61.00% 58.00% 62.00% 60.00% 65.00% 62.00% 55.00% 63.00% 66.00% 63.00% 67.00% 55.00% 56.00% 48.00% 55.00% 64.00% ------ 51.00% 60.00% 57.00% 55.00% 58.00% 63.00% 64.00% 57.00% 54.00% 62.00% 77.00% 55.00% 51.00% 60.00% 69.00% 55.00% 59.00% 56.00% 60.00% 61.00% 59.00% 60.00% 61.00% 57.00% 67.00% 59.49%
57.00% 66.00% 59.00% 62.00% 53.00% 57.00% 64.00% 55.00% 60.00% 63.00% 58.00% 60.00% 65.00% 68.00% 53.00% 69.00% 61.00% 67.00% 63.00% 65.00% 66.00% 57.00% 61.00% 59.00% 61.00% ------ 55.00% 58.00% 53.00% 67.00% 58.00% 56.00% 64.00% 57.00% 57.00% 71.00% 56.00% 58.00% 56.00% 61.00% 61.00% 51.00% 58.00% 58.00% 58.00% 62.00% 57.00% 55.00% 60.00% 58.00% 59.88%
54.00% 64.00% 63.00% 53.00% 57.00% 57.00% 63.00% 57.00% 61.00% 63.00% 59.00% 62.00% 59.00% 53.00% 64.00% 53.00% 49.00% 66.00% 53.00% 57.00% 50.00% 60.00% 58.00% 59.00% 55.00% 57.00% ------ 58.00% 64.00% 57.00% 56.00% 55.00% 68.00% 61.00% 67.00% 71.00% 53.00% 48.00% 62.00% 59.00% 55.00% 57.00% 53.00% 56.00% 53.00% 58.00% 57.00% 52.00% 61.00% 65.00% 58.20%
60.00% 63.00% 58.00% 54.00% 64.00% 58.00% 60.00% 58.00% 64.00% 63.00% 62.00% 53.00% 61.00% 53.00% 62.00% 59.00% 55.00% 61.00% 56.00% 59.00% 56.00% 57.00% 67.00% 65.00% 57.00% 63.00% 53.00% ------ 54.00% 64.00% 50.00% 56.00% 56.00% 62.00% 69.00% 72.00% 55.00% 53.00% 58.00% 55.00% 69.00% 57.00% 67.00% 57.00% 58.00% 56.00% 64.00% 54.00% 52.00% 66.00% 59.29%
53.00% 73.00% 59.00% 66.00% 65.00% 64.00% 58.00% 60.00% 69.00% 65.00% 64.00% 59.00% 71.00% 65.00% 65.00% 68.00% 61.00% 68.00% 54.00% 67.00% 58.00% 64.00% 59.00% 64.00% 64.00% 62.00% 57.00% 64.00% ------ 60.00% 62.00% 62.00% 57.00% 68.00% 58.00% 67.00% 58.00% 65.00% 60.00% 57.00% 54.00% 56.00% 55.00% 60.00% 54.00% 61.00% 57.00% 65.00% 62.00% 57.00% 61.65%
57.00% 71.00% 64.00% 63.00% 45.00% 50.00% 64.00% 65.00% 71.00% 68.00% 64.00% 60.00% 61.00% 66.00% 53.00% 64.00% 63.00% 66.00% 58.00% 54.00% 57.00% 61.00% 61.00% 55.00% 57.00% 61.00% 67.00% 65.00% 65.00% ------ 62.00% 64.00% 58.00% 58.00% 66.00% 71.00% 68.00% 65.00% 50.00% 58.00% 55.00% 62.00% 62.00% 59.00% 63.00% 49.00% 60.00% 59.00% 67.00% 63.00% 61.12%
63.00% 60.00% 61.00% 57.00% 52.00% 51.00% 54.00% 63.00% 64.00% 62.00% 60.00% 61.00% 57.00% 66.00% 57.00% 58.00% 58.00% 58.00% 54.00% 57.00% 50.00% 58.00% 61.00% 58.00% 63.00% 54.00% 61.00% 58.00% 59.00% 64.00% ------ 57.00% 55.00% 57.00% 62.00% 81.00% 63.00% 48.00% 44.00% 55.00% 67.00% 56.00% 48.00% 56.00% 58.00% 45.00% 52.00% 60.00% 64.00% 68.00% 58.27%
57.00% 78.00% 69.00% 65.00% 59.00% 57.00% 68.00% 57.00% 65.00% 57.00% 59.00% 66.00% 59.00% 64.00% 60.00% 63.00% 56.00% 51.00% 57.00% 56.00% 64.00% 67.00% 69.00% 60.00% 57.00% 56.00% 56.00% 50.00% 64.00% 61.00% 57.00% ------ 63.00% 59.00% 55.00% 73.00% 50.00% 65.00% 53.00% 57.00% 60.00% 57.00% 62.00% 57.00% 57.00% 59.00% 63.00% 70.00% 60.00% 62.00% 60.53%
55.00% 60.00% 54.00% 48.00% 57.00% 59.00% 67.00% 61.00% 59.00% 65.00% 65.00% 64.00% 64.00% 63.00% 57.00% 55.00% 47.00% 59.00% 63.00% 59.00% 62.00% 60.00% 62.00% 55.00% 53.00% 53.00% 59.00% 58.00% 52.00% 66.00% 46.00% 58.00% ------ 57.00% 56.00% 68.00% 55.00% 50.00% 54.00% 66.00% 51.00% 58.00% 63.00% 62.00% 53.00% 62.00% 53.00% 60.00% 60.00% 60.00% 58.22%
63.00% 74.00% 63.00% 61.00% 60.00% 52.00% 64.00% 58.00% 67.00% 60.00% 56.00% 65.00% 61.00% 59.00% 57.00% 64.00% 55.00% 53.00% 62.00% 54.00% 67.00% 59.00% 65.00% 58.00% 62.00% 57.00% 55.00% 56.00% 63.00% 65.00% 47.00% 59.00% 58.00% ------ 51.00% 81.00% 51.00% 61.00% 65.00% 51.00% 49.00% 56.00% 65.00% 49.00% 55.00% 62.00% 64.00% 58.00% 54.00% 61.00% 59.43%
55.00% 72.00% 62.00% 58.00% 55.00% 63.00% 58.00% 58.00% 69.00% 66.00% 60.00% 56.00% 58.00% 61.00% 60.00% 64.00% 60.00% 52.00% 66.00% 69.00% 63.00% 58.00% 56.00% 61.00% 61.00% 65.00% 59.00% 68.00% 60.00% 61.00% 51.00% 60.00% 65.00% 64.00% ------ 79.00% 59.00% 63.00% 55.00% 60.00% 56.00% 44.00% 67.00% 56.00% 62.00% 60.00% 51.00% 55.00% 66.00% 63.00% 60.61%
37.00% 75.00% 56.00% 49.00% 48.00% 48.00% 50.00% 49.00% 53.00% 52.00% 47.00% 40.00% 54.00% 46.00% 51.00% 54.00% 35.00% 39.00% 45.00% 48.00% 51.00% 50.00% 50.00% 41.00% 40.00% 44.00% 44.00% 47.00% 36.00% 40.00% 41.00% 44.00% 57.00% 45.00% 49.00% ------ 50.00% 49.00% 52.00% 41.00% 43.00% 38.00% 44.00% 44.00% 44.00% 39.00% 37.00% 46.00% 37.00% 48.00% 46.27%
55.00% 61.00% 54.00% 59.00% 60.00% 57.00% 56.00% 62.00% 56.00% 63.00% 56.00% 56.00% 60.00% 59.00% 58.00% 67.00% 63.00% 66.00% 55.00% 56.00% 60.00% 65.00% 62.00% 69.00% 59.00% 60.00% 53.00% 68.00% 56.00% 57.00% 50.00% 64.00% 59.00% 64.00% 52.00% 71.00% ------ 64.00% 53.00% 58.00% 58.00% 68.00% 64.00% 51.00% 50.00% 64.00% 60.00% 58.00% 69.00% 62.00% 59.73%
59.00% 66.00% 60.00% 61.00% 62.00% 55.00% 64.00% 60.00% 65.00% 57.00% 65.00% 61.00% 50.00% 66.00% 57.00% 67.00% 55.00% 56.00% 53.00% 58.00% 62.00% 66.00% 62.00% 57.00% 60.00% 63.00% 58.00% 54.00% 59.00% 58.00% 50.00% 65.00% 67.00% 64.00% 57.00% 71.00% 61.00% ------ 55.00% 59.00% 62.00% 63.00% 52.00% 62.00% 55.00% 58.00% 57.00% 61.00% 66.00% 56.00% 59.94%
61.00% 64.00% 60.00% 50.00% 49.00% 53.00% 57.00% 59.00% 62.00% 62.00% 68.00% 53.00% 68.00% 59.00% 59.00% 61.00% 56.00% 61.00% 50.00% 57.00% 56.00% 56.00% 56.00% 53.00% 56.00% 62.00% 62.00% 58.00% 50.00% 65.00% 58.00% 67.00% 60.00% 59.00% 58.00% 78.00% 53.00% 54.00% ------ 64.00% 46.00% 63.00% 55.00% 51.00% 57.00% 55.00% 57.00% 58.00% 58.00% 62.00% 58.29%
67.00% 67.00% 56.00% 49.00% 60.00% 57.00% 56.00% 59.00% 65.00% 70.00% 68.00% 56.00% 66.00% 55.00% 58.00% 62.00% 60.00% 55.00% 62.00% 62.00% 59.00% 60.00% 65.00% 65.00% 57.00% 53.00% 61.00% 55.00% 73.00% 63.00% 53.00% 54.00% 64.00% 62.00% 56.00% 69.00% 60.00% 53.00% 56.00% ------ 49.00% 51.00% 69.00% 51.00% 63.00% 63.00% 52.00% 67.00% 49.00% 62.00% 59.67%
57.00% 66.00% 55.00% 66.00% 62.00% 50.00% 65.00% 58.00% 56.00% 65.00% 54.00% 75.00% 68.00% 71.00% 51.00% 53.00% 60.00% 59.00% 57.00% 55.00% 62.00% 65.00% 63.00% 60.00% 65.00% 62.00% 58.00% 63.00% 63.00% 59.00% 56.00% 47.00% 59.00% 58.00% 56.00% 76.00% 56.00% 59.00% 57.00% 57.00% ------ 61.00% 62.00% 62.00% 56.00% 69.00% 59.00% 51.00% 71.00% 59.00% 60.29%
56.00% 68.00% 64.00% 60.00% 61.00% 55.00% 65.00% 65.00% 62.00% 63.00% 55.00% 59.00% 58.00% 60.00% 57.00% 62.00% 59.00% 69.00% 55.00% 56.00% 64.00% 74.00% 66.00% 60.00% 55.00% 54.00% 60.00% 61.00% 65.00% 60.00% 59.00% 53.00% 74.00% 58.00% 49.00% 71.00% 71.00% 59.00% 63.00% 62.00% 61.00% ------ 60.00% 67.00% 55.00% 58.00% 71.00% 54.00% 62.00% 64.00% 61.20%
66.00% 68.00% 63.00% 56.00% 53.00% 65.00% 60.00% 61.00% 60.00% 57.00% 68.00% 63.00% 64.00% 63.00% 56.00% 53.00% 67.00% 58.00% 59.00% 55.00% 70.00% 58.00% 61.00% 66.00% 65.00% 58.00% 56.00% 59.00% 60.00% 62.00% 61.00% 58.00% 59.00% 57.00% 61.00% 66.00% 57.00% 65.00% 53.00% 61.00% 61.00% 61.00% ------ 64.00% 57.00% 59.00% 52.00% 59.00% 60.00% 65.00% 60.53%
60.00% 57.00% 59.00% 59.00% 57.00% 63.00% 61.00% 63.00% 57.00% 57.00% 58.00% 64.00% 56.00% 57.00% 55.00% 54.00% 71.00% 64.00% 47.00% 63.00% 58.00% 58.00% 60.00% 54.00% 57.00% 65.00% 55.00% 46.00% 61.00% 58.00% 48.00% 63.00% 64.00% 57.00% 59.00% 72.00% 60.00% 55.00% 57.00% 68.00% 62.00% 51.00% 62.00% ------ 55.00% 57.00% 56.00% 58.00% 59.00% 68.00% 58.88%
54.00% 56.00% 58.00% 60.00% 52.00% 52.00% 56.00% 64.00% 56.00% 65.00% 57.00% 63.00% 60.00% 65.00% 59.00% 65.00% 59.00% 57.00% 57.00% 58.00% 63.00% 59.00% 60.00% 73.00% 59.00% 69.00% 54.00% 64.00% 47.00% 65.00% 54.00% 61.00% 53.00% 64.00% 61.00% 71.00% 59.00% 63.00% 59.00% 60.00% 59.00% 55.00% 57.00% 58.00% ------ 52.00% 57.00% 61.00% 63.00% 63.00% 59.51%
68.00% 74.00% 65.00% 62.00% 57.00% 59.00% 60.00% 55.00% 65.00% 56.00% 59.00% 58.00% 71.00% 61.00% 64.00% 54.00% 55.00% 64.00% 61.00% 56.00% 59.00% 57.00% 58.00% 56.00% 64.00% 53.00% 52.00% 64.00% 65.00% 62.00% 66.00% 56.00% 57.00% 63.00% 50.00% 71.00% 57.00% 64.00% 59.00% 59.00% 52.00% 63.00% 60.00% 58.00% 60.00% ------ 61.00% 52.00% 55.00% 62.00% 59.98%
65.00% 62.00% 58.00% 68.00% 63.00% 66.00% 52.00% 67.00% 52.00% 62.00% 59.00% 63.00% 58.00% 61.00% 57.00% 54.00% 58.00% 54.00% 61.00% 52.00% 60.00% 60.00% 62.00% 62.00% 60.00% 67.00% 55.00% 60.00% 59.00% 60.00% 52.00% 57.00% 62.00% 62.00% 61.00% 78.00% 63.00% 62.00% 63.00% 52.00% 69.00% 57.00% 58.00% 61.00% 54.00% 64.00% ------ 59.00% 52.00% 59.00% 60.04%
62.00% 72.00% 56.00% 62.00% 57.00% 57.00% 64.00% 62.00% 62.00% 63.00% 58.00% 63.00% 62.00% 66.00% 56.00% 54.00% 58.00% 56.00% 59.00% 55.00% 64.00% 60.00% 52.00% 58.00% 61.00% 68.00% 60.00% 52.00% 67.00% 66.00% 62.00% 59.00% 67.00% 64.00% 68.00% 71.00% 61.00% 61.00% 49.00% 59.00% 61.00% 61.00% 61.00% 56.00% 60.00% 49.00% 55.00% ------ 59.00% 60.00% 60.31%
63.00% 62.00% 66.00% 60.00% 67.00% 57.00% 59.00% 64.00% 56.00% 66.00% 68.00% 55.00% 56.00% 61.00% 57.00% 61.00% 57.00% 54.00% 65.00% 53.00% 67.00% 63.00% 63.00% 61.00% 53.00% 63.00% 61.00% 59.00% 53.00% 56.00% 56.00% 60.00% 61.00% 53.00% 56.00% 74.00% 58.00% 68.00% 53.00% 43.00% 65.00% 58.00% 60.00% 60.00% 52.00% 55.00% 66.00% 58.00% ------ 59.00% 59.61%
61.00% 59.00% 62.00% 55.00% 63.00% 72.00% 60.00% 62.00% 60.00% 66.00% 54.00% 63.00% 59.00% 64.00% 54.00% 54.00% 57.00% 56.00% 58.00% 58.00% 66.00% 54.00% 60.00% 58.00% 54.00% 62.00% 64.00% 60.00% 66.00% 62.00% 66.00% 61.00% 63.00% 61.00% 61.00% 70.00% 60.00% 69.00% 60.00% 58.00% 54.00% 59.00% 62.00% 59.00% 55.00% 46.00% 58.00% 61.00% 64.00% ------ 60.20%
