Parameters:
  ELITISM 5
  EVALUATOR_DRAFTS 10
  EVALUATOR_ROUNDS 10
  EVOLUTION_DRAFTS 10
  EVOLUTION_ROUNDS 10
  GENERATIONS 50
  INDIVIDUAL Tree
  MUTATION_RATE 0.05
  POPULATION 50
  SCORING standard

generation   1: 17.02s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasCharge]), FeatureHasWard, OperatorAdd([FeatureDefense, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation   2: 16.80s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasCharge]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeRune) }
generation   3: 17.06s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasCharge]), FeatureHasWard, OperatorAdd([FeatureDefense, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation   4: 17.81s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasCharge]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureOpDecksize) }
generation   5: 25.04s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasCharge]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), Literal(0.11035371), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeMaxMana) }
generation   6: 26.21s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasCharge]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), Literal(0.11035371), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeMaxMana) }
generation   7: 29.23s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasCharge]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), Literal(0.11035371), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeMaxMana) }
generation   8: 36.54s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasCharge]), FeatureHasWard, FeatureHasBreakthrough]), FeatureDefense]), FeatureHasCharge]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), Literal(0.11035371), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureMeDecksize }
generation   9: 43.93s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), FeatureHasCharge]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeMaxMana) }
generation  10: 34.89s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasDrain]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  11: 35.72s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasDrain]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  12: 43.20s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), FeatureHasGuard, OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureOpDecksize }
generation  13: 37.98s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasDrain]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureAttack, FeatureHasBreakthrough]), FeatureHasGuard])])]), OperatorNeg(FeatureHasBreakthrough), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  14: 42.90s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), FeatureHasGuard, FeatureAttack, FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorMax([OperatorMul([OperatorMul([FeatureOpCurrentMana, Literal(0.5640614)]), OperatorNeg(OperatorNeg(OperatorMul([FeatureOpMaxMana, FeatureOpCurrentMana]))), FeatureOpDecksize, Literal(0.96545005)]), FeatureMeMaxMana, OperatorNeg(FeatureMeMaxMana)]) }
generation  15: 38.71s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasLethal])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  16: 40.76s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasLethal])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  17: 47.02s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasWard]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureMeDecksize }
generation  18: 39.99s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasLethal])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  19: 43.15s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([OperatorMul([FeatureHasLethal, FeatureHasBreakthrough, FeatureDefense]), FeatureHasDrain]), FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  20: 49.01s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasLethal])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  21: 61.28s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, OperatorMax([FeatureHasWard, FeatureHasDrain])]), FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorAdd([FeatureAttack, FeatureHasWard])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  22: 44.86s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasLethal, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasLethal])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureOpDecksize) }
generation  23: 43.87s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasLethal, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), FeatureHasLethal])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureOpDecksize) }
generation  24: 49.00s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasGuard]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureOpDecksize) }
generation  25: 40.41s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasGuard]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureOpDecksize }
generation  26: 46.71s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasGuard]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureOpDecksize }
generation  27: 44.62s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  28: 50.34s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  29: 65.13s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasGuard]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureOpDecksize }
generation  30: 70.94s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])])])]), OperatorMin([FeatureHasDrain, FeatureHasGuard]), Literal(-0.082178354)])])])])]), OperatorMax([FeatureHasGuard, FeatureHasBreakthrough])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  31: 75.60s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])])])]), OperatorMin([FeatureAttack, FeatureHasGuard]), Literal(-0.082178354)])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([OperatorMul([OperatorAdd([FeatureAttack, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, FeatureAttack, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMul([OperatorAdd([OperatorMax([OperatorNeg(Literal(-0.12130976)), FeatureHasDrain]), FeatureHasGuard]), OperatorMax([FeatureHasGuard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), Literal(-0.12130976), OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureDefense]), FeatureHasGuard])])])])]), OperatorNeg(OperatorNeg(FeatureHasGuard)), OperatorMul([OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, OperatorAdd([FeatureHasGuard, FeatureHasGuard, FeatureAttack])])]), OperatorMin([Literal(-0.12130976), FeatureHasGuard]), FeatureHasGuard])]), FeatureDefense])])])])]), FeatureHasWard]), OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasGuard])])]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), FeatureHasGuard])]), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasLethal])])])])]), FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  32: 81.54s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])])])]), OperatorMin([FeatureAttack, FeatureHasGuard]), Literal(-0.082178354)])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(OperatorNeg(FeatureOpCurrentMana)) }
generation  33: 61.70s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([FeatureAttack, OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(OperatorNeg(Literal(0.5640614))) }
generation  34: 72.27s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])])])]), OperatorMin([FeatureAttack, FeatureHasGuard]), Literal(-0.082178354)])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeNextTurnDraw) }
generation  35: 72.98s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])])])]), OperatorMin([FeatureAttack, FeatureHasGuard]), Literal(-0.082178354)])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([OperatorMul([OperatorAdd([FeatureAttack, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, FeatureAttack, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMul([OperatorAdd([OperatorMax([OperatorNeg(Literal(-0.12130976)), FeatureHasDrain]), FeatureHasGuard]), OperatorMax([FeatureHasGuard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), Literal(-0.12130976), OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureDefense]), FeatureHasGuard])])])])]), OperatorNeg(OperatorNeg(FeatureHasGuard)), OperatorMul([OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, OperatorAdd([FeatureHasGuard, FeatureHasGuard, FeatureAttack])])]), OperatorMin([Literal(-0.12130976), FeatureHasGuard]), FeatureHasGuard])]), FeatureDefense])])])])]), FeatureHasWard]), OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasGuard])])]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), FeatureHasGuard])]), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasLethal])])])])]), FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureMeCurrentMana) }
generation  36: 86.77s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([OperatorAdd([OperatorMul([OperatorAdd([OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([FeatureHasWard, FeatureHasBreakthrough])]), FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([Literal(-0.54636693), FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])])]), FeatureHasWard]), FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, FeatureHasWard])]), OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), Literal(-0.12130976), OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureDefense]), FeatureHasGuard])])])])]), OperatorNeg(OperatorNeg(FeatureHasGuard)), OperatorMul([OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, OperatorAdd([OperatorAdd([FeatureHasDrain, FeatureHasWard]), FeatureHasGuard, FeatureAttack])])]), OperatorMin([Literal(-0.12130976), FeatureHasGuard]), FeatureHasGuard])]), FeatureDefense])])]), OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureAttack, FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])])])]), OperatorMin([FeatureAttack, FeatureHasGuard]), Literal(-0.082178354)])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(Literal(-0.56694627)) }
generation  37: 94.90s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([Literal(0.11035371), OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])])])]), OperatorMin([FeatureAttack, FeatureHasGuard]), Literal(-0.082178354)])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureOpCurrentMana }
generation  38: 89.05s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])])])]), OperatorMin([FeatureHasDrain, FeatureHasGuard]), Literal(-0.082178354)])])])])]), OperatorMax([FeatureHasGuard, FeatureHasBreakthrough])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(Literal(0.5640614)) }
generation  39: 96.70s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasLethal]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, FeatureHasLethal])])])]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), FeatureAttack, OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(OperatorNeg(Literal(-0.56694627))) }
generation  40: 101.04s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([FeatureHasGuard, FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, FeatureHasLethal])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, OperatorAdd([FeatureHasGuard, FeatureHasGuard, FeatureAttack])])]), OperatorMin([Literal(-0.12130976), FeatureHasGuard]), FeatureHasGuard]), FeatureAttack]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureMeNextTurnDraw }
generation  41: 77.10s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, OperatorAdd([FeatureAttack, FeatureHasWard])]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([Literal(-0.54636693), FeatureHasBreakthrough]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])]), FeatureHasLethal])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(OperatorNeg(OperatorNeg(OperatorNeg(FeatureOpDecksize)))) }
generation  42: 99.32s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([FeatureHasGuard, FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorMax([OperatorAdd([FeatureHasDrain, FeatureHasDrain]), OperatorAdd([FeatureAttack, Literal(0.19453096)])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureAttack, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, FeatureHasLethal])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, OperatorMul([FeatureHasGuard, OperatorNeg(FeatureHasBreakthrough), FeatureDefense])]), OperatorMin([FeatureAttack, FeatureHasGuard]), OperatorAdd([FeatureAttack, FeatureHasWard])])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])]), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureMeMaxMana }
generation  43: 88.54s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([FeatureHasGuard, FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorMax([OperatorAdd([FeatureHasDrain, FeatureHasDrain]), OperatorAdd([FeatureAttack, Literal(0.19453096)])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureAttack, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, FeatureHasLethal])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, OperatorMul([FeatureHasGuard, OperatorNeg(FeatureHasBreakthrough), FeatureDefense])]), OperatorMin([FeatureAttack, FeatureHasGuard]), OperatorAdd([FeatureAttack, FeatureHasWard])])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])]), OperatorMul([OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, FeatureHasGuard])])])]), OperatorMax([FeatureHasGuard, FeatureHasBreakthrough])]), FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(Literal(-0.53832436)) }
generation  44: 90.47s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([FeatureHasGuard, FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureAttack, FeatureHasGuard, FeatureHasGuard, OperatorMin([FeatureHasCharge, FeatureHasLethal, FeatureHasWard])])])]), OperatorAdd([FeatureHasBreakthrough, FeatureHasWard])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, OperatorMax([FeatureHasCharge, FeatureDefense])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, FeatureHasGuard])])])]), OperatorMax([FeatureHasGuard, FeatureHasBreakthrough])]), FeatureHasGuard, OperatorMax([FeatureHasWard, FeatureHasLethal])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])])])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(OperatorNeg(OperatorNeg(OperatorNeg(OperatorAdd([FeatureOpMaxMana, FeatureMeHealth]))))) }
generation  45: 104.84s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([Literal(-0.12130976), OperatorMul([OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([FeatureAttack, FeatureHasWard]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasWard]), FeatureDefense])]), FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorAdd([FeatureAttack, FeatureHasWard])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([OperatorMul([OperatorAdd([FeatureAttack, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, FeatureAttack, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMul([OperatorAdd([OperatorMax([OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense]), FeatureHasDrain]), FeatureHasGuard]), OperatorMax([FeatureHasGuard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), Literal(-0.12130976), OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureDefense]), FeatureHasGuard])])])])]), OperatorNeg(FeatureAttack), OperatorMul([OperatorMax([FeatureHasWard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, OperatorAdd([FeatureHasGuard, FeatureHasGuard, FeatureAttack])])]), OperatorMin([Literal(-0.12130976), FeatureHasGuard]), FeatureHasBreakthrough])]), FeatureDefense])])])])]), FeatureHasWard]), OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasGuard])])]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), FeatureHasGuard])]), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasLethal])])])])]), FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureOpDecksize) }
generation  46: 106.34s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorMax([FeatureHasGuard, OperatorMin([OperatorAdd([FeatureHasLethal, OperatorMul([FeatureHasWard, FeatureHasDrain]), FeatureHasGuard, OperatorMul([FeatureHasWard, FeatureHasDrain])]), FeatureAttack, OperatorMin([FeatureHasWard, OperatorMin([Literal(0.11035371), FeatureDefense, OperatorMin([FeatureAttack, FeatureHasGuard]), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMul([FeatureDefense, FeatureAttack, OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(FeatureAttack), OperatorMul([FeatureHasWard, FeatureHasGuard])])])])]), FeatureAttack]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: OperatorNeg(FeatureOpCurrentMana) }
generation  47: 95.66s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorAdd([FeatureDefense, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, FeatureHasWard])]), OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), Literal(-0.12130976), FeatureHasWard]), OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, OperatorMul([FeatureAttack, OperatorMax([FeatureHasGuard, FeatureHasGuard])])]), OperatorMul([FeatureDefense, FeatureAttack, FeatureHasLethal])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMul([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureOpCurrentMana }
generation  48: 93.87s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasGuard]), FeatureHasWard, OperatorAdd([Literal(-0.12130976), OperatorMul([OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([FeatureAttack, FeatureHasWard]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasWard]), FeatureDefense])]), FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, OperatorAdd([FeatureAttack, FeatureHasWard])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([OperatorMul([OperatorAdd([FeatureAttack, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, FeatureAttack, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMul([OperatorAdd([OperatorMax([OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense]), FeatureHasDrain]), FeatureHasGuard]), OperatorMax([FeatureHasGuard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), Literal(-0.12130976), OperatorAdd([FeatureHasLethal, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMax([FeatureHasGuard, OperatorMin([Literal(0.11035371), FeatureHasGuard, FeatureHasGuard, FeatureHasGuard])])])])]), OperatorNeg(OperatorNeg(FeatureHasGuard)), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureDefense])])])])]), FeatureHasWard]), OperatorAdd([FeatureHasWard, FeatureHasWard]), OperatorAdd([FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasBreakthrough, FeatureAttack, OperatorMin([FeatureHasWard, FeatureHasBreakthrough]), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasGuard])])]), FeatureHasGuard])])]), OperatorNeg(Literal(-0.12130976)), FeatureHasGuard])]), OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), FeatureHasLethal])])])])]), FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([FeatureHasWard, FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), OperatorNeg(Literal(-0.12130976)), OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureOpDecksize }
generation  49: 133.11s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([FeatureHasGuard, FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([Literal(-0.12130976), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorMax([OperatorAdd([FeatureHasDrain, FeatureHasDrain]), OperatorAdd([FeatureAttack, Literal(0.19453096)])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureAttack, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasLethal, FeatureHasLethal])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, OperatorMul([Literal(-0.12130976), OperatorNeg(FeatureHasBreakthrough), FeatureDefense])]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, FeatureAttack]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])]), OperatorMul([FeatureHasWard, OperatorMin([OperatorMax([FeatureHasWard, FeatureHasDrain]), FeatureHasLethal])])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureOpNextTurnDraw }
generation  50: 93.06s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasLethal, FeatureHasWard, OperatorAdd([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMul([OperatorAdd([FeatureHasGuard, FeatureHasWard, OperatorAdd([FeatureHasLethal, OperatorMul([FeatureHasGuard, OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorMax([OperatorAdd([FeatureHasDrain, FeatureHasDrain]), OperatorAdd([FeatureAttack, Literal(0.19453096)])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureAttack, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasGuard, FeatureHasLethal])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, OperatorMul([FeatureHasGuard, OperatorNeg(FeatureHasBreakthrough), FeatureDefense])]), OperatorMin([FeatureAttack, FeatureHasGuard]), OperatorAdd([FeatureAttack, FeatureHasWard])])])])])]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasGuard, OperatorMax([FeatureHasGuard, FeatureHasBreakthrough]), OperatorMin([FeatureAttack, FeatureHasGuard]), FeatureHasGuard])]), OperatorMul([OperatorMin([FeatureHasWard, FeatureAttack, OperatorMul([OperatorAdd([FeatureAttack, FeatureHasWard]), OperatorMax([FeatureHasGuard, OperatorMin([FeatureHasWard, FeatureHasGuard, FeatureHasGuard, OperatorMax([FeatureHasWard, FeatureHasGuard])])])]), OperatorMax([FeatureHasGuard, FeatureHasBreakthrough])]), FeatureHasGuard])])]), OperatorMax([FeatureHasGuard, FeatureHasGuard])]), FeatureHasWard, OperatorMul([OperatorMax([FeatureHasLethal, FeatureHasDrain]), FeatureDefense])])]), state_node: FeatureMeMaxMana }
------ 53.00% 63.00% 36.00% 52.00% 46.00% 35.00% 45.00% 49.00% 36.00% 48.00% 44.00% 38.00% 37.00% 36.00% 44.00% 31.00% 37.00% 41.00% 46.00% 39.00% 32.00% 37.00% 41.00% 25.00% 32.00% 29.00% 31.00% 33.00% 36.00% 34.00% 28.00% 32.00% 35.00% 33.00% 47.00% 33.00% 41.00% 32.00% 36.00% 35.00% 29.00% 28.00% 40.00% 36.00% 34.00% 39.00% 34.00% 27.00% 29.00% 37.43%
50.00% ------ 58.00% 43.00% 56.00% 50.00% 51.00% 57.00% 52.00% 44.00% 53.00% 45.00% 53.00% 46.00% 44.00% 52.00% 53.00% 46.00% 45.00% 47.00% 49.00% 49.00% 48.00% 54.00% 51.00% 45.00% 34.00% 36.00% 49.00% 36.00% 36.00% 44.00% 46.00% 47.00% 47.00% 61.00% 42.00% 44.00% 39.00% 49.00% 42.00% 47.00% 42.00% 63.00% 39.00% 44.00% 60.00% 42.00% 40.00% 39.00% 47.12%
60.00% 53.00% ------ 45.00% 38.00% 50.00% 37.00% 42.00% 52.00% 37.00% 39.00% 35.00% 37.00% 31.00% 40.00% 35.00% 34.00% 33.00% 43.00% 36.00% 37.00% 35.00% 36.00% 24.00% 34.00% 36.00% 40.00% 40.00% 28.00% 40.00% 36.00% 29.00% 26.00% 30.00% 30.00% 37.00% 34.00% 33.00% 35.00% 44.00% 32.00% 30.00% 32.00% 35.00% 26.00% 29.00% 44.00% 35.00% 32.00% 24.00% 36.33%
76.00% 60.00% 75.00% ------ 60.00% 57.00% 59.00% 64.00% 70.00% 51.00% 57.00% 55.00% 59.00% 64.00% 55.00% 51.00% 63.00% 49.00% 61.00% 65.00% 57.00% 52.00% 49.00% 58.00% 53.00% 51.00% 48.00% 55.00% 51.00% 53.00% 56.00% 46.00% 69.00% 57.00% 53.00% 56.00% 52.00% 49.00% 50.00% 51.00% 54.00% 36.00% 38.00% 56.00% 51.00% 53.00% 61.00% 46.00% 45.00% 47.00% 55.18%
79.00% 60.00% 84.00% 63.00% ------ 61.00% 54.00% 57.00% 72.00% 57.00% 52.00% 57.00% 58.00% 47.00% 59.00% 57.00% 57.00% 60.00% 53.00% 50.00% 62.00% 57.00% 51.00% 52.00% 43.00% 56.00% 64.00% 60.00% 56.00% 50.00% 58.00% 55.00% 51.00% 49.00% 50.00% 65.00% 46.00% 42.00% 51.00% 49.00% 60.00% 51.00% 37.00% 51.00% 53.00% 62.00% 58.00% 49.00% 48.00% 53.00% 55.63%
70.00% 69.00% 72.00% 62.00% 56.00% ------ 63.00% 59.00% 64.00% 57.00% 64.00% 56.00% 62.00% 57.00% 60.00% 63.00% 59.00% 62.00% 67.00% 52.00% 48.00% 50.00% 50.00% 57.00% 53.00% 39.00% 55.00% 53.00% 57.00% 56.00% 55.00% 54.00% 48.00% 51.00% 54.00% 56.00% 42.00% 56.00% 49.00% 44.00% 46.00% 49.00% 41.00% 48.00% 45.00% 58.00% 50.00% 53.00% 46.00% 47.00% 54.78%
72.00% 64.00% 84.00% 51.00% 58.00% 55.00% ------ 61.00% 74.00% 56.00% 55.00% 53.00% 64.00% 49.00% 55.00% 55.00% 66.00% 59.00% 59.00% 60.00% 54.00% 57.00% 48.00% 52.00% 49.00% 53.00% 54.00% 63.00% 56.00% 56.00% 52.00% 52.00% 41.00% 48.00% 51.00% 55.00% 51.00% 57.00% 60.00% 47.00% 50.00% 53.00% 50.00% 55.00% 50.00% 52.00% 57.00% 46.00% 47.00% 41.00% 55.24%
81.00% 67.00% 75.00% 57.00% 71.00% 58.00% 64.00% ------ 66.00% 62.00% 63.00% 60.00% 65.00% 55.00% 52.00% 61.00% 61.00% 63.00% 67.00% 49.00% 57.00% 55.00% 64.00% 54.00% 69.00% 52.00% 56.00% 51.00% 47.00% 60.00% 56.00% 54.00% 54.00% 54.00% 58.00% 62.00% 57.00% 58.00% 57.00% 44.00% 51.00% 44.00% 53.00% 55.00% 47.00% 51.00% 51.00% 57.00% 40.00% 41.00% 57.27%
67.00% 59.00% 67.00% 56.00% 46.00% 49.00% 45.00% 44.00% ------ 40.00% 49.00% 52.00% 51.00% 50.00% 56.00% 48.00% 48.00% 44.00% 48.00% 50.00% 45.00% 43.00% 41.00% 43.00% 39.00% 38.00% 29.00% 37.00% 40.00% 41.00% 41.00% 29.00% 36.00% 40.00% 42.00% 56.00% 34.00% 50.00% 38.00% 43.00% 47.00% 40.00% 37.00% 41.00% 37.00% 40.00% 45.00% 46.00% 42.00% 36.00% 44.59%
76.00% 70.00% 78.00% 68.00% 67.00% 64.00% 65.00% 67.00% 62.00% ------ 59.00% 59.00% 66.00% 47.00% 65.00% 55.00% 56.00% 64.00% 55.00% 57.00% 63.00% 54.00% 64.00% 61.00% 54.00% 66.00% 55.00% 51.00% 51.00% 64.00% 56.00% 49.00% 58.00% 39.00% 57.00% 61.00% 56.00% 57.00% 65.00% 59.00% 58.00% 48.00% 44.00% 51.00% 59.00% 53.00% 62.00% 55.00% 41.00% 56.00% 58.51%
83.00% 67.00% 77.00% 61.00% 72.00% 58.00% 58.00% 63.00% 69.00% 64.00% ------ 64.00% 65.00% 49.00% 58.00% 57.00% 53.00% 55.00% 62.00% 66.00% 55.00% 61.00% 53.00% 52.00% 56.00% 47.00% 56.00% 53.00% 61.00% 57.00% 60.00% 49.00% 51.00% 55.00% 56.00% 67.00% 46.00% 61.00% 51.00% 44.00% 53.00% 59.00% 48.00% 46.00% 61.00% 48.00% 62.00% 50.00% 43.00% 42.00% 57.22%
81.00% 64.00% 80.00% 64.00% 56.00% 67.00% 70.00% 60.00% 75.00% 62.00% 69.00% ------ 66.00% 66.00% 61.00% 64.00% 55.00% 60.00% 55.00% 60.00% 56.00% 61.00% 58.00% 58.00% 58.00% 60.00% 50.00% 64.00% 51.00% 59.00% 59.00% 49.00% 51.00% 56.00% 60.00% 67.00% 58.00% 60.00% 57.00% 59.00% 55.00% 44.00% 39.00% 58.00% 61.00% 57.00% 62.00% 62.00% 55.00% 46.00% 59.69%
84.00% 70.00% 71.00% 58.00% 62.00% 61.00% 59.00% 62.00% 71.00% 57.00% 58.00% 53.00% ------ 54.00% 53.00% 53.00% 67.00% 57.00% 62.00% 56.00% 59.00% 56.00% 53.00% 52.00% 44.00% 46.00% 55.00% 55.00% 49.00% 48.00% 60.00% 50.00% 54.00% 47.00% 50.00% 59.00% 51.00% 49.00% 48.00% 43.00% 56.00% 43.00% 49.00% 60.00% 62.00% 49.00% 58.00% 59.00% 50.00% 44.00% 55.63%
83.00% 69.00% 76.00% 58.00% 68.00% 59.00% 60.00% 67.00% 74.00% 58.00% 56.00% 58.00% 64.00% ------ 59.00% 50.00% 56.00% 56.00% 65.00% 55.00% 48.00% 57.00% 50.00% 56.00% 56.00% 57.00% 56.00% 61.00% 57.00% 63.00% 58.00% 51.00% 49.00% 56.00% 61.00% 67.00% 63.00% 50.00% 56.00% 46.00% 51.00% 51.00% 48.00% 53.00% 57.00% 61.00% 67.00% 55.00% 54.00% 45.00% 58.18%
77.00% 67.00% 80.00% 68.00% 64.00% 57.00% 60.00% 60.00% 69.00% 58.00% 70.00% 56.00% 61.00% 61.00% ------ 55.00% 62.00% 64.00% 66.00% 53.00% 62.00% 61.00% 58.00% 57.00% 46.00% 51.00% 57.00% 56.00% 62.00% 54.00% 56.00% 55.00% 62.00% 54.00% 54.00% 62.00% 55.00% 54.00% 45.00% 55.00% 59.00% 53.00% 51.00% 58.00% 61.00% 51.00% 65.00% 60.00% 45.00% 50.00% 58.71%
81.00% 66.00% 82.00% 65.00% 67.00% 66.00% 72.00% 63.00% 74.00% 66.00% 62.00% 55.00% 56.00% 54.00% 66.00% ------ 64.00% 57.00% 51.00% 65.00% 59.00% 55.00% 55.00% 57.00% 52.00% 62.00% 60.00% 60.00% 59.00% 58.00% 55.00% 51.00% 59.00% 52.00% 60.00% 56.00% 47.00% 51.00% 57.00% 55.00% 56.00% 42.00% 54.00% 51.00% 53.00% 57.00% 68.00% 62.00% 41.00% 57.00% 59.04%
76.00% 72.00% 78.00% 58.00% 61.00% 66.00% 66.00% 60.00% 67.00% 63.00% 63.00% 64.00% 65.00% 58.00% 61.00% 56.00% ------ 63.00% 60.00% 62.00% 61.00% 54.00% 55.00% 71.00% 51.00% 56.00% 57.00% 66.00% 54.00% 58.00% 51.00% 51.00% 59.00% 56.00% 58.00% 53.00% 52.00% 66.00% 44.00% 45.00% 53.00% 58.00% 53.00% 52.00% 62.00% 52.00% 59.00% 55.00% 49.00% 53.00% 58.84%
79.00% 67.00% 83.00% 62.00% 62.00% 70.00% 61.00% 67.00% 70.00% 71.00% 55.00% 69.00% 65.00% 54.00% 61.00% 54.00% 57.00% ------ 62.00% 60.00% 67.00% 59.00% 55.00% 59.00% 61.00% 58.00% 54.00% 60.00% 45.00% 66.00% 57.00% 65.00% 56.00% 57.00% 64.00% 65.00% 49.00% 57.00% 50.00% 58.00% 56.00% 52.00% 62.00% 61.00% 65.00% 56.00% 63.00% 61.00% 44.00% 48.00% 60.39%
76.00% 67.00% 74.00% 56.00% 68.00% 52.00% 56.00% 66.00% 69.00% 52.00% 55.00% 48.00% 74.00% 57.00% 58.00% 54.00% 59.00% 54.00% ------ 55.00% 59.00% 60.00% 55.00% 59.00% 59.00% 54.00% 60.00% 52.00% 48.00% 49.00% 53.00% 56.00% 63.00% 57.00% 54.00% 68.00% 49.00% 55.00% 54.00% 49.00% 58.00% 47.00% 35.00% 52.00% 54.00% 60.00% 62.00% 60.00% 45.00% 40.00% 56.65%
76.00% 63.00% 81.00% 66.00% 51.00% 70.00% 63.00% 64.00% 73.00% 57.00% 61.00% 64.00% 69.00% 58.00% 71.00% 53.00% 58.00% 61.00% 58.00% ------ 57.00% 58.00% 62.00% 58.00% 59.00% 60.00% 57.00% 68.00% 59.00% 58.00% 61.00% 49.00% 55.00% 51.00% 58.00% 57.00% 54.00% 52.00% 61.00% 50.00% 55.00% 52.00% 43.00% 54.00% 64.00% 51.00% 61.00% 65.00% 52.00% 38.00% 59.10%
76.00% 73.00% 77.00% 71.00% 60.00% 65.00% 68.00% 59.00% 70.00% 70.00% 63.00% 58.00% 60.00% 50.00% 61.00% 58.00% 62.00% 62.00% 65.00% 58.00% ------ 58.00% 59.00% 58.00% 53.00% 59.00% 55.00% 61.00% 62.00% 57.00% 67.00% 56.00% 57.00% 54.00% 61.00% 54.00% 53.00% 57.00% 60.00% 47.00% 54.00% 50.00% 50.00% 45.00% 59.00% 60.00% 68.00% 61.00% 52.00% 48.00% 59.61%
75.00% 64.00% 80.00% 64.00% 62.00% 54.00% 61.00% 59.00% 70.00% 53.00% 65.00% 51.00% 58.00% 66.00% 57.00% 60.00% 66.00% 59.00% 61.00% 62.00% 63.00% ------ 60.00% 61.00% 47.00% 63.00% 53.00% 63.00% 53.00% 61.00% 58.00% 61.00% 56.00% 60.00% 66.00% 66.00% 58.00% 60.00% 54.00% 52.00% 71.00% 54.00% 40.00% 49.00% 61.00% 57.00% 63.00% 53.00% 43.00% 51.00% 59.27%
76.00% 68.00% 79.00% 58.00% 67.00% 61.00% 66.00% 61.00% 74.00% 60.00% 54.00% 66.00% 58.00% 59.00% 50.00% 73.00% 65.00% 63.00% 61.00% 69.00% 57.00% 53.00% ------ 54.00% 58.00% 54.00% 71.00% 62.00% 57.00% 65.00% 54.00% 57.00% 64.00% 54.00% 58.00% 60.00% 59.00% 66.00% 68.00% 48.00% 61.00% 46.00% 50.00% 57.00% 52.00% 57.00% 71.00% 58.00% 49.00% 53.00% 60.43%
73.00% 69.00% 88.00% 74.00% 66.00% 64.00% 73.00% 66.00% 71.00% 61.00% 61.00% 59.00% 65.00% 55.00% 56.00% 60.00% 64.00% 66.00% 63.00% 61.00% 69.00% 63.00% 57.00% ------ 72.00% 52.00% 52.00% 63.00% 60.00% 53.00% 68.00% 55.00% 56.00% 58.00% 57.00% 68.00% 58.00% 61.00% 61.00% 45.00% 56.00% 45.00% 39.00% 59.00% 56.00% 45.00% 63.00% 63.00% 42.00% 48.00% 60.39%
83.00% 63.00% 80.00% 67.00% 67.00% 70.00% 64.00% 70.00% 80.00% 64.00% 67.00% 60.00% 59.00% 59.00% 56.00% 70.00% 60.00% 56.00% 67.00% 59.00% 57.00% 63.00% 55.00% 59.00% ------ 58.00% 61.00% 63.00% 55.00% 54.00% 66.00% 63.00% 61.00% 55.00% 64.00% 62.00% 50.00% 64.00% 59.00% 44.00% 64.00% 51.00% 57.00% 52.00% 59.00% 59.00% 61.00% 57.00% 50.00% 55.00% 61.20%
87.00% 65.00% 84.00% 66.00% 71.00% 72.00% 78.00% 70.00% 79.00% 68.00% 68.00% 64.00% 53.00% 63.00% 51.00% 65.00% 64.00% 57.00% 62.00% 63.00% 63.00% 53.00% 54.00% 56.00% 57.00% ------ 62.00% 57.00% 57.00% 60.00% 61.00% 50.00% 58.00% 58.00% 57.00% 69.00% 61.00% 54.00% 56.00% 61.00% 56.00% 45.00% 51.00% 49.00% 65.00% 57.00% 62.00% 63.00% 52.00% 53.00% 61.37%
80.00% 70.00% 81.00% 69.00% 64.00% 71.00% 59.00% 66.00% 66.00% 60.00% 62.00% 49.00% 56.00% 65.00% 62.00% 54.00% 55.00% 61.00% 67.00% 61.00% 58.00% 54.00% 64.00% 55.00% 56.00% 51.00% ------ 57.00% 50.00% 66.00% 57.00% 59.00% 65.00% 59.00% 61.00% 60.00% 56.00% 62.00% 58.00% 51.00% 52.00% 50.00% 48.00% 51.00% 64.00% 47.00% 70.00% 69.00% 50.00% 52.00% 59.80%
86.00% 65.00% 85.00% 55.00% 68.00% 70.00% 67.00% 71.00% 75.00% 56.00% 64.00% 61.00% 66.00% 60.00% 70.00% 51.00% 64.00% 64.00% 66.00% 70.00% 57.00% 56.00% 66.00% 61.00% 57.00% 52.00% 64.00% ------ 64.00% 70.00% 61.00% 62.00% 59.00% 55.00% 58.00% 61.00% 50.00% 56.00% 55.00% 59.00% 61.00% 53.00% 57.00% 52.00% 68.00% 55.00% 64.00% 64.00% 52.00% 55.00% 62.00%
91.00% 74.00% 86.00% 68.00% 77.00% 67.00% 71.00% 70.00% 81.00% 64.00% 60.00% 71.00% 66.00% 56.00% 57.00% 64.00% 67.00% 55.00% 64.00% 68.00% 69.00% 59.00% 62.00% 70.00% 71.00% 60.00% 59.00% 57.00% ------ 64.00% 64.00% 58.00% 66.00% 51.00% 63.00% 72.00% 70.00% 58.00% 69.00% 47.00% 65.00% 51.00% 54.00% 46.00% 58.00% 53.00% 64.00% 57.00% 54.00% 54.00% 63.71%
84.00% 63.00% 81.00% 76.00% 60.00% 70.00% 72.00% 63.00% 72.00% 63.00% 61.00% 61.00% 72.00% 66.00% 59.00% 59.00% 64.00% 74.00% 67.00% 58.00% 55.00% 60.00% 59.00% 57.00% 60.00% 54.00% 56.00% 62.00% 50.00% ------ 57.00% 60.00% 58.00% 52.00% 57.00% 57.00% 62.00% 57.00% 48.00% 45.00% 60.00% 58.00% 46.00% 51.00% 51.00% 61.00% 63.00% 57.00% 51.00% 46.00% 60.31%
83.00% 66.00% 85.00% 58.00% 67.00% 64.00% 67.00% 68.00% 70.00% 60.00% 63.00% 66.00% 68.00% 68.00% 62.00% 62.00% 55.00% 55.00% 58.00% 50.00% 58.00% 58.00% 56.00% 57.00% 62.00% 55.00% 61.00% 50.00% 53.00% 60.00% ------ 58.00% 62.00% 61.00% 73.00% 65.00% 52.00% 60.00% 49.00% 62.00% 50.00% 47.00% 46.00% 51.00% 57.00% 52.00% 67.00% 57.00% 58.00% 43.00% 59.90%
86.00% 75.00% 88.00% 67.00% 67.00% 67.00% 70.00% 60.00% 76.00% 69.00% 70.00% 59.00% 65.00% 63.00% 66.00% 65.00% 61.00% 66.00% 63.00% 69.00% 60.00% 63.00% 59.00% 61.00% 56.00% 53.00% 63.00% 58.00% 65.00% 65.00% 60.00% ------ 65.00% 64.00% 66.00% 67.00% 56.00% 63.00% 55.00% 59.00% 55.00% 55.00% 49.00% 59.00% 71.00% 58.00% 59.00% 67.00% 42.00% 55.00% 63.27%
83.00% 69.00% 88.00% 76.00% 73.00% 64.00% 57.00% 63.00% 72.00% 60.00% 67.00% 56.00% 64.00% 59.00% 58.00% 60.00% 58.00% 68.00% 72.00% 62.00% 59.00% 61.00% 49.00% 60.00% 64.00% 61.00% 63.00% 62.00% 59.00% 67.00% 56.00% 57.00% ------ 59.00% 66.00% 62.00% 63.00% 65.00% 58.00% 51.00% 56.00% 50.00% 57.00% 51.00% 63.00% 55.00% 65.00% 63.00% 48.00% 49.00% 61.80%
83.00% 81.00% 88.00% 71.00% 61.00% 69.00% 68.00% 58.00% 82.00% 65.00% 70.00% 64.00% 65.00% 59.00% 70.00% 62.00% 69.00% 51.00% 64.00% 73.00% 65.00% 62.00% 66.00% 59.00% 61.00% 60.00% 63.00% 64.00% 61.00% 64.00% 59.00% 59.00% 60.00% ------ 61.00% 68.00% 51.00% 60.00% 58.00% 60.00% 65.00% 51.00% 58.00% 49.00% 65.00% 59.00% 70.00% 66.00% 52.00% 54.00% 63.73%
83.00% 70.00% 87.00% 62.00% 58.00% 64.00% 60.00% 58.00% 73.00% 72.00% 68.00% 60.00% 70.00% 59.00% 63.00% 53.00% 53.00% 61.00% 64.00% 60.00% 62.00% 60.00% 55.00% 51.00% 60.00% 64.00% 57.00% 60.00% 66.00% 65.00% 61.00% 55.00% 58.00% 49.00% ------ 69.00% 57.00% 59.00% 58.00% 48.00% 60.00% 55.00% 52.00% 49.00% 55.00% 55.00% 58.00% 57.00% 44.00% 52.00% 60.18%
81.00% 55.00% 76.00% 63.00% 59.00% 62.00% 60.00% 53.00% 65.00% 57.00% 63.00% 58.00% 55.00% 61.00% 56.00% 63.00% 56.00% 62.00% 51.00% 56.00% 65.00% 52.00% 58.00% 55.00% 47.00% 54.00% 61.00% 48.00% 55.00% 56.00% 48.00% 52.00% 60.00% 49.00% 53.00% ------ 55.00% 44.00% 42.00% 42.00% 59.00% 45.00% 48.00% 45.00% 54.00% 53.00% 66.00% 55.00% 42.00% 47.00% 55.55%
81.00% 73.00% 87.00% 66.00% 75.00% 64.00% 59.00% 68.00% 74.00% 63.00% 70.00% 65.00% 75.00% 70.00% 62.00% 72.00% 69.00% 66.00% 65.00% 63.00% 57.00% 63.00% 60.00% 61.00% 54.00% 57.00% 55.00% 63.00% 65.00% 65.00% 65.00% 60.00% 72.00% 62.00% 62.00% 65.00% ------ 64.00% 73.00% 55.00% 66.00% 59.00% 54.00% 46.00% 54.00% 66.00% 64.00% 59.00% 60.00% 58.00% 64.31%
88.00% 71.00% 85.00% 63.00% 66.00% 74.00% 61.00% 63.00% 69.00% 64.00% 66.00% 64.00% 63.00% 55.00% 60.00% 59.00% 68.00% 57.00% 65.00% 65.00% 53.00% 62.00% 54.00% 64.00% 58.00% 63.00% 61.00% 66.00% 58.00% 64.00% 55.00% 52.00% 57.00% 52.00% 60.00% 56.00% 59.00% ------ 56.00% 51.00% 54.00% 49.00% 48.00% 54.00% 59.00% 62.00% 71.00% 67.00% 53.00% 48.00% 61.06%
85.00% 69.00% 83.00% 69.00% 71.00% 67.00% 71.00% 71.00% 76.00% 58.00% 56.00% 63.00% 60.00% 59.00% 66.00% 60.00% 64.00% 59.00% 66.00% 60.00% 60.00% 54.00% 63.00% 63.00% 56.00% 69.00% 65.00% 59.00% 54.00% 60.00% 68.00% 57.00% 54.00% 56.00% 63.00% 72.00% 62.00% 55.00% ------ 52.00% 62.00% 48.00% 55.00% 60.00% 62.00% 57.00% 74.00% 58.00% 46.00% 61.00% 62.41%
76.00% 69.00% 79.00% 70.00% 78.00% 61.00% 74.00% 77.00% 73.00% 77.00% 72.00% 68.00% 74.00% 57.00% 75.00% 70.00% 70.00% 67.00% 71.00% 66.00% 72.00% 64.00% 71.00% 63.00% 69.00% 71.00% 61.00% 57.00% 73.00% 72.00% 70.00% 69.00% 69.00% 60.00% 68.00% 76.00% 74.00% 57.00% 69.00% ------ 60.00% 51.00% 55.00% 62.00% 75.00% 60.00% 63.00% 72.00% 50.00% 51.00% 67.51%
71.00% 60.00% 85.00% 68.00% 63.00% 62.00% 66.00% 59.00% 80.00% 61.00% 60.00% 63.00% 71.00% 69.00% 64.00% 71.00% 55.00% 68.00% 60.00% 67.00% 58.00% 57.00% 56.00% 60.00% 64.00% 63.00% 60.00% 61.00% 64.00% 64.00% 64.00% 55.00% 56.00% 55.00% 66.00% 62.00% 62.00% 65.00% 60.00% 47.00% ------ 56.00% 50.00% 54.00% 67.00% 52.00% 70.00% 55.00% 51.00% 59.00% 61.96%
86.00% 72.00% 84.00% 70.00% 72.00% 71.00% 69.00% 66.00% 71.00% 68.00% 64.00% 64.00% 69.00% 66.00% 69.00% 62.00% 63.00% 63.00% 69.00% 64.00% 61.00% 69.00% 64.00% 62.00% 66.00% 60.00% 66.00% 58.00% 61.00% 67.00% 69.00% 65.00% 63.00% 56.00% 63.00% 70.00% 63.00% 66.00% 57.00% 61.00% 63.00% ------ 54.00% 63.00% 70.00% 72.00% 79.00% 64.00% 58.00% 73.00% 66.22%
80.00% 66.00% 80.00% 69.00% 69.00% 64.00% 73.00% 78.00% 77.00% 68.00% 69.00% 65.00% 72.00% 62.00% 63.00% 58.00% 75.00% 63.00% 72.00% 70.00% 53.00% 64.00% 58.00% 70.00% 65.00% 67.00% 60.00% 72.00% 65.00% 69.00% 67.00% 60.00% 62.00% 65.00% 58.00% 74.00% 59.00% 70.00% 64.00% 65.00% 66.00% 61.00% ------ 68.00% 66.00% 67.00% 69.00% 64.00% 59.00% 57.00% 66.47%
73.00% 66.00% 83.00% 63.00% 68.00% 65.00% 71.00% 68.00% 68.00% 68.00% 70.00% 64.00% 65.00% 58.00% 69.00% 69.00% 68.00% 66.00% 70.00% 62.00% 78.00% 57.00% 61.00% 63.00% 64.00% 66.00% 62.00% 53.00% 66.00% 55.00% 61.00% 68.00% 71.00% 59.00% 65.00% 71.00% 62.00% 63.00% 63.00% 58.00% 58.00% 61.00% 55.00% ------ 59.00% 62.00% 60.00% 60.00% 53.00% 59.00% 64.22%
82.00% 77.00% 85.00% 71.00% 65.00% 57.00% 61.00% 65.00% 70.00% 62.00% 67.00% 68.00% 61.00% 62.00% 72.00% 61.00% 66.00% 53.00% 72.00% 66.00% 71.00% 54.00% 49.00% 67.00% 59.00% 61.00% 61.00% 62.00% 57.00% 62.00% 63.00% 57.00% 61.00% 54.00% 52.00% 59.00% 50.00% 61.00% 68.00% 55.00% 55.00% 55.00% 44.00% 55.00% ------ 70.00% 60.00% 64.00% 52.00% 52.00% 61.90%
79.00% 74.00% 86.00% 64.00% 68.00% 68.00% 70.00% 64.00% 78.00% 69.00% 74.00% 65.00% 59.00% 64.00% 59.00% 53.00% 59.00% 59.00% 66.00% 61.00% 56.00% 56.00% 67.00% 54.00% 58.00% 61.00% 62.00% 65.00% 63.00% 65.00% 67.00% 55.00% 66.00% 57.00% 56.00% 66.00% 60.00% 68.00% 43.00% 49.00% 55.00% 58.00% 56.00% 57.00% 60.00% ------ 65.00% 72.00% 52.00% 54.00% 62.49%
80.00% 55.00% 77.00% 66.00% 64.00% 63.00% 59.00% 64.00% 68.00% 56.00% 67.00% 58.00% 55.00% 64.00% 62.00% 63.00% 57.00% 65.00% 68.00% 56.00% 47.00% 60.00% 49.00% 57.00% 58.00% 58.00% 63.00% 50.00% 54.00% 58.00% 51.00% 43.00% 68.00% 50.00% 65.00% 64.00% 53.00% 62.00% 48.00% 48.00% 53.00% 47.00% 55.00% 54.00% 50.00% 58.00% ------ 64.00% 38.00% 46.00% 57.92%
86.00% 68.00% 79.00% 63.00% 59.00% 66.00% 62.00% 61.00% 73.00% 64.00% 62.00% 61.00% 70.00% 65.00% 59.00% 58.00% 67.00% 64.00% 57.00% 61.00% 55.00% 59.00% 61.00% 59.00% 52.00% 65.00% 55.00% 60.00% 54.00% 58.00% 62.00% 57.00% 52.00% 62.00% 62.00% 56.00% 65.00% 64.00% 56.00% 50.00% 64.00% 50.00% 56.00% 48.00% 62.00% 59.00% 69.00% ------ 54.00% 42.00% 60.67%
83.00% 75.00% 86.00% 67.00% 74.00% 66.00% 77.00% 67.00% 73.00% 65.00% 61.00% 69.00% 72.00% 66.00% 68.00% 69.00% 62.00% 65.00% 75.00% 72.00% 63.00% 61.00% 72.00% 69.00% 62.00% 66.00% 67.00% 75.00% 64.00% 73.00% 62.00% 59.00% 64.00% 65.00% 74.00% 67.00% 61.00% 69.00% 66.00% 69.00% 68.00% 51.00% 60.00% 65.00% 64.00% 64.00% 72.00% 67.00% ------ 55.00% 67.47%
90.00% 71.00% 85.00% 74.00% 71.00% 70.00% 70.00% 69.00% 78.00% 72.00% 71.00% 66.00% 72.00% 67.00% 66.00% 69.00% 68.00% 70.00% 68.00% 64.00% 71.00% 53.00% 67.00% 69.00% 53.00% 59.00% 61.00% 61.00% 66.00% 62.00% 71.00% 62.00% 56.00% 56.00% 69.00% 68.00% 63.00% 70.00% 65.00% 56.00% 59.00% 59.00% 58.00% 66.00% 71.00% 64.00% 65.00% 60.00% 56.00% ------ 66.27%
