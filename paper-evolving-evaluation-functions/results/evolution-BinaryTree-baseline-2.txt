Parameters:
  ELITISM 5
  EVALUATOR_DRAFTS 10
  EVALUATOR_ROUNDS 10
  EVOLUTION_DRAFTS 10
  EVOLUTION_ROUNDS 10
  GENERATIONS 50
  INDIVIDUAL BinaryTree
  MUTATION_RATE 0.05
  POPULATION 50
  SCORING baseline

generation   1: 10.47s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureHasCharge, OperatorMul(FeatureAttack, FeatureAttack))), FeatureHasCharge), state_node: OperatorAdd(OperatorAdd(FeatureOpDecksize, OperatorMax(OperatorAdd(FeatureMeDecksize, FeatureOpNextTurnDraw), FeatureOpCurrentMana)), FeatureMeMaxMana) }
generation   2: 9.96s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureHasCharge, OperatorMul(FeatureAttack, FeatureAttack))), FeatureHasCharge), state_node: OperatorAdd(OperatorAdd(FeatureOpDecksize, OperatorMax(OperatorAdd(FeatureMeDecksize, FeatureOpNextTurnDraw), FeatureOpCurrentMana)), FeatureMeMaxMana) }
generation   3: 10.54s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorAdd(OperatorSub(FeatureAttack, FeatureHasWard), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureHasCharge))), OperatorMul(FeatureHasWard, OperatorSub(OperatorMax(OperatorMul(OperatorAdd(FeatureHasDrain, OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureDefense, OperatorMul(FeatureAttack, FeatureAttack)))), FeatureHasCharge), FeatureHasWard), OperatorAdd(FeatureHasCharge, OperatorMax(FeatureHasBreakthrough, Literal(-0.0943892)))))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation   4: 10.85s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorAdd(OperatorSub(FeatureAttack, FeatureHasWard), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureHasCharge))), OperatorMul(FeatureHasWard, OperatorSub(OperatorMax(OperatorMul(OperatorAdd(FeatureHasDrain, OperatorAdd(FeatureHasBreakthrough, OperatorMax(FeatureHasGuard, OperatorMul(FeatureAttack, FeatureAttack)))), FeatureHasCharge), FeatureHasWard), OperatorAdd(FeatureHasCharge, OperatorMax(FeatureHasBreakthrough, Literal(-0.0943892)))))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation   5: 16.37s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, FeatureHasWard), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(FeatureDefense, FeatureHasBreakthrough)))), state_node: FeatureOpCurrentMana }
generation   6: 11.85s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, FeatureHasWard), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(FeatureDefense, FeatureHasGuard)))), state_node: FeatureOpNextTurnDraw }
generation   7: 10.85s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, FeatureHasWard), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(FeatureDefense, FeatureHasGuard)))), state_node: FeatureOpNextTurnDraw }
generation   8: 9.90s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, FeatureHasWard), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: FeatureMeMaxMana }
generation   9: 12.08s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, FeatureHasWard), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(FeatureDefense, FeatureHasGuard)))), state_node: FeatureOpNextTurnDraw }
generation  10: 13.27s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, FeatureHasWard), OperatorSub(FeatureHasCharge, OperatorMin(FeatureDefense, FeatureAttack))), state_node: FeatureOpCurrentMana }
generation  11: 13.23s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorMax(FeatureAttack, Literal(0.7773328)), FeatureHasGuard)))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation  12: 13.85s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorMax(FeatureAttack, Literal(0.7773328)), FeatureHasGuard)))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation  13: 14.53s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorMax(FeatureAttack, Literal(0.7773328)), FeatureHasGuard)))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation  14: 13.44s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorMax(FeatureAttack, Literal(0.7773328)), FeatureHasGuard)))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation  15: 11.26s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorMax(FeatureAttack, Literal(0.7773328)), FeatureHasGuard)))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation  16: 13.62s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorMax(FeatureAttack, Literal(0.7773328)), FeatureHasGuard)))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation  17: 13.06s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorMax(FeatureAttack, Literal(0.7773328)), FeatureHasGuard)))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation  18: 13.33s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorMax(FeatureAttack, Literal(0.7773328)), FeatureHasGuard)))), state_node: OperatorMax(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpCurrentMana) }
generation  19: 11.92s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureHasGuard, OperatorSub(FeatureDefense, FeatureHasGuard))), FeatureHasGuard)))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  20: 12.61s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureHasGuard, OperatorSub(FeatureDefense, FeatureHasGuard))), FeatureHasGuard)))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  21: 13.03s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureHasGuard, OperatorSub(FeatureDefense, FeatureHasGuard))), FeatureHasGuard)))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  22: 13.69s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  23: 14.29s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  24: 12.98s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpCurrentMana, FeatureOpNextTurnDraw)) }
generation  25: 13.51s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  26: 15.60s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  27: 14.98s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  28: 18.57s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  29: 17.03s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  30: 13.28s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(OperatorSub(FeatureAttack, Literal(-0.0943892)), Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorMax(FeatureOpCurrentMana, FeatureMeMaxMana), FeatureOpDecksize))) }
generation  31: 12.45s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(OperatorMin(FeatureHasWard, FeatureAttack), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpMaxMana)) }
generation  32: 12.50s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(OperatorSub(FeatureAttack, Literal(-0.0943892)), Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorMax(FeatureOpCurrentMana, FeatureMeMaxMana), FeatureOpDecksize))) }
generation  33: 12.64s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  34: 13.62s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(OperatorSub(FeatureAttack, Literal(-0.0943892)), Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorMax(FeatureOpCurrentMana, FeatureMeMaxMana), FeatureOpDecksize))) }
generation  35: 12.39s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(OperatorSub(FeatureAttack, Literal(-0.0943892)), Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(FeatureDefense, FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpDecksize)) }
generation  36: 11.62s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorSub(FeatureAttack, Literal(-0.0943892)), OperatorSub(Literal(0.7773328), OperatorMin(OperatorMin(FeatureDefense, FeatureAttack), FeatureAttack))), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
