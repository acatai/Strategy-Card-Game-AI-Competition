Parameters:
  ELITISM 5
  EVALUATOR_DRAFTS 10
  EVALUATOR_ROUNDS 10
  EVOLUTION_DRAFTS 10
  EVOLUTION_ROUNDS 10
  GENERATIONS 50
  INDIVIDUAL BinaryTree
  MUTATION_RATE 0.05
  POPULATION 50
  SCORING standard

generation   1: 13.64s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasDrain, FeatureAttack), state_node: FeatureOpDecksize }
generation   2: 10.80s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasDrain, FeatureAttack), state_node: FeatureOpDecksize }
generation   3: 9.34s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasDrain, FeatureAttack), state_node: OperatorMin(Literal(0.72753215), FeatureMeCurrentMana) }
generation   4: 10.00s // best: BinaryTreeIndividual { card_node: FeatureAttack, state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureMeMaxMana) }
generation   5: 8.24s // best: BinaryTreeIndividual { card_node: FeatureAttack, state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureMeMaxMana) }
generation   6: 7.96s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasDrain, FeatureAttack), state_node: FeatureOpMaxMana }
generation   7: 7.82s // best: BinaryTreeIndividual { card_node: FeatureAttack, state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureMeMaxMana) }
generation   8: 8.32s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasWard, FeatureHasGuard), state_node: FeatureOpNextTurnDraw }
generation   9: 9.03s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasWard, FeatureAttack), state_node: FeatureOpNextTurnDraw }
generation  10: 9.43s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasWard, FeatureAttack), state_node: FeatureOpNextTurnDraw }
generation  11: 8.02s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasDrain, FeatureHasGuard), state_node: FeatureOpNextTurnDraw }
generation  12: 8.48s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasWard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  13: 8.50s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasDrain, FeatureHasGuard), OperatorAdd(FeatureHasWard, FeatureHasDrain)), state_node: FeatureOpNextTurnDraw }
generation  14: 9.15s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasDrain, FeatureHasGuard), OperatorAdd(FeatureHasWard, FeatureHasDrain)), state_node: FeatureOpNextTurnDraw }
generation  15: 11.04s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasDrain, FeatureHasGuard), OperatorAdd(FeatureHasWard, FeatureHasGuard)), state_node: FeatureOpNextTurnDraw }
generation  16: 10.75s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureAttack, FeatureHasGuard), OperatorAdd(FeatureHasWard, FeatureHasGuard)), state_node: OperatorMul(FeatureOpDecksize, FeatureOpNextTurnDraw) }
generation  17: 11.37s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasDrain, FeatureHasGuard), OperatorAdd(FeatureHasWard, FeatureHasGuard)), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  18: 12.15s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasDrain))), state_node: OperatorMul(OperatorMul(FeatureOpDecksize, FeatureOpNextTurnDraw), FeatureOpNextTurnDraw) }
generation  19: 12.64s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasDrain))), state_node: OperatorMul(OperatorMul(FeatureOpDecksize, FeatureOpNextTurnDraw), FeatureOpNextTurnDraw) }
generation  20: 12.30s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasDrain))), state_node: OperatorMul(OperatorMul(FeatureOpDecksize, FeatureOpNextTurnDraw), FeatureOpNextTurnDraw) }
generation  21: 12.12s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasDrain, FeatureHasGuard), OperatorAdd(FeatureAttack, FeatureHasGuard)), state_node: OperatorMul(FeatureOpMaxMana, FeatureOpNextTurnDraw) }
generation  22: 13.57s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasDrain))), state_node: OperatorMul(OperatorMul(FeatureOpDecksize, FeatureOpNextTurnDraw), FeatureOpNextTurnDraw) }
generation  23: 15.10s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasDrain))), state_node: OperatorMul(OperatorMul(FeatureOpDecksize, FeatureOpNextTurnDraw), FeatureOpNextTurnDraw) }
generation  24: 14.65s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorMul(FeatureHasGuard, FeatureAttack))), OperatorAdd(FeatureHasWard, FeatureHasDrain)), state_node: OperatorMul(FeatureOpDecksize, FeatureOpCurrentMana) }
generation  25: 14.08s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge))))), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  26: 16.13s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge))))), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  27: 15.37s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(Literal(0.8075752), OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, FeatureHasDrain)), FeatureHasGuard), FeatureHasDrain), FeatureHasCharge), FeatureHasWard), FeatureHasDrain)), state_node: OperatorMul(FeatureOpDecksize, FeatureOpNextTurnDraw) }
generation  28: 18.88s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(Literal(0.8075752), OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(OperatorAdd(OperatorMax(OperatorAdd(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, FeatureHasDrain)), FeatureHasGuard), FeatureHasDrain), FeatureHasCharge), FeatureHasWard), FeatureHasDrain)), state_node: OperatorMul(FeatureOpDecksize, FeatureOpNextTurnDraw) }
generation  29: 18.88s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureAttack, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge))))), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  30: 19.88s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge))))), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  31: 23.78s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge))))), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpDecksize) }
generation  32: 25.75s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasWard))))), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  33: 28.44s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasDrain, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasGuard, FeatureHasDrain), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(OperatorAdd(OperatorMul(FeatureHasGuard, FeatureAttack), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasLethal), FeatureHasDrain), FeatureHasCharge))), FeatureHasWard), FeatureHasDrain))), OperatorAdd(FeatureHasWard, FeatureHasGuard))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(OperatorMul(FeatureOpDecksize, OperatorMul(FeatureOpNextTurnDraw, FeatureOpDecksize)), FeatureOpNextTurnDraw)) }
generation  34: 29.52s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, OperatorAdd(FeatureHasGuard, OperatorAdd(FeatureHasWard, FeatureAttack))), OperatorAdd(FeatureHasWard, FeatureHasGuard)), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), FeatureHasDrain))))), state_node: OperatorMul(OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw), FeatureMeMaxMana) }
generation  35: 34.90s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  36: 35.83s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  37: 28.95s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  38: 34.46s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  39: 33.33s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasCharge, OperatorAdd(OperatorAdd(Literal(0.60769653), OperatorAdd(FeatureHasCharge, OperatorAdd(FeatureAttack, OperatorAdd(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(OperatorAdd(OperatorMul(OperatorSub(OperatorAdd(OperatorMin(FeatureHasWard, FeatureDefense), FeatureHasGuard), OperatorMin(Literal(0.40130448), FeatureDefense)), FeatureHasDrain), OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, FeatureHasDrain), OperatorAdd(FeatureHasGuard, OperatorAdd(FeatureHasWard, FeatureHasDrain))), FeatureHasDrain)), OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureHasWard), FeatureHasCharge)), OperatorAdd(FeatureHasWard, FeatureHasWard))))), OperatorSub(OperatorMul(FeatureHasGuard, FeatureHasWard), FeatureHasCharge)), FeatureHasDrain)))), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorMax(OperatorMax(OperatorAdd(FeatureHasWard, Literal(0.60769653)), OperatorAdd(Literal(0.60769653), OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), FeatureHasGuard)), FeatureHasWard))), state_node: FeatureOpNextTurnDraw }
generation  40: 31.82s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  41: 34.85s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  42: 43.40s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  43: 53.06s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  44: 49.15s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  45: 57.07s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasBreakthrough), FeatureHasCharge)), OperatorAdd(OperatorMax(FeatureHasCharge, FeatureDefense), FeatureHasDrain)))), OperatorAdd(FeatureHasWard, FeatureHasDrain))), FeatureAttack), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, OperatorSub(OperatorAdd(OperatorMin(FeatureHasDrain, OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorAdd(OperatorMax(FeatureHasBreakthrough, FeatureHasWard), FeatureHasCharge), OperatorAdd(FeatureHasWard, FeatureHasGuard))), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge)))), OperatorAdd(FeatureHasGuard, FeatureHasGuard)), FeatureHasGuard), FeatureAttack)), FeatureHasGuard), FeatureHasGuard))), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge)))))), OperatorAdd(FeatureHasWard, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), FeatureHasDrain), OperatorAdd(FeatureAttack, FeatureHasCharge)), FeatureHasCharge)), FeatureHasGuard))), state_node: OperatorMul(OperatorMul(OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw), OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)), OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  46: 57.26s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasBreakthrough), FeatureHasCharge)), OperatorAdd(OperatorMax(FeatureHasCharge, FeatureDefense), FeatureHasDrain)))), OperatorAdd(FeatureHasWard, FeatureHasDrain))), FeatureAttack), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, OperatorSub(OperatorAdd(OperatorMin(FeatureHasDrain, OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorAdd(OperatorMax(FeatureHasBreakthrough, FeatureHasWard), FeatureHasCharge), OperatorAdd(FeatureHasWard, FeatureHasGuard))), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge)))), OperatorAdd(FeatureHasGuard, FeatureHasGuard)), FeatureHasGuard), FeatureAttack)), FeatureHasGuard), FeatureHasGuard))), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge)))))), OperatorAdd(FeatureHasWard, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), FeatureHasDrain), OperatorAdd(FeatureAttack, FeatureHasCharge)), FeatureHasCharge)), FeatureHasGuard))), state_node: OperatorMul(OperatorMul(OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw), OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)), OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  47: 53.06s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasCharge)), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), OperatorAdd(FeatureHasLethal, FeatureHasLethal)))))), state_node: OperatorMul(FeatureOpNextTurnDraw, OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  48: 63.72s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasBreakthrough), FeatureHasCharge)), OperatorAdd(OperatorMax(FeatureHasCharge, FeatureDefense), FeatureHasDrain)))), OperatorAdd(FeatureHasWard, FeatureHasCharge))), FeatureAttack), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, OperatorSub(OperatorAdd(OperatorMin(FeatureHasDrain, OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorAdd(OperatorMax(FeatureHasBreakthrough, FeatureHasWard), FeatureHasCharge), OperatorAdd(FeatureHasWard, FeatureHasGuard))), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge)))), OperatorAdd(FeatureHasGuard, FeatureHasGuard)), FeatureHasGuard), FeatureAttack)), FeatureHasGuard), FeatureHasGuard))), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge)))))), OperatorAdd(FeatureHasWard, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), FeatureHasDrain), OperatorAdd(FeatureAttack, FeatureHasCharge)), FeatureHasCharge)), FeatureHasGuard))), state_node: OperatorMul(OperatorMul(OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw), OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)), OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  49: 63.99s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMax(FeatureHasCharge, OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(OperatorAdd(FeatureAttack, OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorSub(OperatorMul(FeatureHasGuard, FeatureAttack), FeatureHasBreakthrough), FeatureHasCharge)), OperatorAdd(OperatorMax(FeatureHasCharge, FeatureDefense), FeatureHasDrain)))), OperatorAdd(FeatureHasWard, FeatureHasCharge))), FeatureAttack), OperatorAdd(OperatorAdd(FeatureHasWard, OperatorAdd(FeatureAttack, OperatorSub(OperatorAdd(OperatorMin(FeatureHasDrain, OperatorAdd(OperatorMax(OperatorMax(OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorAdd(OperatorMax(FeatureHasBreakthrough, FeatureHasWard), FeatureHasCharge), OperatorAdd(FeatureHasWard, FeatureHasGuard))), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge)))), OperatorAdd(FeatureHasGuard, FeatureHasGuard)), FeatureHasGuard), FeatureAttack)), FeatureHasGuard), FeatureHasGuard))), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasDrain), FeatureHasCharge)))))), OperatorAdd(FeatureHasWard, FeatureHasGuard))), OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(FeatureHasWard, OperatorSub(OperatorMul(OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), FeatureHasDrain), OperatorAdd(FeatureAttack, FeatureHasCharge)), FeatureHasCharge)), FeatureHasGuard))), state_node: OperatorMul(OperatorMul(OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw), OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)), OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  50: 53.61s // best: BinaryTreeIndividual { card_node: OperatorAdd(FeatureHasBreakthrough, OperatorAdd(FeatureHasWard, OperatorAdd(OperatorMax(OperatorAdd(FeatureAttack, FeatureHasGuard), OperatorSub(OperatorMul(FeatureHasGuard, OperatorAdd(OperatorMax(FeatureHasBreakthrough, OperatorAdd(FeatureHasLethal, FeatureHasLethal)), FeatureHasGuard)), FeatureHasCharge)), OperatorAdd(OperatorAdd(FeatureHasWard, FeatureHasGuard), OperatorAdd(OperatorAdd(FeatureHasLethal, FeatureHasDrain), FeatureHasWard))))), state_node: OperatorMul(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
------ 59.00% 63.00% 52.00% 58.00% 66.00% 53.00% 47.00% 52.00% 49.00% 58.00% 56.00% 44.00% 38.00% 48.00% 54.00% 47.00% 28.00% 42.00% 38.00% 48.00% 40.00% 47.00% 34.00% 38.00% 36.00% 21.00% 25.00% 33.00% 37.00% 31.00% 33.00% 24.00% 40.00% 39.00% 29.00% 28.00% 32.00% 44.00% 34.00% 35.00% 36.00% 28.00% 30.00% 34.00% 33.00% 29.00% 37.00% 43.00% 39.00% 40.59%
52.00% ------ 55.00% 55.00% 51.00% 63.00% 54.00% 50.00% 53.00% 54.00% 52.00% 48.00% 48.00% 48.00% 48.00% 46.00% 37.00% 36.00% 37.00% 44.00% 46.00% 40.00% 33.00% 28.00% 36.00% 33.00% 27.00% 26.00% 35.00% 34.00% 26.00% 36.00% 35.00% 42.00% 39.00% 31.00% 30.00% 33.00% 40.00% 32.00% 26.00% 29.00% 33.00% 34.00% 29.00% 39.00% 29.00% 39.00% 38.00% 37.00% 39.71%
57.00% 60.00% ------ 44.00% 47.00% 54.00% 63.00% 49.00% 59.00% 48.00% 50.00% 47.00% 46.00% 46.00% 45.00% 53.00% 39.00% 33.00% 43.00% 39.00% 46.00% 37.00% 34.00% 28.00% 28.00% 37.00% 23.00% 22.00% 40.00% 32.00% 33.00% 35.00% 37.00% 37.00% 29.00% 33.00% 30.00% 23.00% 41.00% 30.00% 30.00% 31.00% 25.00% 38.00% 25.00% 34.00% 37.00% 35.00% 31.00% 39.00% 38.82%
64.00% 63.00% 60.00% ------ 40.00% 54.00% 56.00% 56.00% 50.00% 56.00% 58.00% 55.00% 45.00% 47.00% 49.00% 47.00% 41.00% 38.00% 40.00% 45.00% 48.00% 39.00% 35.00% 43.00% 33.00% 34.00% 33.00% 25.00% 38.00% 33.00% 27.00% 46.00% 33.00% 40.00% 32.00% 35.00% 23.00% 35.00% 47.00% 31.00% 35.00% 29.00% 34.00% 34.00% 37.00% 33.00% 39.00% 37.00% 43.00% 37.00% 41.47%
56.00% 52.00% 68.00% 61.00% ------ 66.00% 54.00% 51.00% 56.00% 60.00% 59.00% 61.00% 42.00% 51.00% 45.00% 46.00% 40.00% 35.00% 42.00% 43.00% 42.00% 39.00% 36.00% 37.00% 40.00% 36.00% 33.00% 30.00% 30.00% 35.00% 38.00% 37.00% 41.00% 33.00% 36.00% 38.00% 30.00% 37.00% 41.00% 35.00% 33.00% 32.00% 34.00% 34.00% 37.00% 39.00% 34.00% 35.00% 38.00% 41.00% 42.22%
53.00% 57.00% 60.00% 51.00% 59.00% ------ 48.00% 46.00% 58.00% 60.00% 48.00% 56.00% 42.00% 54.00% 36.00% 48.00% 48.00% 40.00% 35.00% 39.00% 48.00% 34.00% 51.00% 29.00% 31.00% 37.00% 28.00% 23.00% 26.00% 39.00% 37.00% 36.00% 32.00% 33.00% 27.00% 26.00% 31.00% 39.00% 42.00% 36.00% 31.00% 31.00% 36.00% 35.00% 41.00% 32.00% 35.00% 33.00% 33.00% 45.00% 40.31%
62.00% 59.00% 53.00% 54.00% 52.00% 64.00% ------ 59.00% 59.00% 58.00% 57.00% 47.00% 53.00% 49.00% 47.00% 48.00% 40.00% 42.00% 35.00% 34.00% 45.00% 37.00% 38.00% 34.00% 39.00% 33.00% 34.00% 37.00% 45.00% 44.00% 31.00% 30.00% 38.00% 29.00% 37.00% 34.00% 34.00% 30.00% 31.00% 33.00% 37.00% 40.00% 30.00% 31.00% 33.00% 39.00% 37.00% 45.00% 51.00% 46.00% 42.33%
62.00% 68.00% 65.00% 46.00% 72.00% 58.00% 59.00% ------ 65.00% 60.00% 48.00% 54.00% 47.00% 48.00% 46.00% 51.00% 46.00% 26.00% 39.00% 35.00% 46.00% 38.00% 31.00% 28.00% 21.00% 27.00% 32.00% 26.00% 27.00% 23.00% 20.00% 22.00% 27.00% 24.00% 18.00% 18.00% 20.00% 25.00% 36.00% 20.00% 24.00% 30.00% 23.00% 22.00% 19.00% 17.00% 26.00% 22.00% 25.00% 28.00% 35.92%
54.00% 63.00% 67.00% 45.00% 58.00% 66.00% 56.00% 48.00% ------ 62.00% 45.00% 56.00% 46.00% 43.00% 46.00% 50.00% 42.00% 39.00% 38.00% 34.00% 51.00% 42.00% 34.00% 30.00% 31.00% 40.00% 27.00% 33.00% 34.00% 40.00% 40.00% 40.00% 39.00% 40.00% 38.00% 31.00% 39.00% 40.00% 32.00% 39.00% 37.00% 31.00% 31.00% 40.00% 38.00% 37.00% 31.00% 44.00% 41.00% 35.00% 42.10%
67.00% 67.00% 71.00% 56.00% 58.00% 54.00% 58.00% 51.00% 62.00% ------ 47.00% 45.00% 41.00% 45.00% 39.00% 50.00% 38.00% 34.00% 40.00% 35.00% 44.00% 43.00% 39.00% 42.00% 47.00% 32.00% 28.00% 32.00% 40.00% 39.00% 37.00% 31.00% 39.00% 36.00% 30.00% 34.00% 33.00% 28.00% 40.00% 37.00% 37.00% 39.00% 33.00% 35.00% 44.00% 41.00% 39.00% 40.00% 39.00% 45.00% 42.47%
65.00% 58.00% 52.00% 65.00% 61.00% 47.00% 61.00% 55.00% 65.00% 66.00% ------ 59.00% 48.00% 41.00% 45.00% 48.00% 44.00% 32.00% 26.00% 36.00% 36.00% 27.00% 21.00% 17.00% 20.00% 17.00% 23.00% 22.00% 30.00% 15.00% 22.00% 24.00% 15.00% 20.00% 18.00% 20.00% 19.00% 27.00% 38.00% 23.00% 14.00% 21.00% 16.00% 23.00% 19.00% 13.00% 20.00% 28.00% 18.00% 33.00% 33.33%
69.00% 63.00% 69.00% 58.00% 58.00% 74.00% 52.00% 58.00% 49.00% 57.00% 45.00% ------ 56.00% 50.00% 44.00% 44.00% 45.00% 43.00% 37.00% 41.00% 52.00% 42.00% 42.00% 35.00% 41.00% 38.00% 37.00% 25.00% 42.00% 47.00% 47.00% 44.00% 33.00% 45.00% 36.00% 38.00% 45.00% 41.00% 43.00% 43.00% 34.00% 42.00% 41.00% 31.00% 37.00% 39.00% 40.00% 50.00% 38.00% 50.00% 45.51%
62.00% 68.00% 64.00% 70.00% 53.00% 64.00% 65.00% 57.00% 73.00% 72.00% 67.00% 67.00% ------ 56.00% 54.00% 55.00% 51.00% 35.00% 38.00% 37.00% 39.00% 34.00% 27.00% 29.00% 15.00% 19.00% 22.00% 27.00% 30.00% 22.00% 33.00% 28.00% 21.00% 32.00% 21.00% 24.00% 30.00% 30.00% 31.00% 11.00% 19.00% 31.00% 21.00% 25.00% 25.00% 21.00% 27.00% 23.00% 28.00% 41.00% 38.65%
64.00% 61.00% 68.00% 67.00% 73.00% 58.00% 59.00% 57.00% 68.00% 64.00% 56.00% 66.00% 37.00% ------ 51.00% 57.00% 50.00% 34.00% 30.00% 24.00% 47.00% 33.00% 31.00% 27.00% 26.00% 15.00% 20.00% 27.00% 28.00% 18.00% 28.00% 30.00% 30.00% 32.00% 23.00% 21.00% 23.00% 27.00% 41.00% 22.00% 35.00% 25.00% 20.00% 16.00% 27.00% 25.00% 29.00% 38.00% 20.00% 35.00% 38.02%
63.00% 73.00% 77.00% 64.00% 75.00% 67.00% 67.00% 60.00% 65.00% 66.00% 67.00% 64.00% 58.00% 56.00% ------ 56.00% 58.00% 33.00% 32.00% 44.00% 36.00% 31.00% 23.00% 37.00% 21.00% 23.00% 29.00% 21.00% 29.00% 20.00% 21.00% 29.00% 33.00% 35.00% 23.00% 18.00% 24.00% 26.00% 42.00% 19.00% 22.00% 26.00% 29.00% 19.00% 26.00% 22.00% 28.00% 22.00% 17.00% 35.00% 39.41%
67.00% 77.00% 72.00% 52.00% 48.00% 68.00% 52.00% 57.00% 63.00% 62.00% 60.00% 58.00% 58.00% 66.00% 55.00% ------ 66.00% 44.00% 42.00% 50.00% 58.00% 42.00% 51.00% 46.00% 54.00% 51.00% 43.00% 45.00% 45.00% 42.00% 52.00% 45.00% 42.00% 52.00% 46.00% 53.00% 43.00% 45.00% 49.00% 48.00% 45.00% 45.00% 48.00% 37.00% 52.00% 46.00% 36.00% 41.00% 41.00% 47.00% 51.16%
68.00% 65.00% 71.00% 69.00% 71.00% 66.00% 65.00% 64.00% 78.00% 72.00% 59.00% 62.00% 53.00% 55.00% 49.00% 54.00% ------ 30.00% 29.00% 38.00% 44.00% 32.00% 29.00% 29.00% 25.00% 23.00% 38.00% 25.00% 32.00% 25.00% 26.00% 27.00% 28.00% 32.00% 27.00% 23.00% 28.00% 26.00% 33.00% 24.00% 26.00% 21.00% 26.00% 25.00% 21.00% 26.00% 23.00% 27.00% 21.00% 41.00% 39.82%
72.00% 80.00% 78.00% 68.00% 75.00% 70.00% 79.00% 81.00% 75.00% 66.00% 87.00% 81.00% 81.00% 83.00% 72.00% 71.00% 70.00% ------ 52.00% 62.00% 64.00% 59.00% 61.00% 73.00% 56.00% 59.00% 65.00% 69.00% 60.00% 59.00% 59.00% 55.00% 62.00% 61.00% 55.00% 56.00% 52.00% 48.00% 48.00% 52.00% 50.00% 54.00% 57.00% 58.00% 52.00% 53.00% 57.00% 59.00% 60.00% 47.00% 63.73%
78.00% 74.00% 77.00% 67.00% 72.00% 73.00% 75.00% 81.00% 75.00% 65.00% 86.00% 66.00% 76.00% 82.00% 80.00% 64.00% 84.00% 67.00% ------ 58.00% 69.00% 59.00% 59.00% 63.00% 61.00% 62.00% 58.00% 65.00% 64.00% 51.00% 63.00% 43.00% 57.00% 64.00% 59.00% 60.00% 56.00% 58.00% 53.00% 50.00% 54.00% 55.00% 53.00% 58.00% 56.00% 55.00% 56.00% 57.00% 54.00% 62.00% 63.96%
76.00% 80.00% 79.00% 78.00% 78.00% 76.00% 75.00% 80.00% 79.00% 78.00% 85.00% 73.00% 78.00% 81.00% 82.00% 66.00% 88.00% 62.00% 61.00% ------ 65.00% 59.00% 62.00% 67.00% 55.00% 54.00% 64.00% 60.00% 62.00% 58.00% 48.00% 58.00% 59.00% 53.00% 57.00% 56.00% 53.00% 46.00% 59.00% 60.00% 52.00% 64.00% 50.00% 58.00% 55.00% 49.00% 57.00% 53.00% 48.00% 61.00% 64.43%
61.00% 83.00% 71.00% 60.00% 60.00% 68.00% 72.00% 69.00% 60.00% 76.00% 74.00% 58.00% 71.00% 69.00% 73.00% 54.00% 65.00% 68.00% 59.00% 59.00% ------ 57.00% 56.00% 59.00% 55.00% 56.00% 61.00% 49.00% 51.00% 59.00% 47.00% 43.00% 60.00% 50.00% 48.00% 44.00% 52.00% 53.00% 50.00% 38.00% 47.00% 44.00% 48.00% 49.00% 52.00% 48.00% 53.00% 54.00% 49.00% 56.00% 57.51%
73.00% 76.00% 80.00% 75.00% 72.00% 81.00% 76.00% 75.00% 72.00% 78.00% 85.00% 75.00% 75.00% 79.00% 81.00% 79.00% 73.00% 62.00% 59.00% 51.00% 69.00% ------ 67.00% 66.00% 58.00% 69.00% 68.00% 69.00% 62.00% 55.00% 61.00% 60.00% 55.00% 57.00% 42.00% 51.00% 64.00% 65.00% 59.00% 43.00% 56.00% 55.00% 61.00% 47.00% 59.00% 51.00% 61.00% 52.00% 55.00% 56.00% 64.69%
83.00% 77.00% 76.00% 84.00% 73.00% 78.00% 77.00% 81.00% 72.00% 75.00% 90.00% 73.00% 82.00% 74.00% 75.00% 71.00% 77.00% 69.00% 64.00% 68.00% 65.00% 53.00% ------ 75.00% 67.00% 58.00% 55.00% 66.00% 51.00% 53.00% 57.00% 49.00% 56.00% 58.00% 53.00% 48.00% 56.00% 56.00% 66.00% 60.00% 55.00% 52.00% 49.00% 57.00% 58.00% 57.00% 62.00% 67.00% 64.00% 58.00% 65.31%
87.00% 82.00% 85.00% 71.00% 71.00% 83.00% 75.00% 78.00% 75.00% 82.00% 80.00% 76.00% 77.00% 77.00% 81.00% 64.00% 80.00% 45.00% 47.00% 47.00% 61.00% 45.00% 40.00% ------ 46.00% 52.00% 39.00% 56.00% 41.00% 37.00% 43.00% 37.00% 46.00% 39.00% 37.00% 40.00% 37.00% 34.00% 50.00% 37.00% 41.00% 40.00% 34.00% 29.00% 34.00% 43.00% 40.00% 39.00% 39.00% 42.00% 54.31%
75.00% 79.00% 84.00% 79.00% 77.00% 70.00% 77.00% 91.00% 81.00% 83.00% 85.00% 82.00% 88.00% 88.00% 87.00% 78.00% 87.00% 64.00% 64.00% 61.00% 67.00% 65.00% 58.00% 78.00% ------ 58.00% 70.00% 74.00% 63.00% 62.00% 61.00% 65.00% 66.00% 57.00% 61.00% 51.00% 70.00% 61.00% 61.00% 56.00% 57.00% 55.00% 53.00% 56.00% 61.00% 60.00% 49.00% 57.00% 52.00% 59.00% 68.22%
75.00% 77.00% 79.00% 78.00% 76.00% 75.00% 79.00% 90.00% 78.00% 80.00% 88.00% 79.00% 85.00% 81.00% 87.00% 75.00% 83.00% 56.00% 54.00% 60.00% 68.00% 63.00% 60.00% 80.00% 65.00% ------ 69.00% 76.00% 62.00% 59.00% 56.00% 63.00% 58.00% 67.00% 50.00% 56.00% 60.00% 60.00% 62.00% 48.00% 57.00% 56.00% 69.00% 51.00% 59.00% 50.00% 62.00% 57.00% 52.00% 64.00% 67.22%
79.00% 85.00% 85.00% 86.00% 86.00% 80.00% 84.00% 77.00% 83.00% 84.00% 86.00% 85.00% 77.00% 86.00% 73.00% 73.00% 76.00% 56.00% 46.00% 59.00% 62.00% 56.00% 53.00% 54.00% 49.00% 49.00% ------ 46.00% 51.00% 48.00% 52.00% 57.00% 51.00% 53.00% 40.00% 43.00% 45.00% 47.00% 57.00% 42.00% 44.00% 40.00% 37.00% 42.00% 42.00% 41.00% 41.00% 45.00% 59.00% 54.00% 60.12%
88.00% 85.00% 87.00% 82.00% 82.00% 82.00% 84.00% 83.00% 88.00% 85.00% 90.00% 85.00% 81.00% 83.00% 82.00% 67.00% 77.00% 58.00% 48.00% 56.00% 68.00% 51.00% 51.00% 59.00% 50.00% 40.00% 50.00% ------ 56.00% 43.00% 45.00% 48.00% 50.00% 55.00% 46.00% 40.00% 46.00% 36.00% 59.00% 53.00% 40.00% 44.00% 41.00% 43.00% 39.00% 38.00% 45.00% 41.00% 44.00% 54.00% 60.16%
85.00% 81.00% 80.00% 79.00% 82.00% 79.00% 76.00% 80.00% 78.00% 85.00% 91.00% 80.00% 81.00% 90.00% 83.00% 73.00% 83.00% 61.00% 64.00% 61.00% 65.00% 68.00% 61.00% 82.00% 68.00% 55.00% 72.00% 72.00% ------ 63.00% 65.00% 57.00% 51.00% 62.00% 53.00% 56.00% 56.00% 57.00% 62.00% 52.00% 56.00% 53.00% 61.00% 56.00% 61.00% 52.00% 55.00% 69.00% 59.00% 70.00% 68.18%
76.00% 79.00% 82.00% 86.00% 74.00% 81.00% 77.00% 88.00% 77.00% 78.00% 89.00% 75.00% 81.00% 88.00% 90.00% 70.00% 80.00% 59.00% 62.00% 63.00% 67.00% 65.00% 71.00% 84.00% 51.00% 60.00% 67.00% 73.00% 63.00% ------ 60.00% 49.00% 64.00% 63.00% 58.00% 51.00% 52.00% 49.00% 60.00% 54.00% 50.00% 64.00% 59.00% 58.00% 60.00% 61.00% 57.00% 60.00% 57.00% 62.00% 67.43%
82.00% 83.00% 83.00% 82.00% 80.00% 78.00% 76.00% 83.00% 79.00% 73.00% 82.00% 75.00% 83.00% 81.00% 90.00% 69.00% 84.00% 56.00% 63.00% 71.00% 69.00% 67.00% 70.00% 75.00% 66.00% 64.00% 73.00% 70.00% 56.00% 64.00% ------ 60.00% 61.00% 63.00% 61.00% 65.00% 54.00% 54.00% 63.00% 60.00% 57.00% 57.00% 51.00% 51.00% 59.00% 55.00% 57.00% 54.00% 63.00% 60.00% 68.00%
79.00% 83.00% 83.00% 79.00% 78.00% 76.00% 81.00% 89.00% 78.00% 77.00% 86.00% 75.00% 82.00% 76.00% 80.00% 71.00% 79.00% 68.00% 57.00% 56.00% 71.00% 67.00% 63.00% 78.00% 56.00% 65.00% 70.00% 67.00% 55.00% 58.00% 65.00% ------ 62.00% 64.00% 67.00% 60.00% 56.00% 51.00% 57.00% 65.00% 58.00% 55.00% 66.00% 58.00% 60.00% 58.00% 53.00% 58.00% 63.00% 64.00% 67.82%
78.00% 77.00% 75.00% 80.00% 75.00% 78.00% 76.00% 80.00% 77.00% 81.00% 85.00% 63.00% 81.00% 80.00% 78.00% 73.00% 84.00% 64.00% 52.00% 54.00% 77.00% 64.00% 70.00% 77.00% 66.00% 68.00% 70.00% 70.00% 61.00% 59.00% 61.00% 68.00% ------ 59.00% 62.00% 72.00% 67.00% 41.00% 53.00% 55.00% 57.00% 58.00% 62.00% 64.00% 60.00% 53.00% 60.00% 56.00% 57.00% 52.00% 67.14%
76.00% 83.00% 81.00% 78.00% 77.00% 82.00% 69.00% 82.00% 70.00% 75.00% 84.00% 78.00% 73.00% 81.00% 80.00% 76.00% 72.00% 64.00% 68.00% 62.00% 70.00% 63.00% 68.00% 73.00% 69.00% 61.00% 65.00% 66.00% 61.00% 63.00% 60.00% 64.00% 49.00% ------ 58.00% 58.00% 62.00% 57.00% 56.00% 52.00% 59.00% 53.00% 61.00% 69.00% 58.00% 50.00% 59.00% 61.00% 54.00% 55.00% 66.63%
80.00% 84.00% 88.00% 85.00% 81.00% 82.00% 75.00% 78.00% 71.00% 82.00% 87.00% 75.00% 83.00% 93.00% 89.00% 78.00% 91.00% 72.00% 55.00% 70.00% 74.00% 69.00% 62.00% 85.00% 71.00% 74.00% 74.00% 74.00% 64.00% 63.00% 68.00% 64.00% 66.00% 65.00% ------ 65.00% 65.00% 64.00% 65.00% 55.00% 65.00% 62.00% 62.00% 56.00% 57.00% 62.00% 60.00% 54.00% 69.00% 59.00% 71.27%
78.00% 83.00% 73.00% 86.00% 76.00% 79.00% 75.00% 95.00% 89.00% 82.00% 84.00% 74.00% 84.00% 84.00% 90.00% 67.00% 87.00% 61.00% 68.00% 69.00% 76.00% 64.00% 69.00% 79.00% 72.00% 62.00% 74.00% 74.00% 62.00% 73.00% 60.00% 67.00% 66.00% 66.00% 63.00% ------ 56.00% 62.00% 70.00% 63.00% 68.00% 63.00% 62.00% 59.00% 59.00% 63.00% 74.00% 69.00% 66.00% 67.00% 71.67%
84.00% 82.00% 87.00% 79.00% 86.00% 80.00% 82.00% 91.00% 83.00% 78.00% 87.00% 73.00% 83.00% 91.00% 86.00% 76.00% 90.00% 62.00% 69.00% 70.00% 61.00% 76.00% 66.00% 86.00% 65.00% 69.00% 77.00% 80.00% 60.00% 75.00% 68.00% 67.00% 54.00% 73.00% 61.00% 57.00% ------ 67.00% 69.00% 63.00% 67.00% 60.00% 55.00% 60.00% 63.00% 63.00% 69.00% 57.00% 69.00% 63.00% 72.22%
79.00% 83.00% 79.00% 78.00% 81.00% 82.00% 87.00% 90.00% 80.00% 77.00% 83.00% 80.00% 89.00% 88.00% 88.00% 73.00% 85.00% 66.00% 75.00% 61.00% 64.00% 65.00% 63.00% 83.00% 71.00% 66.00% 77.00% 67.00% 67.00% 71.00% 67.00% 64.00% 67.00% 73.00% 57.00% 71.00% 66.00% ------ 69.00% 56.00% 67.00% 56.00% 64.00% 63.00% 65.00% 55.00% 63.00% 56.00% 73.00% 75.00% 71.94%
78.00% 79.00% 72.00% 85.00% 76.00% 82.00% 71.00% 78.00% 74.00% 71.00% 81.00% 74.00% 71.00% 70.00% 82.00% 66.00% 73.00% 56.00% 58.00% 56.00% 60.00% 62.00% 63.00% 71.00% 67.00% 61.00% 68.00% 61.00% 66.00% 60.00% 65.00% 54.00% 57.00% 60.00% 58.00% 65.00% 56.00% 46.00% ------ 55.00% 55.00% 54.00% 52.00% 53.00% 65.00% 63.00% 62.00% 56.00% 55.00% 57.00% 64.90%
81.00% 83.00% 85.00% 79.00% 79.00% 83.00% 79.00% 92.00% 80.00% 85.00% 90.00% 86.00% 83.00% 77.00% 87.00% 72.00% 88.00% 68.00% 65.00% 70.00% 71.00% 68.00% 68.00% 77.00% 62.00% 64.00% 69.00% 73.00% 66.00% 68.00% 71.00% 67.00% 60.00% 65.00% 66.00% 58.00% 53.00% 64.00% 55.00% ------ 59.00% 70.00% 60.00% 56.00% 58.00% 55.00% 60.00% 68.00% 65.00% 64.00% 70.86%
79.00% 81.00% 82.00% 85.00% 78.00% 85.00% 75.00% 91.00% 80.00% 79.00% 84.00% 77.00% 92.00% 80.00% 84.00% 69.00% 89.00% 64.00% 68.00% 72.00% 73.00% 62.00% 66.00% 77.00% 70.00% 56.00% 71.00% 71.00% 69.00% 70.00% 59.00% 60.00% 62.00% 67.00% 56.00% 66.00% 66.00% 52.00% 63.00% 68.00% ------ 58.00% 61.00% 60.00% 61.00% 60.00% 65.00% 61.00% 69.00% 67.00% 70.61%
83.00% 77.00% 85.00% 84.00% 75.00% 81.00% 82.00% 90.00% 82.00% 71.00% 91.00% 66.00% 77.00% 90.00% 89.00% 73.00% 93.00% 62.00% 64.00% 61.00% 66.00% 67.00% 66.00% 86.00% 76.00% 68.00% 76.00% 72.00% 66.00% 70.00% 64.00% 61.00% 62.00% 64.00% 66.00% 59.00% 61.00% 57.00% 63.00% 60.00% 64.00% ------ 67.00% 48.00% 49.00% 67.00% 66.00% 69.00% 59.00% 65.00% 70.61%
76.00% 79.00% 84.00% 77.00% 81.00% 81.00% 76.00% 89.00% 79.00% 83.00% 89.00% 70.00% 84.00% 86.00% 90.00% 71.00% 80.00% 59.00% 70.00% 64.00% 65.00% 73.00% 69.00% 79.00% 61.00% 56.00% 69.00% 70.00% 64.00% 52.00% 70.00% 59.00% 62.00% 64.00% 54.00% 59.00% 59.00% 65.00% 72.00% 68.00% 68.00% 55.00% ------ 64.00% 65.00% 58.00% 64.00% 60.00% 62.00% 67.00% 69.82%
71.00% 81.00% 78.00% 81.00% 76.00% 80.00% 78.00% 93.00% 82.00% 73.00% 90.00% 78.00% 90.00% 84.00% 87.00% 73.00% 90.00% 64.00% 57.00% 66.00% 69.00% 65.00% 62.00% 80.00% 63.00% 66.00% 74.00% 70.00% 57.00% 61.00% 64.00% 65.00% 64.00% 67.00% 61.00% 58.00% 61.00% 58.00% 62.00% 61.00% 60.00% 64.00% 63.00% ------ 61.00% 64.00% 62.00% 55.00% 62.00% 64.00% 69.69%
79.00% 83.00% 75.00% 75.00% 73.00% 79.00% 77.00% 95.00% 78.00% 81.00% 85.00% 76.00% 88.00% 79.00% 87.00% 74.00% 80.00% 74.00% 65.00% 60.00% 66.00% 73.00% 72.00% 72.00% 68.00% 60.00% 72.00% 81.00% 76.00% 63.00% 75.00% 70.00% 57.00% 70.00% 61.00% 58.00% 56.00% 56.00% 61.00% 55.00% 57.00% 56.00% 57.00% 65.00% ------ 72.00% 62.00% 58.00% 65.00% 65.00% 70.24%
82.00% 78.00% 84.00% 73.00% 83.00% 75.00% 74.00% 86.00% 73.00% 76.00% 80.00% 77.00% 83.00% 83.00% 88.00% 73.00% 87.00% 59.00% 58.00% 66.00% 73.00% 62.00% 67.00% 84.00% 70.00% 65.00% 80.00% 72.00% 57.00% 53.00% 58.00% 77.00% 55.00% 60.00% 57.00% 57.00% 62.00% 59.00% 69.00% 68.00% 56.00% 61.00% 72.00% 60.00% 62.00% ------ 52.00% 63.00% 69.00% 66.00% 69.47%
81.00% 78.00% 88.00% 79.00% 83.00% 79.00% 78.00% 90.00% 81.00% 81.00% 86.00% 84.00% 84.00% 88.00% 85.00% 79.00% 86.00% 70.00% 65.00% 75.00% 74.00% 69.00% 68.00% 85.00% 61.00% 64.00% 72.00% 75.00% 60.00% 72.00% 67.00% 64.00% 67.00% 69.00% 68.00% 65.00% 62.00% 55.00% 63.00% 60.00% 69.00% 65.00% 68.00% 58.00% 70.00% 62.00% ------ 68.00% 57.00% 69.00% 72.37%
77.00% 80.00% 75.00% 74.00% 74.00% 75.00% 70.00% 91.00% 75.00% 73.00% 85.00% 71.00% 82.00% 83.00% 87.00% 65.00% 81.00% 57.00% 59.00% 66.00% 69.00% 65.00% 63.00% 80.00% 65.00% 65.00% 69.00% 69.00% 60.00% 67.00% 65.00% 63.00% 62.00% 68.00% 62.00% 51.00% 65.00% 54.00% 60.00% 60.00% 53.00% 61.00% 54.00% 63.00% 65.00% 61.00% 52.00% ------ 63.00% 51.00% 67.45%
76.00% 75.00% 75.00% 78.00% 76.00% 71.00% 67.00% 87.00% 67.00% 77.00% 86.00% 69.00% 83.00% 84.00% 84.00% 68.00% 80.00% 72.00% 59.00% 53.00% 70.00% 64.00% 64.00% 82.00% 71.00% 58.00% 77.00% 77.00% 65.00% 64.00% 59.00% 65.00% 59.00% 57.00% 63.00% 57.00% 58.00% 58.00% 69.00% 64.00% 52.00% 64.00% 56.00% 57.00% 62.00% 60.00% 63.00% 56.00% ------ 53.00% 67.57%
77.00% 75.00% 80.00% 69.00% 69.00% 76.00% 70.00% 83.00% 77.00% 70.00% 77.00% 72.00% 78.00% 81.00% 77.00% 75.00% 80.00% 66.00% 59.00% 65.00% 62.00% 74.00% 57.00% 68.00% 58.00% 59.00% 63.00% 62.00% 57.00% 60.00% 65.00% 65.00% 54.00% 61.00% 54.00% 58.00% 64.00% 57.00% 64.00% 57.00% 51.00% 57.00% 57.00% 48.00% 59.00% 54.00% 54.00% 65.00% 65.00% ------ 65.41%
