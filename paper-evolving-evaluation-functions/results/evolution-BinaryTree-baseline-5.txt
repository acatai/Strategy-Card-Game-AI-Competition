Parameters:
  ELITISM 5
  EVALUATOR_DRAFTS 10
  EVALUATOR_ROUNDS 10
  EVOLUTION_DRAFTS 10
  EVOLUTION_ROUNDS 10
  GENERATIONS 50
  INDIVIDUAL BinaryTree
  MUTATION_RATE 0.05
  POPULATION 50
  SCORING baseline

generation   1: 9.03s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureAttack, OperatorSub(Literal(0.7307632), Literal(-0.1392529))), state_node: FeatureOpNextTurnDraw }
generation   2: 8.62s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureAttack, OperatorSub(Literal(0.7307632), Literal(-0.1392529))), state_node: FeatureOpNextTurnDraw }
generation   3: 8.83s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureAttack, FeatureDefense), state_node: FeatureOpMaxMana }
generation   4: 8.16s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureAttack, FeatureDefense), state_node: FeatureOpMaxMana }
generation   5: 9.25s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense)), state_node: FeatureOpMaxMana }
generation   6: 8.76s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation   7: 10.38s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation   8: 8.51s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation   9: 9.70s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation  10: 9.71s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation  11: 9.49s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation  12: 10.54s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation  13: 8.69s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation  14: 8.66s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureDefense))), state_node: FeatureOpNextTurnDraw }
generation  15: 9.42s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureHasBreakthrough, OperatorSub(FeatureAttack, OperatorMax(Literal(0.12208748), FeatureHasLethal))), FeatureDefense), OperatorSub(OperatorMax(Literal(0.12208748), FeatureAttack), FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  16: 10.67s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureHasBreakthrough, OperatorSub(FeatureAttack, OperatorMax(Literal(0.12208748), FeatureHasLethal))), FeatureDefense), OperatorSub(OperatorMax(Literal(0.12208748), FeatureAttack), FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  17: 11.38s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, OperatorSub(OperatorMax(Literal(0.12208748), FeatureHasLethal), FeatureHasDrain)))), state_node: FeatureOpNextTurnDraw }
generation  18: 11.43s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureHasBreakthrough, OperatorSub(FeatureAttack, OperatorMax(Literal(0.12208748), FeatureHasLethal))), FeatureDefense), OperatorSub(OperatorMax(Literal(0.12208748), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  19: 11.26s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureHasBreakthrough, OperatorSub(FeatureAttack, OperatorMax(Literal(0.12208748), FeatureHasLethal))), FeatureDefense), OperatorSub(OperatorMax(Literal(0.12208748), FeatureAttack), FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  20: 15.29s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureHasBreakthrough, OperatorSub(FeatureAttack, OperatorMax(Literal(0.12208748), FeatureHasLethal))), FeatureDefense), OperatorSub(OperatorMax(Literal(0.12208748), OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureAttack)), state_node: FeatureOpNextTurnDraw }
generation  21: 12.52s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureHasLethal, FeatureAttack)), FeatureDefense), Literal(0.12208748)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  22: 14.52s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureHasLethal, FeatureAttack)), FeatureDefense), Literal(0.12208748)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  23: 14.23s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureAttack, OperatorSub(FeatureAttack, OperatorMax(OperatorMax(OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureDefense, FeatureHasLethal))), FeatureDefense), Literal(0.12208748)), FeatureHasLethal))), FeatureDefense), Literal(0.12208748)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  24: 13.37s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(FeatureDefense, FeatureAttack))), FeatureDefense), Literal(0.12208748)), state_node: FeatureMeHealth }
generation  25: 15.81s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, OperatorSub(OperatorMax(Literal(0.12208748), OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasLethal, Literal(0.12208748)), FeatureAttack))), FeatureAttack))), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, OperatorSub(OperatorMax(OperatorMax(Literal(0.12208748), OperatorMax(OperatorSub(OperatorMax(FeatureAttack, OperatorSub(OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(Literal(0.12208748), FeatureHasLethal))), OperatorMax(FeatureAttack, FeatureDefense)), OperatorMax(Literal(0.12208748), FeatureHasLethal))), OperatorAdd(FeatureHasWard, OperatorSub(FeatureAttack, FeatureHasCharge))), Literal(0.12208748))), FeatureHasLethal), FeatureHasDrain)))), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), FeatureAttack), FeatureAttack)))), state_node: FeatureOpNextTurnDraw }
generation  26: 17.21s // best: BinaryTreeIndividual { card_node: OperatorMax(Literal(0.12208748), OperatorSub(OperatorSub(FeatureAttack, FeatureDefense), OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, OperatorSub(OperatorMax(Literal(0.12208748), OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasLethal, Literal(0.12208748)), FeatureAttack))), FeatureAttack))), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, OperatorSub(OperatorMax(OperatorMax(Literal(0.12208748), OperatorMax(OperatorSub(OperatorMax(FeatureAttack, OperatorSub(OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureAttack, OperatorMax(Literal(0.12208748), FeatureHasLethal))), OperatorMax(FeatureAttack, FeatureDefense)), OperatorMax(Literal(0.12208748), FeatureHasLethal))), OperatorAdd(FeatureHasWard, OperatorSub(FeatureAttack, FeatureHasCharge))), Literal(0.12208748))), FeatureHasLethal), FeatureHasDrain)))), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), FeatureAttack), FeatureAttack)))), state_node: FeatureOpNextTurnDraw }
generation  27: 20.77s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorMax(FeatureHasLethal, OperatorSub(FeatureAttack, OperatorMax(OperatorMax(Literal(0.12208748), Literal(0.12208748)), FeatureHasLethal))), FeatureDefense), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  28: 22.24s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureAttack))), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(Literal(-0.015673399), FeatureAttack)), FeatureHasCharge)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  29: 24.24s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureAttack))), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(Literal(-0.015673399), FeatureAttack)), FeatureHasCharge)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  30: 21.02s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureAttack))), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(Literal(-0.015673399), FeatureAttack)), FeatureHasCharge)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  31: 19.25s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureAttack))), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(Literal(-0.015673399), FeatureAttack)), FeatureHasCharge)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  32: 21.91s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(OperatorMax(FeatureDefense, OperatorSub(OperatorMul(FeatureAttack, FeatureHasWard), FeatureAttack)), FeatureAttack))), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(Literal(-0.015673399), FeatureAttack)), FeatureHasCharge)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  33: 23.83s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureHasBreakthrough, OperatorMax(FeatureDefense, FeatureAttack))), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(Literal(-0.015673399), FeatureAttack)), FeatureHasCharge)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  34: 23.42s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureHasCharge)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), Literal(0.12208748)), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(Literal(-0.015673399), FeatureAttack)), FeatureHasCharge)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(OperatorAdd(FeatureOpNextTurnDraw, FeatureOpCurrentMana), FeatureOpNextTurnDraw) }
generation  35: 24.73s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, Literal(0.6951089))), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(OperatorMax(FeatureHasLethal, Literal(0.12208748)), Literal(0.12208748)), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(OperatorSub(OperatorMax(FeatureAttack, OperatorMax(OperatorSub(OperatorMax(OperatorMax(Literal(0.12208748), OperatorMax(FeatureAttack, OperatorMax(Literal(0.12208748), FeatureAttack))), OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureHasBreakthrough)), Literal(0.12208748)), Literal(0.12208748))), FeatureDefense), Literal(0.12208748))), FeatureDefense), Literal(0.12208748)), FeatureHasCharge)), FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  36: 24.43s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, Literal(0.6951089))), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(OperatorMax(FeatureHasLethal, Literal(0.12208748)), Literal(0.12208748)), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(OperatorSub(OperatorMax(FeatureAttack, OperatorMax(OperatorSub(OperatorMax(OperatorMax(Literal(0.12208748), OperatorMax(FeatureAttack, OperatorMax(Literal(0.12208748), FeatureAttack))), OperatorMax(OperatorMax(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureHasBreakthrough)), Literal(0.12208748)), Literal(0.12208748))), FeatureDefense), Literal(0.12208748))), FeatureDefense), Literal(0.12208748)), FeatureHasCharge)), FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  37: 26.77s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureAttack))), OperatorSub(FeatureDefense, OperatorMax(Literal(0.12208748), Literal(0.12208748)))))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(OperatorMax(OperatorMax(FeatureDefense, OperatorSub(OperatorMax(Literal(0.12208748), OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasLethal, Literal(0.12208748)), FeatureAttack))), FeatureAttack)), Literal(0.12208748)), OperatorMax(OperatorMax(OperatorSub(OperatorSub(Literal(-0.015673399), FeatureAttack), FeatureDefense), Literal(0.12208748)), Literal(0.12208748))))), FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  38: 24.66s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(OperatorMax(Literal(0.12208748), OperatorMax(FeatureDefense, OperatorSub(OperatorMax(FeatureAttack, FeatureHasLethal), FeatureHasDrain))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureHasCharge)), FeatureAttack)))), FeatureDefense))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(FeatureAttack, FeatureAttack)), FeatureAttack)), FeatureAttack)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  39: 24.41s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(Literal(0.12208748), OperatorSub(FeatureDefense, OperatorMax(Literal(0.12208748), Literal(0.12208748)))))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(FeatureAttack, FeatureAttack)), FeatureAttack)), FeatureAttack)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  40: 27.51s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(Literal(0.12208748), OperatorSub(Literal(0.12208748), OperatorMax(Literal(0.12208748), Literal(0.12208748)))))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(FeatureAttack, FeatureAttack)), FeatureAttack)), FeatureAttack)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  41: 28.70s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(Literal(0.12208748), OperatorSub(FeatureDefense, OperatorMax(Literal(0.12208748), Literal(0.12208748)))))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(FeatureHasLethal, OperatorSub(FeatureAttack, FeatureAttack)), FeatureAttack)), FeatureAttack)), FeatureAttack)), Literal(0.12208748)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  42: 23.17s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureDefense, OperatorMax(Literal(0.12208748), Literal(0.12208748)))), OperatorMax(FeatureHasBreakthrough, OperatorMax(OperatorMax(FeatureHasLethal, Literal(0.12208748)), FeatureHasBreakthrough))), OperatorSub(OperatorMax(Literal(0.12208748), Literal(0.12208748)), FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  43: 28.88s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureAttack, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureHasCharge)), FeatureAttack)))), FeatureDefense))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorSub(OperatorMax(OperatorMax(FeatureHasLethal, Literal(0.12208748)), Literal(0.12208748)), OperatorSub(FeatureDefense, FeatureDefense)), FeatureAttack)), FeatureAttack)), FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  44: 23.87s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(FeatureAttack, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, FeatureHasCharge)), FeatureAttack)))), FeatureDefense))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorSub(OperatorMax(OperatorMax(FeatureHasLethal, Literal(0.12208748)), Literal(0.12208748)), OperatorSub(FeatureDefense, FeatureDefense)), FeatureAttack)), FeatureAttack)), FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  45: 21.50s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(OperatorMax(FeatureDefense, OperatorSub(OperatorMul(OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(FeatureAttack, OperatorMax(OperatorMax(FeatureDefense, OperatorSub(OperatorMul(FeatureAttack, FeatureHasWard), FeatureAttack)), Literal(0.12208748)))), OperatorSub(FeatureDefense, FeatureDefense))), FeatureHasWard), FeatureAttack)), FeatureAttack))), OperatorSub(FeatureDefense, Literal(0.12208748))))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(Literal(0.12208748), OperatorMax(OperatorSub(FeatureDefense, OperatorAdd(Literal(0.12208748), FeatureDefense)), Literal(0.12208748))), OperatorMax(FeatureHasGuard, Literal(0.12208748)))), FeatureAttack)), state_node: OperatorMax(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  46: 24.87s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(OperatorMax(FeatureDefense, Literal(0.6951089)), Literal(0.6951089))), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorSub(Literal(0.12208748), OperatorSub(FeatureDefense, OperatorMax(Literal(0.12208748), OperatorMin(FeatureHasWard, FeatureHasGuard)))), OperatorMax(FeatureDefense, OperatorSub(OperatorMul(FeatureAttack, FeatureHasWard), FeatureAttack))))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(OperatorSub(OperatorMax(Literal(0.12208748), FeatureDefense), FeatureDefense), OperatorMax(Literal(0.12208748), Literal(0.12208748))), FeatureHasBreakthrough)), FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  47: 28.44s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureDefense, OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(Literal(0.12208748), OperatorMax(FeatureDefense, FeatureDefense)))), Literal(0.12208748)))), OperatorMax(FeatureHasBreakthrough, OperatorMax(Literal(0.12208748), FeatureHasBreakthrough))), OperatorSub(FeatureHasCharge, FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  48: 31.82s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(OperatorMax(FeatureDefense, Literal(0.6951089)), Literal(0.6951089))), OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorSub(Literal(0.12208748), OperatorSub(FeatureDefense, OperatorMax(Literal(0.12208748), OperatorSub(FeatureDefense, FeatureDefense)))), OperatorSub(Literal(0.12208748), FeatureDefense)))), OperatorSub(OperatorMax(Literal(0.12208748), OperatorSub(OperatorMax(OperatorSub(OperatorMax(Literal(0.12208748), Literal(0.12208748)), FeatureDefense), OperatorMax(Literal(0.12208748), Literal(0.12208748))), FeatureHasBreakthrough)), FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  49: 32.68s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureDefense, OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(Literal(0.12208748), OperatorMax(FeatureDefense, FeatureDefense)))), Literal(0.12208748)))), OperatorMax(FeatureHasBreakthrough, OperatorMax(Literal(0.12208748), FeatureHasBreakthrough))), OperatorSub(FeatureHasCharge, FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
generation  50: 35.44s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorSub(FeatureDefense, OperatorMax(OperatorSub(OperatorSub(FeatureAttack, OperatorMax(FeatureDefense, FeatureDefense)), OperatorMax(FeatureHasBreakthrough, OperatorSub(Literal(0.12208748), OperatorMax(FeatureDefense, FeatureDefense)))), Literal(0.12208748)))), OperatorMax(FeatureHasBreakthrough, OperatorMax(Literal(0.12208748), FeatureHasBreakthrough))), OperatorSub(FeatureHasCharge, FeatureAttack)), Literal(0.12208748)), state_node: FeatureOpNextTurnDraw }
------ 65.00% 64.00% 66.00% 49.00% 55.00% 54.00% 49.00% 49.00% 49.00% 53.00% 52.00% 56.00% 59.00% 51.00% 49.00% 49.00% 51.00% 62.00% 46.00% 62.00% 52.00% 52.00% 61.00% 50.00% 49.00% 52.00% 57.00% 48.00% 48.00% 46.00% 55.00% 60.00% 51.00% 49.00% 50.00% 52.00% 48.00% 47.00% 50.00% 44.00% 52.00% 48.00% 55.00% 65.00% 49.00% 52.00% 51.00% 57.00% 52.00% 52.90%
64.00% ------ 66.00% 67.00% 52.00% 52.00% 48.00% 52.00% 51.00% 56.00% 59.00% 47.00% 50.00% 50.00% 43.00% 48.00% 39.00% 51.00% 49.00% 48.00% 47.00% 60.00% 45.00% 50.00% 52.00% 41.00% 45.00% 59.00% 50.00% 45.00% 47.00% 49.00% 53.00% 51.00% 50.00% 51.00% 55.00% 51.00% 57.00% 48.00% 49.00% 51.00% 53.00% 49.00% 44.00% 48.00% 54.00% 41.00% 50.00% 53.00% 50.82%
38.00% 40.00% ------ 64.00% 33.00% 29.00% 33.00% 32.00% 35.00% 43.00% 39.00% 41.00% 33.00% 28.00% 43.00% 43.00% 21.00% 39.00% 41.00% 36.00% 38.00% 29.00% 42.00% 37.00% 42.00% 42.00% 36.00% 31.00% 36.00% 31.00% 33.00% 30.00% 34.00% 31.00% 30.00% 31.00% 33.00% 37.00% 30.00% 35.00% 43.00% 33.00% 41.00% 34.00% 39.00% 28.00% 31.00% 42.00% 37.00% 38.00% 36.02%
31.00% 37.00% 52.00% ------ 29.00% 34.00% 40.00% 39.00% 31.00% 43.00% 30.00% 37.00% 47.00% 39.00% 36.00% 44.00% 28.00% 40.00% 41.00% 40.00% 37.00% 36.00% 34.00% 35.00% 27.00% 35.00% 42.00% 38.00% 37.00% 36.00% 34.00% 29.00% 37.00% 35.00% 35.00% 33.00% 44.00% 37.00% 36.00% 30.00% 31.00% 34.00% 35.00% 36.00% 49.00% 36.00% 32.00% 31.00% 36.00% 24.00% 36.10%
55.00% 55.00% 69.00% 73.00% ------ 50.00% 47.00% 47.00% 58.00% 51.00% 52.00% 46.00% 53.00% 50.00% 70.00% 67.00% 45.00% 71.00% 60.00% 67.00% 48.00% 64.00% 51.00% 47.00% 48.00% 50.00% 52.00% 60.00% 47.00% 54.00% 60.00% 55.00% 50.00% 53.00% 59.00% 51.00% 52.00% 58.00% 60.00% 55.00% 59.00% 54.00% 50.00% 52.00% 79.00% 53.00% 49.00% 54.00% 51.00% 55.00% 55.43%
57.00% 57.00% 67.00% 67.00% 51.00% ------ 52.00% 51.00% 42.00% 53.00% 58.00% 47.00% 53.00% 56.00% 62.00% 65.00% 50.00% 65.00% 65.00% 73.00% 49.00% 60.00% 52.00% 53.00% 46.00% 48.00% 53.00% 54.00% 54.00% 54.00% 41.00% 56.00% 48.00% 51.00% 52.00% 52.00% 53.00% 51.00% 56.00% 55.00% 49.00% 57.00% 59.00% 57.00% 73.00% 47.00% 48.00% 54.00% 58.00% 45.00% 54.61%
58.00% 68.00% 70.00% 77.00% 59.00% 51.00% ------ 60.00% 58.00% 60.00% 45.00% 51.00% 56.00% 66.00% 68.00% 63.00% 53.00% 60.00% 64.00% 57.00% 63.00% 60.00% 50.00% 54.00% 62.00% 57.00% 57.00% 66.00% 54.00% 60.00% 53.00% 58.00% 52.00% 56.00% 55.00% 44.00% 54.00% 48.00% 57.00% 53.00% 53.00% 50.00% 51.00% 58.00% 68.00% 46.00% 54.00% 49.00% 62.00% 57.00% 57.24%
59.00% 68.00% 76.00% 73.00% 68.00% 51.00% 55.00% ------ 42.00% 48.00% 57.00% 58.00% 59.00% 53.00% 65.00% 70.00% 52.00% 65.00% 66.00% 68.00% 61.00% 60.00% 50.00% 66.00% 54.00% 51.00% 64.00% 45.00% 59.00% 59.00% 56.00% 55.00% 55.00% 51.00% 56.00% 59.00% 66.00% 53.00% 62.00% 53.00% 64.00% 62.00% 55.00% 46.00% 74.00% 61.00% 56.00% 62.00% 54.00% 50.00% 58.61%
52.00% 59.00% 70.00% 72.00% 49.00% 53.00% 53.00% 58.00% ------ 50.00% 56.00% 47.00% 47.00% 55.00% 60.00% 68.00% 62.00% 72.00% 71.00% 60.00% 56.00% 56.00% 53.00% 58.00% 47.00% 51.00% 60.00% 57.00% 56.00% 55.00% 48.00% 60.00% 56.00% 63.00% 61.00% 63.00% 60.00% 44.00% 55.00% 62.00% 50.00% 55.00% 56.00% 61.00% 61.00% 62.00% 68.00% 57.00% 51.00% 53.00% 57.33%
54.00% 49.00% 69.00% 71.00% 47.00% 56.00% 46.00% 53.00% 55.00% ------ 48.00% 55.00% 47.00% 50.00% 68.00% 65.00% 49.00% 65.00% 61.00% 61.00% 65.00% 57.00% 49.00% 60.00% 44.00% 50.00% 57.00% 47.00% 61.00% 56.00% 56.00% 51.00% 56.00% 60.00% 55.00% 56.00% 62.00% 58.00% 57.00% 55.00% 61.00% 45.00% 58.00% 53.00% 72.00% 54.00% 55.00% 55.00% 51.00% 53.00% 55.88%
55.00% 51.00% 72.00% 69.00% 48.00% 56.00% 60.00% 52.00% 51.00% 53.00% ------ 60.00% 65.00% 53.00% 63.00% 69.00% 52.00% 56.00% 70.00% 66.00% 53.00% 56.00% 49.00% 52.00% 51.00% 56.00% 50.00% 53.00% 43.00% 52.00% 51.00% 53.00% 58.00% 59.00% 51.00% 56.00% 48.00% 59.00% 57.00% 51.00% 50.00% 55.00% 57.00% 59.00% 71.00% 55.00% 52.00% 48.00% 47.00% 52.00% 55.61%
60.00% 56.00% 64.00% 68.00% 63.00% 54.00% 63.00% 47.00% 57.00% 54.00% 62.00% ------ 59.00% 51.00% 67.00% 64.00% 54.00% 58.00% 71.00% 59.00% 59.00% 59.00% 58.00% 62.00% 61.00% 57.00% 60.00% 52.00% 51.00% 54.00% 61.00% 57.00% 50.00% 58.00% 55.00% 46.00% 62.00% 58.00% 59.00% 53.00% 53.00% 62.00% 58.00% 57.00% 70.00% 50.00% 54.00% 52.00% 46.00% 45.00% 57.35%
62.00% 69.00% 74.00% 69.00% 55.00% 62.00% 57.00% 60.00% 54.00% 55.00% 60.00% 50.00% ------ 54.00% 68.00% 62.00% 49.00% 62.00% 69.00% 71.00% 53.00% 52.00% 52.00% 57.00% 51.00% 45.00% 47.00% 57.00% 62.00% 67.00% 50.00% 63.00% 51.00% 56.00% 62.00% 59.00% 64.00% 54.00% 52.00% 51.00% 50.00% 52.00% 61.00% 52.00% 75.00% 51.00% 49.00% 53.00% 62.00% 55.00% 57.69%
56.00% 50.00% 71.00% 69.00% 56.00% 62.00% 50.00% 49.00% 54.00% 55.00% 51.00% 54.00% 56.00% ------ 61.00% 70.00% 52.00% 63.00% 67.00% 61.00% 52.00% 59.00% 54.00% 54.00% 47.00% 51.00% 56.00% 58.00% 44.00% 59.00% 53.00% 50.00% 53.00% 62.00% 49.00% 55.00% 56.00% 54.00% 56.00% 49.00% 56.00% 52.00% 58.00% 58.00% 78.00% 62.00% 61.00% 59.00% 50.00% 53.00% 56.43%
55.00% 56.00% 72.00% 64.00% 44.00% 43.00% 37.00% 39.00% 43.00% 41.00% 49.00% 34.00% 44.00% 49.00% ------ 56.00% 41.00% 62.00% 54.00% 56.00% 54.00% 47.00% 41.00% 35.00% 49.00% 41.00% 48.00% 42.00% 34.00% 41.00% 42.00% 34.00% 40.00% 36.00% 40.00% 42.00% 33.00% 47.00% 42.00% 45.00% 49.00% 42.00% 41.00% 31.00% 53.00% 37.00% 43.00% 42.00% 43.00% 49.00% 44.94%
53.00% 54.00% 68.00% 69.00% 34.00% 41.00% 35.00% 45.00% 32.00% 37.00% 40.00% 42.00% 38.00% 42.00% 54.00% ------ 48.00% 49.00% 55.00% 41.00% 47.00% 38.00% 48.00% 46.00% 45.00% 38.00% 45.00% 38.00% 38.00% 38.00% 41.00% 44.00% 43.00% 36.00% 43.00% 41.00% 43.00% 43.00% 30.00% 39.00% 44.00% 34.00% 45.00% 45.00% 59.00% 42.00% 39.00% 34.00% 40.00% 43.00% 43.39%
56.00% 59.00% 76.00% 66.00% 54.00% 57.00% 47.00% 60.00% 61.00% 57.00% 51.00% 57.00% 56.00% 60.00% 59.00% 70.00% ------ 66.00% 66.00% 72.00% 52.00% 55.00% 60.00% 50.00% 51.00% 51.00% 68.00% 55.00% 47.00% 49.00% 59.00% 49.00% 56.00% 63.00% 58.00% 48.00% 48.00% 64.00% 51.00% 55.00% 57.00% 51.00% 40.00% 65.00% 74.00% 52.00% 54.00% 54.00% 60.00% 46.00% 56.98%
55.00% 54.00% 63.00% 62.00% 43.00% 53.00% 35.00% 41.00% 42.00% 46.00% 39.00% 46.00% 38.00% 49.00% 56.00% 49.00% 40.00% ------ 45.00% 59.00% 41.00% 48.00% 36.00% 45.00% 41.00% 45.00% 48.00% 40.00% 38.00% 39.00% 50.00% 45.00% 50.00% 40.00% 41.00% 33.00% 47.00% 43.00% 47.00% 45.00% 38.00% 29.00% 44.00% 38.00% 58.00% 39.00% 48.00% 41.00% 46.00% 40.00% 44.86%
56.00% 50.00% 64.00% 70.00% 39.00% 41.00% 37.00% 41.00% 41.00% 37.00% 43.00% 43.00% 40.00% 40.00% 50.00% 56.00% 42.00% 49.00% ------ 52.00% 40.00% 47.00% 43.00% 45.00% 49.00% 40.00% 54.00% 42.00% 39.00% 43.00% 34.00% 38.00% 39.00% 41.00% 36.00% 42.00% 33.00% 41.00% 37.00% 44.00% 32.00% 41.00% 39.00% 45.00% 43.00% 41.00% 44.00% 40.00% 45.00% 38.00% 43.39%
61.00% 54.00% 65.00% 65.00% 37.00% 52.00% 39.00% 43.00% 40.00% 41.00% 43.00% 41.00% 48.00% 39.00% 51.00% 52.00% 37.00% 48.00% 48.00% ------ 46.00% 42.00% 35.00% 40.00% 41.00% 41.00% 41.00% 48.00% 41.00% 46.00% 40.00% 42.00% 47.00% 49.00% 42.00% 39.00% 38.00% 46.00% 34.00% 42.00% 40.00% 42.00% 42.00% 42.00% 58.00% 38.00% 41.00% 44.00% 36.00% 40.00% 44.22%
59.00% 55.00% 68.00% 69.00% 59.00% 66.00% 56.00% 58.00% 48.00% 50.00% 60.00% 49.00% 52.00% 46.00% 65.00% 56.00% 49.00% 63.00% 63.00% 67.00% ------ 56.00% 48.00% 55.00% 47.00% 52.00% 56.00% 47.00% 51.00% 52.00% 47.00% 48.00% 55.00% 53.00% 49.00% 58.00% 53.00% 52.00% 47.00% 51.00% 60.00% 52.00% 54.00% 51.00% 70.00% 52.00% 60.00% 58.00% 46.00% 48.00% 54.82%
63.00% 52.00% 74.00% 66.00% 59.00% 59.00% 56.00% 43.00% 49.00% 59.00% 49.00% 51.00% 67.00% 44.00% 62.00% 57.00% 52.00% 67.00% 64.00% 60.00% 51.00% ------ 55.00% 53.00% 38.00% 53.00% 57.00% 47.00% 46.00% 44.00% 53.00% 52.00% 45.00% 47.00% 45.00% 49.00% 47.00% 49.00% 55.00% 52.00% 55.00% 38.00% 58.00% 55.00% 62.00% 49.00% 61.00% 44.00% 59.00% 54.00% 53.59%
55.00% 55.00% 69.00% 69.00% 54.00% 53.00% 49.00% 55.00% 57.00% 53.00% 58.00% 53.00% 51.00% 66.00% 69.00% 75.00% 52.00% 64.00% 68.00% 66.00% 55.00% 45.00% ------ 56.00% 54.00% 56.00% 57.00% 51.00% 50.00% 51.00% 55.00% 46.00% 55.00% 58.00% 58.00% 49.00% 56.00% 59.00% 59.00% 52.00% 46.00% 56.00% 54.00% 50.00% 74.00% 60.00% 51.00% 53.00% 62.00% 52.00% 56.55%
52.00% 58.00% 71.00% 71.00% 55.00% 34.00% 50.00% 50.00% 51.00% 41.00% 43.00% 52.00% 39.00% 51.00% 65.00% 65.00% 51.00% 67.00% 61.00% 72.00% 63.00% 50.00% 45.00% ------ 52.00% 55.00% 51.00% 51.00% 50.00% 48.00% 55.00% 55.00% 49.00% 53.00% 56.00% 46.00% 40.00% 50.00% 52.00% 55.00% 56.00% 56.00% 57.00% 58.00% 67.00% 57.00% 51.00% 53.00% 50.00% 51.00% 53.69%
63.00% 58.00% 74.00% 77.00% 53.00% 57.00% 59.00% 50.00% 59.00% 58.00% 62.00% 60.00% 51.00% 56.00% 74.00% 63.00% 53.00% 73.00% 68.00% 68.00% 57.00% 55.00% 49.00% 59.00% ------ 55.00% 60.00% 46.00% 60.00% 51.00% 62.00% 52.00% 61.00% 50.00% 53.00% 52.00% 63.00% 50.00% 68.00% 63.00% 50.00% 59.00% 55.00% 62.00% 65.00% 53.00% 53.00% 57.00% 55.00% 57.00% 58.53%
57.00% 58.00% 68.00% 72.00% 46.00% 51.00% 56.00% 58.00% 48.00% 70.00% 52.00% 56.00% 58.00% 60.00% 64.00% 66.00% 52.00% 71.00% 70.00% 62.00% 59.00% 61.00% 57.00% 53.00% 55.00% ------ 53.00% 53.00% 52.00% 58.00% 53.00% 59.00% 50.00% 57.00% 64.00% 56.00% 43.00% 54.00% 64.00% 60.00% 55.00% 51.00% 60.00% 56.00% 73.00% 51.00% 59.00% 55.00% 63.00% 47.00% 57.67%
54.00% 50.00% 67.00% 73.00% 54.00% 58.00% 50.00% 47.00% 58.00% 50.00% 43.00% 50.00% 50.00% 54.00% 56.00% 65.00% 45.00% 65.00% 65.00% 59.00% 62.00% 50.00% 51.00% 49.00% 42.00% 50.00% ------ 46.00% 41.00% 54.00% 42.00% 49.00% 57.00% 49.00% 43.00% 45.00% 50.00% 50.00% 46.00% 50.00% 52.00% 53.00% 45.00% 53.00% 75.00% 55.00% 55.00% 46.00% 43.00% 58.00% 52.53%
60.00% 63.00% 68.00% 74.00% 50.00% 55.00% 51.00% 57.00% 51.00% 58.00% 51.00% 47.00% 49.00% 56.00% 69.00% 56.00% 54.00% 66.00% 65.00% 66.00% 62.00% 54.00% 58.00% 57.00% 50.00% 54.00% 59.00% ------ 55.00% 63.00% 61.00% 44.00% 54.00% 48.00% 60.00% 64.00% 51.00% 48.00% 54.00% 60.00% 52.00% 59.00% 52.00% 52.00% 67.00% 61.00% 56.00% 58.00% 52.00% 54.00% 56.84%
58.00% 61.00% 78.00% 69.00% 58.00% 57.00% 52.00% 49.00% 56.00% 50.00% 57.00% 59.00% 52.00% 51.00% 64.00% 63.00% 49.00% 64.00% 65.00% 71.00% 56.00% 56.00% 61.00% 46.00% 52.00% 45.00% 60.00% 58.00% ------ 60.00% 54.00% 43.00% 52.00% 64.00% 48.00% 52.00% 56.00% 57.00% 56.00% 57.00% 59.00% 56.00% 55.00% 59.00% 75.00% 51.00% 61.00% 57.00% 54.00% 51.00% 57.02%
55.00% 57.00% 70.00% 69.00% 62.00% 57.00% 61.00% 54.00% 49.00% 54.00% 54.00% 56.00% 55.00% 48.00% 63.00% 60.00% 48.00% 73.00% 64.00% 69.00% 64.00% 59.00% 54.00% 59.00% 48.00% 47.00% 50.00% 54.00% 54.00% ------ 47.00% 61.00% 60.00% 50.00% 52.00% 56.00% 53.00% 58.00% 50.00% 59.00% 55.00% 56.00% 55.00% 58.00% 75.00% 47.00% 58.00% 54.00% 52.00% 50.00% 56.59%
60.00% 56.00% 74.00% 76.00% 54.00% 55.00% 54.00% 50.00% 51.00% 56.00% 48.00% 60.00% 61.00% 52.00% 72.00% 75.00% 52.00% 65.00% 61.00% 61.00% 57.00% 62.00% 54.00% 53.00% 46.00% 53.00% 55.00% 59.00% 57.00% 53.00% ------ 54.00% 49.00% 60.00% 60.00% 57.00% 49.00% 58.00% 49.00% 55.00% 58.00% 51.00% 56.00% 65.00% 74.00% 57.00% 54.00% 52.00% 59.00% 54.00% 57.41%
56.00% 62.00% 70.00% 71.00% 54.00% 55.00% 57.00% 50.00% 55.00% 61.00% 61.00% 64.00% 62.00% 49.00% 59.00% 69.00% 43.00% 62.00% 63.00% 63.00% 51.00% 58.00% 55.00% 53.00% 50.00% 58.00% 58.00% 48.00% 53.00% 60.00% 55.00% ------ 55.00% 52.00% 55.00% 54.00% 56.00% 51.00% 45.00% 60.00% 49.00% 55.00% 55.00% 50.00% 75.00% 55.00% 56.00% 62.00% 58.00% 58.00% 56.86%
53.00% 64.00% 80.00% 70.00% 48.00% 48.00% 53.00% 62.00% 48.00% 52.00% 56.00% 56.00% 54.00% 55.00% 63.00% 68.00% 50.00% 63.00% 65.00% 61.00% 53.00% 58.00% 57.00% 62.00% 54.00% 55.00% 56.00% 50.00% 58.00% 50.00% 52.00% 54.00% ------ 61.00% 50.00% 45.00% 54.00% 51.00% 59.00% 59.00% 57.00% 49.00% 55.00% 57.00% 72.00% 50.00% 49.00% 53.00% 47.00% 59.00% 56.22%
59.00% 56.00% 73.00% 71.00% 49.00% 53.00% 54.00% 66.00% 51.00% 59.00% 54.00% 56.00% 56.00% 51.00% 68.00% 62.00% 54.00% 76.00% 71.00% 68.00% 58.00% 62.00% 57.00% 62.00% 53.00% 47.00% 61.00% 52.00% 60.00% 48.00% 47.00% 45.00% 51.00% ------ 57.00% 54.00% 53.00% 49.00% 52.00% 60.00% 60.00% 46.00% 52.00% 50.00% 69.00% 43.00% 60.00% 49.00% 60.00% 60.00% 56.82%
63.00% 61.00% 77.00% 76.00% 52.00% 58.00% 54.00% 55.00% 59.00% 49.00% 58.00% 61.00% 54.00% 58.00% 70.00% 57.00% 51.00% 68.00% 68.00% 72.00% 51.00% 46.00% 64.00% 53.00% 54.00% 58.00% 68.00% 59.00% 57.00% 50.00% 59.00% 64.00% 56.00% 50.00% ------ 52.00% 57.00% 57.00% 53.00% 57.00% 62.00% 36.00% 47.00% 51.00% 72.00% 50.00% 57.00% 59.00% 58.00% 56.00% 57.84%
50.00% 67.00% 80.00% 79.00% 52.00% 48.00% 51.00% 57.00% 51.00% 60.00% 49.00% 51.00% 50.00% 59.00% 60.00% 62.00% 56.00% 66.00% 62.00% 63.00% 57.00% 49.00% 60.00% 51.00% 58.00% 49.00% 57.00% 55.00% 46.00% 51.00% 67.00% 51.00% 55.00% 50.00% 43.00% ------ 48.00% 55.00% 57.00% 61.00% 49.00% 48.00% 48.00% 52.00% 71.00% 49.00% 60.00% 50.00% 48.00% 53.00% 55.53%
62.00% 59.00% 72.00% 69.00% 54.00% 47.00% 53.00% 56.00% 53.00% 55.00% 61.00% 60.00% 57.00% 59.00% 65.00% 55.00% 63.00% 65.00% 70.00% 59.00% 61.00% 61.00% 49.00% 61.00% 57.00% 54.00% 53.00% 53.00% 58.00% 54.00% 50.00% 43.00% 45.00% 53.00% 55.00% 56.00% ------ 56.00% 53.00% 51.00% 63.00% 45.00% 46.00% 49.00% 67.00% 53.00% 39.00% 53.00% 58.00% 59.00% 56.10%
56.00% 58.00% 71.00% 64.00% 50.00% 51.00% 59.00% 47.00% 45.00% 47.00% 57.00% 62.00% 50.00% 58.00% 62.00% 65.00% 50.00% 56.00% 65.00% 67.00% 44.00% 50.00% 54.00% 59.00% 58.00% 57.00% 55.00% 47.00% 50.00% 57.00% 45.00% 53.00% 57.00% 50.00% 49.00% 49.00% 44.00% ------ 59.00% 52.00% 51.00% 44.00% 43.00% 57.00% 65.00% 47.00% 48.00% 57.00% 47.00% 64.00% 54.12%
57.00% 52.00% 65.00% 75.00% 51.00% 50.00% 58.00% 57.00% 46.00% 57.00% 40.00% 54.00% 48.00% 49.00% 68.00% 60.00% 56.00% 57.00% 56.00% 61.00% 62.00% 65.00% 44.00% 53.00% 50.00% 45.00% 60.00% 55.00% 58.00% 50.00% 53.00% 52.00% 43.00% 52.00% 46.00% 48.00% 44.00% 48.00% ------ 56.00% 54.00% 47.00% 48.00% 48.00% 77.00% 52.00% 63.00% 68.00% 52.00% 50.00% 54.29%
59.00% 50.00% 73.00% 74.00% 42.00% 48.00% 50.00% 58.00% 48.00% 58.00% 53.00% 55.00% 54.00% 38.00% 67.00% 60.00% 56.00% 70.00% 64.00% 61.00% 64.00% 66.00% 56.00% 50.00% 50.00% 48.00% 55.00% 57.00% 50.00% 52.00% 47.00% 55.00% 55.00% 54.00% 54.00% 40.00% 49.00% 49.00% 53.00% ------ 48.00% 54.00% 50.00% 43.00% 70.00% 54.00% 64.00% 60.00% 41.00% 49.00% 54.59%
59.00% 56.00% 59.00% 76.00% 62.00% 48.00% 52.00% 57.00% 50.00% 46.00% 42.00% 51.00% 49.00% 49.00% 68.00% 65.00% 53.00% 70.00% 63.00% 64.00% 57.00% 57.00% 46.00% 58.00% 60.00% 48.00% 64.00% 48.00% 55.00% 48.00% 48.00% 58.00% 46.00% 52.00% 53.00% 51.00% 49.00% 58.00% 55.00% 53.00% ------ 51.00% 55.00% 53.00% 73.00% 45.00% 58.00% 43.00% 50.00% 55.00% 54.82%
57.00% 63.00% 78.00% 73.00% 53.00% 47.00% 59.00% 49.00% 49.00% 56.00% 49.00% 61.00% 56.00% 56.00% 69.00% 69.00% 62.00% 67.00% 65.00% 69.00% 56.00% 65.00% 55.00% 60.00% 56.00% 50.00% 62.00% 57.00% 62.00% 60.00% 50.00% 54.00% 53.00% 59.00% 50.00% 46.00% 57.00% 57.00% 52.00% 51.00% 52.00% ------ 58.00% 56.00% 65.00% 48.00% 62.00% 57.00% 48.00% 58.00% 57.61%
59.00% 52.00% 74.00% 73.00% 51.00% 55.00% 57.00% 58.00% 48.00% 55.00% 54.00% 45.00% 57.00% 51.00% 68.00% 69.00% 52.00% 59.00% 74.00% 54.00% 57.00% 53.00% 51.00% 51.00% 59.00% 54.00% 52.00% 48.00% 44.00% 55.00% 56.00% 55.00% 57.00% 51.00% 51.00% 52.00% 51.00% 54.00% 56.00% 52.00% 58.00% 46.00% ------ 60.00% 75.00% 55.00% 55.00% 55.00% 47.00% 50.00% 55.61%
59.00% 61.00% 66.00% 69.00% 59.00% 52.00% 66.00% 55.00% 59.00% 53.00% 45.00% 49.00% 62.00% 51.00% 67.00% 65.00% 46.00% 59.00% 72.00% 65.00% 60.00% 57.00% 57.00% 60.00% 54.00% 44.00% 57.00% 48.00% 54.00% 47.00% 48.00% 51.00% 54.00% 52.00% 44.00% 59.00% 48.00% 54.00% 58.00% 54.00% 50.00% 53.00% 58.00% ------ 78.00% 42.00% 53.00% 50.00% 51.00% 62.00% 55.86%
52.00% 57.00% 68.00% 66.00% 38.00% 36.00% 38.00% 36.00% 43.00% 31.00% 42.00% 39.00% 34.00% 37.00% 42.00% 48.00% 28.00% 42.00% 39.00% 40.00% 38.00% 41.00% 35.00% 30.00% 37.00% 42.00% 37.00% 27.00% 27.00% 32.00% 23.00% 34.00% 37.00% 36.00% 41.00% 32.00% 38.00% 27.00% 32.00% 38.00% 32.00% 31.00% 33.00% 35.00% ------ 37.00% 32.00% 32.00% 40.00% 37.00% 37.73%
60.00% 51.00% 67.00% 70.00% 55.00% 54.00% 47.00% 50.00% 60.00% 53.00% 53.00% 51.00% 56.00% 49.00% 75.00% 73.00% 55.00% 64.00% 67.00% 71.00% 54.00% 62.00% 59.00% 53.00% 58.00% 47.00% 59.00% 67.00% 56.00% 56.00% 56.00% 57.00% 49.00% 57.00% 58.00% 51.00% 49.00% 58.00% 52.00% 52.00% 46.00% 56.00% 54.00% 54.00% 73.00% ------ 59.00% 53.00% 59.00% 56.00% 57.16%
49.00% 65.00% 76.00% 68.00% 57.00% 50.00% 57.00% 58.00% 52.00% 56.00% 50.00% 51.00% 58.00% 49.00% 65.00% 63.00% 44.00% 63.00% 64.00% 60.00% 55.00% 54.00% 57.00% 51.00% 49.00% 49.00% 59.00% 53.00% 48.00% 48.00% 51.00% 55.00% 56.00% 52.00% 62.00% 56.00% 53.00% 56.00% 53.00% 52.00% 59.00% 51.00% 50.00% 55.00% 71.00% 59.00% ------ 45.00% 53.00% 57.00% 55.59%
56.00% 64.00% 69.00% 73.00% 52.00% 55.00% 55.00% 54.00% 58.00% 55.00% 44.00% 61.00% 50.00% 56.00% 55.00% 66.00% 45.00% 65.00% 61.00% 64.00% 66.00% 56.00% 63.00% 59.00% 39.00% 55.00% 57.00% 57.00% 51.00% 54.00% 57.00% 61.00% 49.00% 53.00% 57.00% 52.00% 52.00% 57.00% 53.00% 48.00% 61.00% 56.00% 56.00% 51.00% 75.00% 53.00% 59.00% ------ 58.00% 53.00% 56.65%
65.00% 58.00% 77.00% 76.00% 42.00% 53.00% 50.00% 45.00% 56.00% 53.00% 57.00% 46.00% 40.00% 39.00% 69.00% 71.00% 53.00% 62.00% 60.00% 65.00% 59.00% 65.00% 56.00% 62.00% 52.00% 48.00% 55.00% 57.00% 53.00% 43.00% 45.00% 46.00% 53.00% 59.00% 51.00% 49.00% 53.00% 58.00% 47.00% 51.00% 49.00% 51.00% 48.00% 53.00% 68.00% 49.00% 55.00% 57.00% ------ 54.00% 54.76%
62.00% 60.00% 75.00% 75.00% 49.00% 54.00% 50.00% 57.00% 49.00% 50.00% 47.00% 59.00% 50.00% 52.00% 62.00% 71.00% 50.00% 62.00% 70.00% 63.00% 58.00% 54.00% 45.00% 61.00% 49.00% 50.00% 55.00% 50.00% 54.00% 51.00% 52.00% 53.00% 57.00% 47.00% 60.00% 45.00% 43.00% 51.00% 51.00% 54.00% 56.00% 52.00% 51.00% 56.00% 71.00% 60.00% 54.00% 57.00% 49.00% ------ 55.37%
