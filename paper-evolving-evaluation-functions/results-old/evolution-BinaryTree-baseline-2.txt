Parameters:
  ELITISM 5
  EVALUATOR_DRAFTS 10
  EVALUATOR_ROUNDS 10
  EVOLUTION_DRAFTS 50
  EVOLUTION_ROUNDS 10
  EVOLUTION_TARGET_RATIO 10
  GENERATIONS 100
  INDIVIDUAL BinaryTree
  MUTATION_RATE 0.05
  POPULATION 50
  SCORING baseline

generation   1: 9.34s // best: BinaryTreeIndividual { card_node: FeatureAttack, state_node: OperatorMax(FeatureOpMaxMana, FeatureMeCurrentMana) }
generation   2: 8.98s // best: BinaryTreeIndividual { card_node: FeatureAttack, state_node: OperatorMax(FeatureOpMaxMana, FeatureMeCurrentMana) }
generation   3: 8.05s // best: BinaryTreeIndividual { card_node: FeatureAttack, state_node: FeatureOpNextTurnDraw }
generation   4: 7.88s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(OperatorMax(FeatureDefense, FeatureHasDrain), FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureDefense), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorMin(FeatureOpMaxMana, FeatureOpMaxMana) }
generation   5: 7.82s // best: BinaryTreeIndividual { card_node: OperatorAdd(OperatorMin(FeatureDefense, FeatureHasGuard), FeatureAttack), state_node: FeatureMeHealth }
generation   6: 9.44s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(OperatorMax(FeatureDefense, FeatureHasDrain), FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), state_node: FeatureMeDecksize }
generation   7: 8.72s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(OperatorMax(FeatureDefense, FeatureHasDrain), FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), state_node: FeatureMeDecksize }
generation   8: 10.98s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(OperatorMax(FeatureDefense, FeatureHasDrain), FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation   9: 12.25s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(OperatorMax(FeatureDefense, FeatureHasDrain), FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  10: 13.79s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureHasDrain, OperatorSub(Literal(-0.55075073), FeatureHasDrain)), state_node: FeatureOpNextTurnDraw }
generation  11: 13.53s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureHasDrain, OperatorSub(Literal(-0.55075073), FeatureHasDrain)), state_node: FeatureOpNextTurnDraw }
generation  12: 14.40s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureHasDrain, OperatorSub(Literal(-0.55075073), FeatureHasDrain)), state_node: FeatureOpNextTurnDraw }
generation  13: 14.81s // best: BinaryTreeIndividual { card_node: OperatorSub(FeatureHasDrain, OperatorSub(Literal(-0.55075073), FeatureHasDrain)), state_node: FeatureOpNextTurnDraw }
generation  14: 15.34s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureDefense, FeatureHasCharge)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  15: 16.02s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureDefense, FeatureHasCharge)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  16: 15.67s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), state_node: FeatureOpMaxMana }
generation  17: 17.73s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), state_node: FeatureOpMaxMana }
generation  18: 20.49s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorMax(OperatorMin(FeatureAttack, OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureAttack), FeatureHasGuard)), FeatureHasCharge)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMul(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), FeatureAttack)), FeatureAttack), FeatureHasWard))), state_node: OperatorMin(FeatureOpMaxMana, FeatureOpMaxMana) }
generation  19: 18.64s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorMax(OperatorMin(FeatureAttack, OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureAttack), FeatureHasGuard)), FeatureHasCharge)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMul(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(OperatorMul(OperatorAdd(FeatureHasGuard, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard)), FeatureHasBreakthrough)), FeatureAttack)), FeatureAttack), FeatureHasWard))), state_node: OperatorMin(FeatureOpMaxMana, FeatureOpMaxMana) }
generation  20: 19.06s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), state_node: FeatureOpMaxMana }
generation  21: 17.25s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpMaxMana }
generation  22: 18.68s // best: BinaryTreeIndividual { card_node: OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, FeatureHasDrain), FeatureAttack), FeatureDefense)), state_node: FeatureOpNextTurnDraw }
generation  23: 18.84s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  24: 18.69s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  25: 20.70s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  26: 20.04s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorMul(FeatureHasDrain, FeatureHasWard), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  27: 22.90s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorMul(FeatureHasDrain, FeatureHasWard), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  28: 24.51s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  29: 26.60s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureDefense), FeatureHasWard))))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  30: 25.43s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureDefense, OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard))), FeatureAttack), FeatureDefense))), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  31: 23.04s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  32: 24.73s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorAdd(FeatureAttack, FeatureHasCharge), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  33: 30.26s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMin(Literal(0.31137753), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureHasCharge), FeatureHasWard))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard))), FeatureAttack), FeatureDefense))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureDefense), FeatureHasWard))))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  34: 29.94s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(FeatureHasDrain, FeatureHasBreakthrough), OperatorSub(OperatorMin(FeatureAttack, FeatureAttack), FeatureHasWard))), FeatureAttack), FeatureDefense)), OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMin(Literal(0.31137753), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureHasCharge), FeatureHasWard))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), FeatureHasWard))), FeatureAttack), FeatureDefense))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureDefense), FeatureHasWard))))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  35: 34.30s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureHasBreakthrough, FeatureHasCharge)), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureMeRune) }
generation  36: 32.58s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMin(Literal(0.31137753), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureHasCharge), FeatureHasWard))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), OperatorSub(OperatorMin(FeatureAttack, FeatureAttack), OperatorMax(OperatorMin(FeatureHasBreakthrough, OperatorSub(FeatureAttack, FeatureHasBreakthrough)), FeatureAttack))))), FeatureAttack), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureMeRune) }
generation  37: 36.83s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorMul(FeatureHasDrain, FeatureHasWard), FeatureHasCharge), FeatureHasWard)), OperatorSub(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureDefense), FeatureHasWard)), OperatorSub(OperatorMax(OperatorMin(FeatureHasDrain, FeatureHasBreakthrough), FeatureAttack), FeatureHasGuard))), FeatureAttack), FeatureDefense))), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  38: 36.11s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureDefense, FeatureHasCharge)), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  39: 34.31s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureDefense, FeatureHasCharge)), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  40: 34.18s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMax(FeatureDefense, FeatureHasCharge)), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  41: 30.41s // best: BinaryTreeIndividual { card_node: OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, FeatureDefense), FeatureDefense)), FeatureHasBreakthrough), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  42: 30.09s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(Literal(0.31137753), FeatureAttack))), FeatureHasBreakthrough)), FeatureAttack)), OperatorMin(OperatorMul(OperatorAdd(FeatureDefense, FeatureHasBreakthrough), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), OperatorMax(OperatorSub(OperatorMax(FeatureHasCharge, FeatureHasBreakthrough), FeatureDefense), FeatureAttack)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureAttack), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), OperatorSub(OperatorMin(FeatureAttack, FeatureAttack), OperatorMax(OperatorMin(FeatureHasBreakthrough, OperatorSub(FeatureAttack, FeatureHasBreakthrough)), FeatureAttack))))), FeatureAttack), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  43: 32.44s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorMul(FeatureHasBreakthrough, FeatureHasWard), FeatureHasCharge), FeatureHasWard)), OperatorSub(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), OperatorSub(OperatorMin(FeatureAttack, OperatorMax(FeatureHasGuard, FeatureAttack)), OperatorMax(OperatorMin(FeatureHasBreakthrough, OperatorSub(FeatureAttack, FeatureHasBreakthrough)), FeatureAttack))))), FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMin(Literal(0.31137753), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, FeatureHasCharge), FeatureHasCharge), FeatureHasWard))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasDrain))), FeatureAttack), FeatureDefense))), FeatureHasBreakthrough)), state_node: FeatureOpNextTurnDraw }
generation  44: 38.67s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)) }
generation  45: 41.80s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)) }
generation  46: 46.81s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)) }
generation  47: 50.13s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)) }
generation  48: 55.06s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)) }
generation  49: 61.59s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)) }
generation  50: 57.17s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasGuard))), FeatureDefense)), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)) }
generation  51: 52.59s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasGuard))), FeatureDefense)), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), OperatorSub(OperatorMax(OperatorMin(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack))), FeatureHasBreakthrough)), FeatureAttack)), OperatorMin(OperatorMul(OperatorAdd(FeatureDefense, FeatureHasBreakthrough), FeatureAttack), OperatorSub(FeatureAttack, FeatureDefense))), OperatorMax(FeatureAttack, FeatureAttack)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), FeatureHasWard)), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), OperatorSub(OperatorMin(FeatureAttack, FeatureHasWard), OperatorMax(OperatorMin(FeatureHasBreakthrough, OperatorSub(FeatureAttack, FeatureHasBreakthrough)), FeatureAttack))))), FeatureAttack), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureHasBreakthrough), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack)), FeatureDefense))), FeatureDefense))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)) }
generation  52: 53.63s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(FeatureAttack, FeatureHasCharge), OperatorSub(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureHasCharge, OperatorMin(FeatureAttack, FeatureHasDrain))), FeatureAttack), FeatureDefense))), FeatureHasBreakthrough)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  53: 49.94s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(FeatureAttack, FeatureHasCharge), OperatorSub(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureHasCharge, OperatorMin(FeatureAttack, FeatureHasDrain))), FeatureAttack), FeatureDefense))), FeatureHasBreakthrough)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  54: 45.37s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(FeatureAttack, FeatureHasCharge), OperatorSub(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureHasCharge, OperatorMin(FeatureAttack, FeatureHasDrain))), FeatureAttack), FeatureDefense))), FeatureHasBreakthrough)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  55: 47.85s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(FeatureAttack, FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasGuard))), FeatureDefense)), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasCharge))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw), FeatureOpNextTurnDraw) }
generation  56: 50.84s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense)), OperatorMin(FeatureAttack, FeatureAttack)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  57: 56.62s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasLethal, FeatureAttack), FeatureDefense), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureDefense), FeatureDefense), FeatureHasGuard), FeatureAttack), OperatorSub(OperatorMin(FeatureAttack, FeatureAttack), FeatureHasCharge)))), FeatureAttack), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)), Literal(0.65399885))) }
generation  58: 68.56s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(FeatureAttack, FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasGuard))), FeatureDefense)), OperatorSub(OperatorMax(OperatorMin(FeatureDefense, OperatorMax(OperatorMin(OperatorSub(OperatorMax(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMul(OperatorMax(OperatorMax(OperatorMin(FeatureHasDrain, OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasGuard))), FeatureDefense)), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard))), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasCharge))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw), OperatorAdd(FeatureOpNextTurnDraw, Literal(0.65399885))) }
generation  59: 56.18s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw), FeatureOpNextTurnDraw)) }
generation  60: 49.55s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense)), OperatorMin(FeatureAttack, FeatureAttack)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  61: 48.92s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureHasDrain, OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasGuard))), FeatureDefense)), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)))), OperatorMin(FeatureAttack, FeatureHasWard)), FeatureDefense)), OperatorMin(FeatureAttack, FeatureAttack)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasCharge)), state_node: OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  62: 47.74s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureHasDrain, OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasGuard))), FeatureDefense)), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)))), OperatorMin(FeatureAttack, FeatureHasWard)), FeatureDefense)), OperatorMin(FeatureAttack, FeatureAttack)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasCharge)), state_node: OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  63: 56.25s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(Literal(0.65399885), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  64: 58.12s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureMeHealth), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  65: 73.33s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasWard))))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureMeHealth), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  66: 78.48s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureMeHealth), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  67: 93.23s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasWard))))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureMeHealth), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  68: 81.86s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureMeHealth), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  69: 91.37s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureHasCharge, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasWard))))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(Literal(0.65399885), FeatureMeHealth), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  70: 101.04s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(FeatureAttack, FeatureDefense)), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(OperatorMul(OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasCharge))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureAttack), OperatorMax(OperatorMin(FeatureHasWard, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorSub(FeatureAttack, FeatureHasWard), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough), OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard), FeatureDefense)), OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasBreakthrough)), OperatorSub(OperatorMin(FeatureAttack, OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), OperatorSub(FeatureAttack, FeatureHasWard))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack)), FeatureAttack), FeatureDefense), OperatorMin(FeatureAttack, FeatureHasCharge)), OperatorSub(OperatorMul(FeatureAttack, FeatureHasCharge), OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorAdd(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureAttack), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)))), OperatorMin(Literal(0.31137753), FeatureAttack))), FeatureHasBreakthrough))), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureMeHealth)) }
generation  71: 112.74s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureDefense)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureOpNextTurnDraw, FeatureMeHealth), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  72: 119.41s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(OperatorMax(FeatureMeNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)), FeatureMeHealth), OperatorAdd(Literal(0.65399885), OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw))) }
generation  73: 132.14s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureHasCharge, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasWard))))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureOpNextTurnDraw, FeatureMeHealth), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  74: 122.64s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(OperatorMul(OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasCharge))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureHasBreakthrough), OperatorMax(OperatorMin(FeatureHasWard, FeatureHasWard), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorSub(FeatureAttack, FeatureHasWard), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough), OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard), FeatureDefense)), OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasBreakthrough)), OperatorSub(OperatorMin(FeatureAttack, OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), OperatorSub(FeatureAttack, FeatureHasWard))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack)), FeatureAttack), FeatureDefense), OperatorMin(FeatureAttack, FeatureHasCharge)), OperatorSub(OperatorMul(FeatureAttack, FeatureHasCharge), OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorMin(FeatureAttack, OperatorMax(OperatorSub(OperatorMul(OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasCharge), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard)))))), OperatorMin(Literal(0.31137753), FeatureAttack))), FeatureHasBreakthrough))), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw) }
generation  75: 140.88s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(Literal(0.65399885), Literal(0.65399885)))), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  76: 146.37s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(Literal(0.65399885), Literal(0.65399885)))), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  77: 159.66s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorSub(FeatureAttack, FeatureAttack), OperatorSub(OperatorSub(FeatureAttack, FeatureHasWard), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough), OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard), FeatureDefense)), OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasBreakthrough)), OperatorSub(OperatorMin(FeatureAttack, OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), OperatorSub(FeatureAttack, FeatureHasWard))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack)), FeatureAttack), FeatureDefense), OperatorMin(FeatureAttack, FeatureHasCharge)), OperatorSub(OperatorMul(FeatureAttack, FeatureHasCharge), OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorMin(FeatureAttack, OperatorMax(OperatorSub(OperatorMul(OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasCharge), OperatorSub(OperatorMul(OperatorAdd(FeatureHasDrain, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard)))))), OperatorMin(Literal(0.31137753), FeatureAttack))), FeatureHasBreakthrough))), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(OperatorMax(FeatureMeHealth, FeatureOpNextTurnDraw), FeatureOpNextTurnDraw) }
generation  78: 144.16s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasBreakthrough)), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureAttack)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  79: 156.83s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(Literal(0.65399885), Literal(0.65399885)))), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  80: 147.94s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorSub(OperatorMax(OperatorSub(OperatorMin(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorSub(FeatureAttack, FeatureAttack), OperatorSub(OperatorSub(FeatureAttack, FeatureHasWard), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough), OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard), FeatureDefense)), OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasBreakthrough)), OperatorSub(OperatorMin(FeatureAttack, OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMax(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorSub(OperatorSub(OperatorMax(OperatorAdd(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(OperatorMul(OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasCharge))), FeatureAttack), FeatureDefense), OperatorMin(FeatureDefense, FeatureHasCharge)), FeatureHasBreakthrough), OperatorMax(OperatorMin(FeatureHasWard, FeatureHasWard), FeatureDefense)), OperatorMax(OperatorMin(FeatureAttack, FeatureHasWard), OperatorSub(FeatureAttack, FeatureHasWard))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureHasCharge, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), OperatorSub(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasWard))))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorSub(FeatureAttack, FeatureHasBreakthrough), FeatureDefense))), FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasWard))), FeatureAttack)), FeatureAttack), FeatureDefense), OperatorMin(FeatureAttack, FeatureHasCharge)), OperatorSub(OperatorMul(FeatureAttack, FeatureHasCharge), OperatorMax(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorMin(FeatureAttack, OperatorMax(OperatorSub(OperatorMul(OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasCharge), OperatorSub(OperatorMul(OperatorAdd(FeatureHasDrain, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard)))))), OperatorMin(Literal(0.31137753), FeatureAttack))), FeatureHasBreakthrough))), OperatorSub(FeatureAttack, FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureHasBreakthrough)), FeatureHasWard)), state_node: OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(OperatorAdd(FeatureOpNextTurnDraw, FeatureMeHealth), OperatorAdd(Literal(0.65399885), FeatureOpNextTurnDraw))) }
generation  81: 164.65s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(FeatureHasBreakthrough, OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(Literal(0.65399885), Literal(0.65399885)))), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  82: 124.00s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasBreakthrough)), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureAttack)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)) }
generation  83: 112.03s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureAttack), FeatureAttack)), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(FeatureOpCurrentMana, OperatorAdd(OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw)), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  84: 112.74s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), OperatorMax(FeatureDefense, FeatureAttack)))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureAttack), FeatureAttack)), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(FeatureOpCurrentMana, OperatorAdd(OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw)), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  85: 113.98s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.26648283)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
generation  86: 95.15s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.26648283)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
generation  87: 123.69s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), FeatureDefense), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, FeatureHasWard), FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, FeatureHasCharge)), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureAttack)), FeatureHasBreakthrough), OperatorMin(FeatureAttack, FeatureAttack)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)), OperatorAdd(Literal(0.65399885), OperatorAdd(Literal(0.65399885), Literal(0.65399885))))), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))) }
generation  88: 99.80s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.26648283)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
generation  89: 118.16s // best: BinaryTreeIndividual { card_node: OperatorMax(OperatorMin(OperatorSub(OperatorMax(FeatureHasGuard, FeatureAttack), FeatureDefense), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(OperatorMax(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasDrain)), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(FeatureHasWard, FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(FeatureOpRune, OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(Literal(0.65399885), Literal(0.65399885))))), OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(Literal(0.65399885), Literal(0.65399885)))), OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw))), OperatorAdd(FeatureOpNextTurnDraw, FeatureOpDecksize)), OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.65399885)), FeatureOpNextTurnDraw)), FeatureMeHealth)) }
generation  90: 102.31s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)), FeatureOpNextTurnDraw) }
generation  91: 108.68s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.26648283)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
generation  92: 118.17s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, FeatureHasWard), FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, FeatureHasWard)), FeatureDefense)), FeatureHasBreakthrough), OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureDefense, OperatorMax(OperatorSub(OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack), FeatureHasBreakthrough), FeatureAttack)))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack)), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureAttack)), FeatureHasBreakthrough), OperatorMin(FeatureAttack, FeatureAttack)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(OperatorAdd(Literal(0.65399885), OperatorAdd(OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.65399885)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(Literal(0.65399885), FeatureMeHealth))), FeatureOpNextTurnDraw)), FeatureOpNextTurnDraw), OperatorAdd(Literal(0.65399885), FeatureMeMaxMana)) }
generation  93: 127.96s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.26648283)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
generation  94: 130.97s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.26648283)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
generation  95: 146.17s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.26648283)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
generation  96: 149.54s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(OperatorSub(FeatureAttack, FeatureHasWard), FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, FeatureHasWard)), FeatureDefense)), FeatureHasBreakthrough), OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(FeatureHasBreakthrough, FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureDefense, OperatorMax(OperatorSub(OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack), FeatureHasBreakthrough), FeatureAttack)))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack)), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureAttack)), FeatureHasBreakthrough), OperatorMin(FeatureAttack, FeatureAttack)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(OperatorAdd(Literal(0.65399885), OperatorAdd(OperatorAdd(OperatorAdd(Literal(0.26648283), Literal(0.65399885)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(Literal(0.65399885), FeatureMeHealth))), FeatureOpNextTurnDraw)), FeatureOpNextTurnDraw), OperatorAdd(Literal(0.65399885), FeatureMeMaxMana)) }
generation  97: 169.46s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, FeatureHasBreakthrough)), OperatorSub(OperatorMin(FeatureAttack, OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), OperatorSub(OperatorMul(OperatorMax(OperatorMul(OperatorMax(OperatorMin(FeatureHasDrain, FeatureAttack), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureDefense), OperatorSub(FeatureAttack, FeatureHasWard)), FeatureHasCharge), FeatureHasCharge))), FeatureHasBreakthrough)))))), OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack)), FeatureAttack), FeatureDefense))), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureAttack), FeatureAttack)), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(OperatorAdd(Literal(0.65399885), OperatorAdd(FeatureMeHealth, FeatureOpNextTurnDraw)), FeatureOpNextTurnDraw), OperatorAdd(OperatorAdd(FeatureOpCurrentMana, FeatureOpNextTurnDraw), FeatureMeMaxMana)) }
generation  98: 208.18s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.26648283)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
generation  99: 233.79s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, FeatureHasWard)), FeatureDefense)), FeatureHasBreakthrough), OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(FeatureDefense, OperatorMax(OperatorSub(OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack), FeatureHasBreakthrough), FeatureAttack)))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack)), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureAttack)), FeatureHasBreakthrough), OperatorMin(FeatureAttack, FeatureDefense)), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, OperatorMax(FeatureAttack, FeatureAttack))), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense)), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(Literal(0.26648283), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
generation 100: 217.13s // best: BinaryTreeIndividual { card_node: OperatorMax(FeatureHasCharge, OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(Literal(0.31137753), OperatorSub(FeatureAttack, FeatureHasWard)), OperatorMin(OperatorMul(OperatorMul(OperatorAdd(OperatorSub(OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMax(FeatureAttack, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureHasBreakthrough, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge)))), OperatorSub(OperatorMax(OperatorMin(FeatureAttack, OperatorMax(OperatorMin(OperatorMin(FeatureAttack, OperatorMin(FeatureAttack, OperatorSub(OperatorMul(FeatureHasGuard, OperatorSub(OperatorMax(FeatureDefense, FeatureAttack), FeatureHasBreakthrough)), FeatureAttack))), OperatorMin(FeatureAttack, FeatureHasWard)), OperatorSub(OperatorMul(OperatorMax(FeatureAttack, FeatureAttack), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense), FeatureHasBreakthrough)), OperatorSub(FeatureAttack, FeatureHasCharge))))), FeatureAttack))), FeatureHasBreakthrough), OperatorSub(OperatorMul(OperatorAdd(FeatureHasBreakthrough, OperatorMul(FeatureAttack, FeatureHasCharge)), FeatureHasCharge), FeatureHasWard))), FeatureAttack), FeatureDefense)), FeatureDefense))), FeatureDefense)), FeatureHasBreakthrough), FeatureHasCharge), FeatureAttack), FeatureAttack), OperatorSub(OperatorMax(FeatureAttack, FeatureAttack), FeatureDefense))), FeatureHasWard)), FeatureHasBreakthrough)), state_node: OperatorAdd(OperatorAdd(FeatureMeHealth, OperatorAdd(OperatorAdd(Literal(0.65399885), Literal(0.26648283)), OperatorAdd(FeatureOpNextTurnDraw, OperatorAdd(FeatureOpNextTurnDraw, FeatureOpNextTurnDraw)))), Literal(0.6633656)) }
------ 61.00% 67.00% 39.00% 52.00% 36.00% 45.00% 35.00% 32.00% 58.00% 66.00% 60.00% 65.00% 32.00% 45.00% 51.00% 48.00% 47.00% 61.00% 52.00% 68.00% 62.00% 66.00% 67.00% 70.00% 67.00% 56.00% 59.00% 57.00% 60.00% 55.00% 56.00% 59.00% 62.00% 67.00% 68.00% 58.00% 58.00% 68.00% 60.00% 51.00% 66.00% 63.00% 60.00% 62.00% 57.00% 57.00% 62.00% 61.00% 61.00% 60.00% 63.00% 45.00% 59.00% 50.00% 52.00% 53.00% 58.00% 58.00% 56.00% 43.00% 54.00% 59.00% 65.00% 57.00% 69.00% 65.00% 60.00% 68.00% 61.00% 57.00% 76.00% 64.00% 51.00% 54.00% 60.00% 61.00% 61.00% 61.00% 66.00% 59.00% 67.00% 52.00% 69.00% 58.00% 58.00% 60.00% 59.00% 66.00% 63.00% 65.00% 68.00% 56.00% 55.00% 68.00% 58.00% 59.00% 57.00% 66.00% 57.00% 58.39%
59.00% ------ 61.00% 36.00% 62.00% 38.00% 47.00% 36.00% 45.00% 66.00% 60.00% 64.00% 63.00% 40.00% 33.00% 39.00% 41.00% 50.00% 36.00% 65.00% 63.00% 68.00% 66.00% 61.00% 70.00% 62.00% 64.00% 68.00% 68.00% 61.00% 69.00% 57.00% 61.00% 66.00% 63.00% 59.00% 58.00% 61.00% 70.00% 66.00% 62.00% 59.00% 58.00% 63.00% 55.00% 54.00% 62.00% 53.00% 62.00% 59.00% 68.00% 58.00% 54.00% 48.00% 62.00% 64.00% 58.00% 62.00% 54.00% 63.00% 58.00% 59.00% 59.00% 56.00% 62.00% 63.00% 70.00% 57.00% 64.00% 65.00% 60.00% 65.00% 72.00% 61.00% 66.00% 59.00% 54.00% 61.00% 60.00% 65.00% 63.00% 68.00% 61.00% 63.00% 59.00% 58.00% 59.00% 49.00% 64.00% 60.00% 62.00% 66.00% 66.00% 59.00% 61.00% 63.00% 62.00% 71.00% 63.00% 61.00% 59.33%
63.00% 67.00% ------ 38.00% 66.00% 43.00% 38.00% 41.00% 34.00% 57.00% 58.00% 62.00% 61.00% 29.00% 28.00% 40.00% 49.00% 46.00% 48.00% 69.00% 62.00% 66.00% 75.00% 60.00% 65.00% 55.00% 59.00% 68.00% 55.00% 61.00% 55.00% 62.00% 52.00% 64.00% 66.00% 60.00% 60.00% 50.00% 57.00% 66.00% 64.00% 66.00% 59.00% 53.00% 64.00% 44.00% 58.00% 52.00% 53.00% 64.00% 63.00% 55.00% 56.00% 45.00% 50.00% 59.00% 58.00% 57.00% 73.00% 50.00% 57.00% 49.00% 67.00% 59.00% 58.00% 68.00% 57.00% 64.00% 61.00% 52.00% 63.00% 52.00% 61.00% 55.00% 61.00% 61.00% 62.00% 63.00% 52.00% 60.00% 60.00% 69.00% 60.00% 51.00% 57.00% 56.00% 49.00% 68.00% 70.00% 68.00% 55.00% 59.00% 59.00% 63.00% 71.00% 63.00% 56.00% 56.00% 58.00% 54.00% 57.39%
67.00% 81.00% 74.00% ------ 55.00% 49.00% 41.00% 38.00% 38.00% 70.00% 70.00% 65.00% 72.00% 42.00% 43.00% 48.00% 42.00% 42.00% 39.00% 96.00% 98.00% 89.00% 88.00% 91.00% 92.00% 90.00% 96.00% 93.00% 90.00% 91.00% 95.00% 96.00% 90.00% 95.00% 96.00% 89.00% 90.00% 96.00% 92.00% 90.00% 94.00% 92.00% 92.00% 95.00% 92.00% 93.00% 90.00% 93.00% 93.00% 96.00% 92.00% 92.00% 91.00% 84.00% 90.00% 91.00% 95.00% 91.00% 94.00% 91.00% 89.00% 91.00% 95.00% 93.00% 91.00% 91.00% 90.00% 96.00% 86.00% 92.00% 92.00% 93.00% 90.00% 88.00% 89.00% 95.00% 94.00% 93.00% 91.00% 89.00% 89.00% 87.00% 90.00% 90.00% 90.00% 91.00% 89.00% 94.00% 76.00% 94.00% 88.00% 92.00% 91.00% 91.00% 90.00% 93.00% 89.00% 86.00% 92.00% 93.00% 84.68%
63.00% 66.00% 67.00% 64.00% ------ 60.00% 55.00% 54.00% 55.00% 68.00% 69.00% 69.00% 70.00% 40.00% 58.00% 67.00% 61.00% 57.00% 59.00% 76.00% 78.00% 75.00% 74.00% 81.00% 67.00% 65.00% 73.00% 72.00% 72.00% 74.00% 77.00% 71.00% 71.00% 72.00% 71.00% 66.00% 64.00% 76.00% 73.00% 72.00% 79.00% 64.00% 72.00% 64.00% 68.00% 73.00% 72.00% 65.00% 72.00% 69.00% 75.00% 63.00% 69.00% 65.00% 67.00% 72.00% 72.00% 69.00% 66.00% 67.00% 65.00% 74.00% 67.00% 73.00% 73.00% 73.00% 75.00% 72.00% 75.00% 66.00% 70.00% 74.00% 69.00% 65.00% 66.00% 73.00% 71.00% 79.00% 76.00% 68.00% 68.00% 66.00% 63.00% 57.00% 74.00% 70.00% 71.00% 65.00% 77.00% 74.00% 70.00% 71.00% 75.00% 65.00% 69.00% 74.00% 63.00% 71.00% 69.00% 75.00% 68.85%
72.00% 69.00% 69.00% 79.00% 47.00% ------ 62.00% 52.00% 53.00% 69.00% 69.00% 65.00% 64.00% 58.00% 64.00% 59.00% 52.00% 56.00% 55.00% 92.00% 96.00% 91.00% 80.00% 91.00% 88.00% 89.00% 86.00% 95.00% 85.00% 85.00% 87.00% 89.00% 89.00% 84.00% 87.00% 88.00% 86.00% 85.00% 91.00% 92.00% 85.00% 89.00% 86.00% 82.00% 87.00% 88.00% 85.00% 87.00% 92.00% 90.00% 86.00% 84.00% 91.00% 86.00% 83.00% 90.00% 87.00% 90.00% 86.00% 89.00% 81.00% 87.00% 90.00% 82.00% 90.00% 95.00% 87.00% 78.00% 87.00% 90.00% 84.00% 88.00% 85.00% 86.00% 87.00% 85.00% 92.00% 87.00% 89.00% 84.00% 86.00% 88.00% 85.00% 89.00% 89.00% 88.00% 81.00% 82.00% 71.00% 89.00% 85.00% 89.00% 89.00% 85.00% 83.00% 90.00% 89.00% 84.00% 82.00% 83.00% 82.36%
70.00% 72.00% 76.00% 74.00% 56.00% 57.00% ------ 45.00% 54.00% 71.00% 69.00% 69.00% 70.00% 53.00% 64.00% 58.00% 57.00% 48.00% 49.00% 93.00% 93.00% 93.00% 88.00% 87.00% 88.00% 86.00% 83.00% 88.00% 85.00% 90.00% 88.00% 85.00% 86.00% 88.00% 91.00% 90.00% 89.00% 93.00% 89.00% 79.00% 85.00% 80.00% 84.00% 87.00% 88.00% 79.00% 89.00% 90.00% 90.00% 82.00% 88.00% 83.00% 92.00% 81.00% 89.00% 86.00% 88.00% 89.00% 84.00% 87.00% 91.00% 85.00% 91.00% 90.00% 91.00% 88.00% 89.00% 85.00% 92.00% 91.00% 89.00% 81.00% 84.00% 86.00% 83.00% 88.00% 90.00% 88.00% 87.00% 83.00% 84.00% 86.00% 81.00% 90.00% 80.00% 87.00% 82.00% 87.00% 76.00% 84.00% 89.00% 83.00% 91.00% 95.00% 90.00% 81.00% 88.00% 83.00% 84.00% 78.00% 82.18%
81.00% 83.00% 68.00% 65.00% 64.00% 48.00% 54.00% ------ 58.00% 67.00% 72.00% 75.00% 57.00% 61.00% 58.00% 50.00% 60.00% 44.00% 45.00% 91.00% 98.00% 93.00% 91.00% 83.00% 87.00% 90.00% 91.00% 88.00% 94.00% 88.00% 93.00% 87.00% 90.00% 87.00% 89.00% 94.00% 86.00% 88.00% 90.00% 87.00% 89.00% 91.00% 91.00% 86.00% 89.00% 92.00% 85.00% 87.00% 88.00% 86.00% 94.00% 85.00% 86.00% 86.00% 92.00% 91.00% 92.00% 91.00% 89.00% 91.00% 88.00% 85.00% 88.00% 93.00% 90.00% 89.00% 89.00% 84.00% 92.00% 88.00% 92.00% 87.00% 84.00% 89.00% 88.00% 91.00% 87.00% 89.00% 89.00% 84.00% 86.00% 84.00% 82.00% 90.00% 90.00% 89.00% 84.00% 86.00% 79.00% 88.00% 83.00% 84.00% 94.00% 86.00% 89.00% 92.00% 88.00% 83.00% 87.00% 91.00% 83.61%
70.00% 85.00% 80.00% 69.00% 76.00% 57.00% 56.00% 56.00% ------ 75.00% 64.00% 70.00% 69.00% 59.00% 66.00% 61.00% 64.00% 52.00% 52.00% 92.00% 98.00% 88.00% 89.00% 90.00% 93.00% 91.00% 88.00% 88.00% 91.00% 89.00% 90.00% 90.00% 95.00% 91.00% 93.00% 96.00% 89.00% 91.00% 91.00% 96.00% 88.00% 92.00% 90.00% 90.00% 85.00% 90.00% 93.00% 89.00% 89.00% 88.00% 93.00% 85.00% 93.00% 87.00% 90.00% 88.00% 85.00% 87.00% 90.00% 90.00% 90.00% 87.00% 89.00% 88.00% 90.00% 88.00% 95.00% 94.00% 91.00% 87.00% 85.00% 92.00% 90.00% 94.00% 92.00% 92.00% 95.00% 92.00% 92.00% 86.00% 89.00% 86.00% 89.00% 84.00% 88.00% 89.00% 91.00% 88.00% 79.00% 89.00% 91.00% 92.00% 89.00% 87.00% 92.00% 91.00% 92.00% 84.00% 88.00% 90.00% 85.44%
47.00% 57.00% 57.00% 51.00% 39.00% 43.00% 43.00% 39.00% 43.00% ------ 63.00% 54.00% 58.00% 44.00% 41.00% 39.00% 49.00% 36.00% 40.00% 80.00% 87.00% 70.00% 67.00% 65.00% 71.00% 67.00% 69.00% 66.00% 62.00% 73.00% 66.00% 72.00% 65.00% 63.00% 66.00% 69.00% 70.00% 66.00% 69.00% 68.00% 72.00% 65.00% 78.00% 68.00% 73.00% 68.00% 66.00% 61.00% 66.00% 65.00% 72.00% 66.00% 71.00% 67.00% 60.00% 70.00% 63.00% 60.00% 73.00% 65.00% 62.00% 65.00% 72.00% 74.00% 60.00% 73.00% 65.00% 65.00% 59.00% 63.00% 71.00% 66.00% 66.00% 63.00% 63.00% 73.00% 71.00% 66.00% 70.00% 67.00% 64.00% 65.00% 72.00% 64.00% 70.00% 69.00% 65.00% 71.00% 74.00% 68.00% 56.00% 60.00% 57.00% 69.00% 65.00% 67.00% 64.00% 62.00% 73.00% 56.00% 63.52%
50.00% 55.00% 54.00% 48.00% 34.00% 44.00% 47.00% 52.00% 43.00% 50.00% ------ 57.00% 54.00% 34.00% 35.00% 33.00% 36.00% 38.00% 35.00% 80.00% 74.00% 77.00% 63.00% 63.00% 70.00% 70.00% 65.00% 69.00% 72.00% 67.00% 68.00% 61.00% 72.00% 75.00% 64.00% 69.00% 68.00% 64.00% 60.00% 72.00% 60.00% 60.00% 67.00% 61.00% 69.00% 66.00% 66.00% 67.00% 71.00% 78.00% 65.00% 63.00% 66.00% 58.00% 64.00% 60.00% 66.00% 67.00% 63.00% 68.00% 64.00% 60.00% 78.00% 65.00% 61.00% 69.00% 69.00% 62.00% 67.00% 57.00% 70.00% 75.00% 62.00% 69.00% 65.00% 65.00% 69.00% 74.00% 70.00% 61.00% 71.00% 63.00% 65.00% 61.00% 66.00% 72.00% 62.00% 66.00% 64.00% 67.00% 75.00% 69.00% 65.00% 65.00% 61.00% 70.00% 68.00% 63.00% 68.00% 63.00% 62.66%
58.00% 47.00% 55.00% 37.00% 47.00% 45.00% 42.00% 42.00% 49.00% 59.00% 52.00% ------ 58.00% 39.00% 38.00% 47.00% 48.00% 32.00% 42.00% 74.00% 83.00% 77.00% 64.00% 73.00% 65.00% 78.00% 76.00% 66.00% 62.00% 71.00% 64.00% 75.00% 66.00% 66.00% 64.00% 66.00% 68.00% 66.00% 72.00% 65.00% 63.00% 65.00% 58.00% 67.00% 69.00% 69.00% 65.00% 71.00% 62.00% 62.00% 67.00% 60.00% 62.00% 63.00% 60.00% 67.00% 69.00% 57.00% 65.00% 74.00% 62.00% 61.00% 75.00% 71.00% 69.00% 66.00% 69.00% 61.00% 68.00% 62.00% 63.00% 72.00% 66.00% 65.00% 60.00% 71.00% 67.00% 64.00% 58.00% 66.00% 70.00% 64.00% 61.00% 71.00% 61.00% 69.00% 62.00% 63.00% 68.00% 61.00% 76.00% 71.00% 74.00% 67.00% 67.00% 64.00% 70.00% 63.00% 66.00% 68.00% 63.08%
54.00% 48.00% 54.00% 45.00% 38.00% 39.00% 38.00% 45.00% 45.00% 50.00% 54.00% 50.00% ------ 38.00% 43.00% 43.00% 36.00% 36.00% 43.00% 78.00% 82.00% 70.00% 62.00% 73.00% 62.00% 68.00% 65.00% 64.00% 67.00% 70.00% 74.00% 67.00% 66.00% 65.00% 73.00% 70.00% 66.00% 67.00% 64.00% 70.00% 72.00% 69.00% 65.00% 57.00% 71.00% 64.00% 65.00% 64.00% 62.00% 67.00% 61.00% 60.00% 70.00% 65.00% 62.00% 71.00% 65.00% 67.00% 70.00% 62.00% 59.00% 65.00% 61.00% 71.00% 64.00% 66.00% 62.00% 72.00% 68.00% 75.00% 63.00% 67.00% 72.00% 64.00% 64.00% 64.00% 70.00% 71.00% 62.00% 71.00% 58.00% 63.00% 61.00% 69.00% 72.00% 71.00% 62.00% 64.00% 61.00% 68.00% 73.00% 66.00% 61.00% 64.00% 61.00% 71.00% 69.00% 65.00% 62.00% 67.00% 62.53%
68.00% 77.00% 80.00% 69.00% 60.00% 62.00% 44.00% 42.00% 57.00% 73.00% 75.00% 74.00% 79.00% ------ 58.00% 54.00% 50.00% 49.00% 52.00% 84.00% 93.00% 91.00% 88.00% 93.00% 89.00% 94.00% 93.00% 90.00% 87.00% 86.00% 93.00% 86.00% 91.00% 90.00% 86.00% 92.00% 93.00% 89.00% 89.00% 90.00% 84.00% 92.00% 91.00% 88.00% 89.00% 83.00% 89.00% 90.00% 83.00% 90.00% 89.00% 85.00% 90.00% 90.00% 88.00% 92.00% 91.00% 93.00% 94.00% 89.00% 91.00% 87.00% 94.00% 94.00% 89.00% 89.00% 90.00% 91.00% 91.00% 88.00% 89.00% 89.00% 91.00% 93.00% 87.00% 85.00% 91.00% 92.00% 88.00% 92.00% 87.00% 78.00% 86.00% 88.00% 90.00% 92.00% 90.00% 91.00% 82.00% 96.00% 94.00% 90.00% 88.00% 88.00% 90.00% 90.00% 91.00% 89.00% 88.00% 81.00% 84.44%
75.00% 76.00% 79.00% 67.00% 65.00% 49.00% 51.00% 53.00% 52.00% 72.00% 71.00% 71.00% 76.00% 52.00% ------ 58.00% 54.00% 41.00% 42.00% 90.00% 95.00% 95.00% 89.00% 88.00% 93.00% 88.00% 91.00% 91.00% 91.00% 88.00% 94.00% 91.00% 86.00% 87.00% 90.00% 90.00% 82.00% 92.00% 93.00% 92.00% 94.00% 92.00% 89.00% 96.00% 91.00% 85.00% 89.00% 91.00% 93.00% 86.00% 90.00% 86.00% 88.00% 89.00% 86.00% 86.00% 90.00% 87.00% 83.00% 91.00% 91.00% 92.00% 90.00% 86.00% 85.00% 84.00% 85.00% 90.00% 89.00% 90.00% 89.00% 91.00% 86.00% 91.00% 86.00% 86.00% 85.00% 91.00% 93.00% 91.00% 88.00% 90.00% 88.00% 92.00% 89.00% 87.00% 88.00% 92.00% 76.00% 91.00% 89.00% 88.00% 86.00% 88.00% 88.00% 85.00% 91.00% 90.00% 92.00% 91.00% 84.06%
75.00% 62.00% 71.00% 75.00% 54.00% 53.00% 50.00% 46.00% 59.00% 68.00% 72.00% 71.00% 68.00% 49.00% 52.00% ------ 53.00% 44.00% 54.00% 88.00% 93.00% 93.00% 92.00% 87.00% 90.00% 89.00% 86.00% 80.00% 89.00% 87.00% 86.00% 88.00% 93.00% 85.00% 94.00% 88.00% 86.00% 89.00% 89.00% 88.00% 89.00% 93.00% 87.00% 87.00% 91.00% 93.00% 88.00% 89.00% 85.00% 95.00% 87.00% 92.00% 85.00% 85.00% 91.00% 93.00% 92.00% 87.00% 84.00% 81.00% 86.00% 87.00% 85.00% 87.00% 93.00% 88.00% 93.00% 89.00% 90.00% 84.00% 81.00% 89.00% 89.00% 91.00% 89.00% 90.00% 85.00% 88.00% 88.00% 87.00% 88.00% 87.00% 88.00% 83.00% 91.00% 83.00% 87.00% 88.00% 88.00% 89.00% 89.00% 89.00% 92.00% 88.00% 85.00% 88.00% 79.00% 87.00% 86.00% 85.00% 82.92%
61.00% 71.00% 71.00% 65.00% 52.00% 43.00% 54.00% 55.00% 58.00% 68.00% 65.00% 72.00% 72.00% 59.00% 53.00% 53.00% ------ 43.00% 41.00% 92.00% 93.00% 92.00% 87.00% 88.00% 84.00% 88.00% 91.00% 89.00% 92.00% 91.00% 88.00% 90.00% 90.00% 89.00% 90.00% 88.00% 86.00% 89.00% 90.00% 87.00% 86.00% 92.00% 88.00% 82.00% 88.00% 84.00% 89.00% 85.00% 88.00% 90.00% 87.00% 92.00% 87.00% 87.00% 81.00% 83.00% 84.00% 84.00% 89.00% 83.00% 81.00% 84.00% 94.00% 88.00% 92.00% 86.00% 88.00% 88.00% 87.00% 89.00% 83.00% 84.00% 88.00% 91.00% 88.00% 85.00% 88.00% 87.00% 85.00% 78.00% 86.00% 93.00% 89.00% 90.00% 90.00% 81.00% 86.00% 93.00% 78.00% 86.00% 92.00% 91.00% 88.00% 90.00% 84.00% 89.00% 85.00% 94.00% 83.00% 89.00% 82.32%
68.00% 68.00% 68.00% 84.00% 52.00% 66.00% 56.00% 67.00% 57.00% 70.00% 76.00% 70.00% 70.00% 71.00% 70.00% 72.00% 71.00% ------ 43.00% 94.00% 88.00% 90.00% 89.00% 84.00% 86.00% 83.00% 85.00% 82.00% 92.00% 82.00% 86.00% 87.00% 91.00% 85.00% 87.00% 87.00% 79.00% 86.00% 88.00% 91.00% 81.00% 87.00% 88.00% 87.00% 84.00% 86.00% 81.00% 82.00% 92.00% 85.00% 88.00% 86.00% 86.00% 88.00% 93.00% 86.00% 92.00% 81.00% 91.00% 84.00% 89.00% 80.00% 85.00% 86.00% 86.00% 90.00% 83.00% 90.00% 88.00% 89.00% 86.00% 83.00% 89.00% 93.00% 91.00% 90.00% 92.00% 84.00% 84.00% 91.00% 87.00% 86.00% 86.00% 83.00% 87.00% 87.00% 82.00% 85.00% 82.00% 85.00% 84.00% 87.00% 85.00% 84.00% 85.00% 83.00% 85.00% 86.00% 82.00% 89.00% 82.81%
74.00% 70.00% 70.00% 74.00% 56.00% 66.00% 54.00% 64.00% 62.00% 76.00% 68.00% 72.00% 76.00% 66.00% 62.00% 63.00% 63.00% 56.00% ------ 91.00% 93.00% 93.00% 84.00% 93.00% 86.00% 88.00% 86.00% 91.00% 84.00% 85.00% 85.00% 83.00% 85.00% 88.00% 86.00% 83.00% 86.00% 88.00% 85.00% 89.00% 86.00% 86.00% 92.00% 91.00% 83.00% 84.00% 85.00% 88.00% 86.00% 89.00% 86.00% 87.00% 86.00% 81.00% 82.00% 88.00% 86.00% 88.00% 84.00% 83.00% 82.00% 88.00% 92.00% 90.00% 89.00% 82.00% 86.00% 86.00% 89.00% 88.00% 85.00% 83.00% 88.00% 80.00% 84.00% 88.00% 83.00% 87.00% 90.00% 85.00% 87.00% 81.00% 81.00% 90.00% 86.00% 88.00% 85.00% 93.00% 84.00% 88.00% 84.00% 86.00% 83.00% 91.00% 89.00% 88.00% 89.00% 88.00% 87.00% 79.00% 82.80%
33.00% 34.00% 41.00%  7.00% 30.00% 12.00% 10.00% 13.00%  8.00% 24.00% 25.00% 37.00% 19.00% 13.00%  8.00% 15.00% 13.00% 15.00% 16.00% ------ 65.00% 49.00% 50.00% 46.00% 47.00% 42.00% 46.00% 44.00% 38.00% 46.00% 34.00% 38.00% 44.00% 43.00% 49.00% 45.00% 40.00% 33.00% 36.00% 45.00% 40.00% 35.00% 44.00% 43.00% 36.00% 38.00% 41.00% 46.00% 40.00% 45.00% 45.00% 30.00% 37.00% 39.00% 32.00% 41.00% 33.00% 41.00% 38.00% 39.00% 44.00% 32.00% 30.00% 42.00% 40.00% 32.00% 43.00% 43.00% 43.00% 42.00% 43.00% 34.00% 41.00% 41.00% 42.00% 37.00% 33.00% 31.00% 49.00% 41.00% 39.00% 40.00% 40.00% 40.00% 39.00% 43.00% 35.00% 33.00% 34.00% 44.00% 42.00% 41.00% 42.00% 36.00% 33.00% 35.00% 39.00% 40.00% 39.00% 30.00% 36.19%
45.00% 33.00% 41.00%  6.00% 25.00% 13.00%  9.00%  8.00%  6.00% 17.00% 26.00% 31.00% 28.00%  9.00% 14.00%  5.00%  8.00% 11.00% 10.00% 35.00% ------ 51.00% 33.00% 35.00% 40.00% 25.00% 28.00% 29.00% 27.00% 28.00% 35.00% 30.00% 33.00% 32.00% 29.00% 33.00% 23.00% 24.00% 35.00% 24.00% 34.00% 35.00% 34.00% 35.00% 32.00% 36.00% 35.00% 31.00% 37.00% 31.00% 31.00% 32.00% 27.00% 30.00% 30.00% 32.00% 34.00% 24.00% 35.00% 29.00% 24.00% 31.00% 34.00% 25.00% 31.00% 35.00% 28.00% 32.00% 34.00% 28.00% 32.00% 33.00% 22.00% 27.00% 25.00% 29.00% 23.00% 32.00% 22.00% 35.00% 31.00% 33.00% 32.00% 30.00% 34.00% 19.00% 29.00% 29.00% 27.00% 25.00% 30.00% 24.00% 26.00% 34.00% 30.00% 39.00% 26.00% 28.00% 25.00% 34.00% 28.13%
38.00% 35.00% 42.00% 12.00% 32.00% 17.00% 10.00%  8.00% 12.00% 26.00% 26.00% 30.00% 29.00%  8.00% 14.00% 10.00% 15.00% 12.00% 13.00% 54.00% 55.00% ------ 52.00% 36.00% 50.00% 37.00% 44.00% 46.00% 49.00% 39.00% 45.00% 33.00% 37.00% 48.00% 46.00% 47.00% 38.00% 45.00% 48.00% 54.00% 52.00% 36.00% 46.00% 46.00% 48.00% 43.00% 36.00% 51.00% 43.00% 48.00% 46.00% 37.00% 34.00% 41.00% 42.00% 52.00% 40.00% 33.00% 40.00% 38.00% 47.00% 49.00% 49.00% 45.00% 27.00% 45.00% 41.00% 42.00% 30.00% 45.00% 37.00% 40.00% 46.00% 46.00% 39.00% 47.00% 37.00% 41.00% 40.00% 44.00% 46.00% 49.00% 38.00% 39.00% 44.00% 49.00% 47.00% 48.00% 43.00% 44.00% 40.00% 34.00% 42.00% 34.00% 37.00% 41.00% 41.00% 38.00% 39.00% 38.00% 38.51%
49.00% 39.00% 40.00% 17.00% 36.00% 19.00% 16.00% 14.00% 19.00% 46.00% 42.00% 48.00% 42.00% 12.00% 10.00% 24.00% 20.00% 21.00% 25.00% 57.00% 67.00% 59.00% ------ 60.00% 65.00% 50.00% 58.00% 56.00% 52.00% 67.00% 51.00% 61.00% 57.00% 57.00% 60.00% 64.00% 55.00% 51.00% 62.00% 56.00% 59.00% 55.00% 57.00% 51.00% 49.00% 49.00% 55.00% 49.00% 54.00% 53.00% 48.00% 54.00% 43.00% 42.00% 46.00% 41.00% 50.00% 47.00% 54.00% 55.00% 42.00% 47.00% 60.00% 46.00% 59.00% 53.00% 53.00% 56.00% 58.00% 49.00% 53.00% 57.00% 57.00% 43.00% 48.00% 57.00% 51.00% 57.00% 46.00% 48.00% 50.00% 57.00% 53.00% 56.00% 57.00% 60.00% 56.00% 56.00% 53.00% 55.00% 48.00% 60.00% 59.00% 54.00% 51.00% 63.00% 62.00% 54.00% 50.00% 60.00% 49.18%
33.00% 41.00% 48.00% 14.00% 32.00% 24.00% 19.00% 16.00% 17.00% 45.00% 41.00% 45.00% 44.00% 13.00% 17.00% 24.00% 23.00% 11.00% 29.00% 58.00% 74.00% 63.00% 54.00% ------ 54.00% 48.00% 48.00% 53.00% 53.00% 56.00% 58.00% 65.00% 62.00% 57.00% 62.00% 63.00% 60.00% 57.00% 58.00% 61.00% 49.00% 57.00% 59.00% 47.00% 44.00% 52.00% 54.00% 58.00% 50.00% 45.00% 54.00% 50.00% 48.00% 51.00% 47.00% 55.00% 52.00% 49.00% 40.00% 49.00% 48.00% 47.00% 59.00% 48.00% 57.00% 52.00% 61.00% 56.00% 57.00% 54.00% 56.00% 62.00% 57.00% 47.00% 48.00% 49.00% 49.00% 60.00% 55.00% 54.00% 57.00% 49.00% 45.00% 58.00% 51.00% 48.00% 57.00% 61.00% 45.00% 47.00% 49.00% 53.00% 39.00% 51.00% 56.00% 52.00% 51.00% 56.00% 55.00% 52.00% 48.67%
43.00% 35.00% 50.00% 15.00% 31.00% 19.00% 14.00% 12.00% 13.00% 41.00% 43.00% 46.00% 41.00% 15.00% 17.00% 17.00% 21.00% 23.00% 24.00% 63.00% 71.00% 73.00% 53.00% 56.00% ------ 58.00% 64.00% 61.00% 59.00% 52.00% 52.00% 54.00% 49.00% 58.00% 65.00% 58.00% 55.00% 58.00% 53.00% 63.00% 52.00% 51.00% 60.00% 59.00% 58.00% 45.00% 55.00% 50.00% 48.00% 59.00% 48.00% 43.00% 47.00% 37.00% 47.00% 52.00% 58.00% 47.00% 49.00% 51.00% 44.00% 55.00% 48.00% 54.00% 54.00% 53.00% 51.00% 58.00% 54.00% 58.00% 54.00% 54.00% 54.00% 57.00% 53.00% 55.00% 60.00% 50.00% 66.00% 48.00% 56.00% 51.00% 54.00% 55.00% 58.00% 52.00% 47.00% 44.00% 49.00% 55.00% 60.00% 54.00% 47.00% 50.00% 60.00% 50.00% 48.00% 58.00% 50.00% 49.00% 48.87%
46.00% 51.00% 43.00% 11.00% 38.00% 11.00% 15.00% 15.00% 14.00% 33.00% 44.00% 42.00% 41.00% 17.00% 10.00% 17.00% 18.00% 15.00% 15.00% 58.00% 70.00% 56.00% 52.00% 52.00% 46.00% ------ 54.00% 57.00% 50.00% 52.00% 53.00% 58.00% 50.00% 52.00% 45.00% 55.00% 57.00% 65.00% 46.00% 50.00% 57.00% 47.00% 50.00% 57.00% 52.00% 53.00% 49.00% 51.00% 58.00% 55.00% 52.00% 39.00% 51.00% 49.00% 46.00% 42.00% 58.00% 57.00% 54.00% 51.00% 49.00% 49.00% 52.00% 47.00% 63.00% 56.00% 52.00% 55.00% 47.00% 54.00% 46.00% 60.00% 52.00% 43.00% 51.00% 56.00% 54.00% 51.00% 47.00% 57.00% 51.00% 56.00% 48.00% 48.00% 58.00% 58.00% 38.00% 58.00% 36.00% 51.00% 49.00% 54.00% 48.00% 48.00% 55.00% 52.00% 49.00% 52.00% 51.00% 57.00% 47.07%
49.00% 50.00% 54.00%  9.00% 41.00% 20.00% 19.00% 13.00% 15.00% 40.00% 39.00% 44.00% 44.00% 12.00% 12.00% 12.00% 15.00% 25.00% 20.00% 67.00% 74.00% 60.00% 59.00% 57.00% 54.00% 57.00% ------ 43.00% 50.00% 43.00% 55.00% 45.00% 51.00% 45.00% 49.00% 51.00% 43.00% 56.00% 55.00% 54.00% 56.00% 52.00% 53.00% 56.00% 49.00% 56.00% 58.00% 50.00% 53.00% 56.00% 45.00% 45.00% 48.00% 48.00% 52.00% 52.00% 57.00% 52.00% 59.00% 58.00% 47.00% 52.00% 43.00% 51.00% 41.00% 49.00% 56.00% 59.00% 45.00% 55.00% 54.00% 49.00% 55.00% 38.00% 59.00% 55.00% 60.00% 57.00% 55.00% 51.00% 42.00% 54.00% 55.00% 56.00% 48.00% 56.00% 51.00% 46.00% 53.00% 48.00% 55.00% 52.00% 55.00% 55.00% 54.00% 56.00% 47.00% 58.00% 54.00% 47.00% 47.77%
42.00% 47.00% 42.00%  5.00% 46.00% 14.00% 18.00% 15.00% 15.00% 43.00% 39.00% 42.00% 39.00% 16.00%  9.00% 13.00% 26.00% 16.00% 15.00% 65.00% 69.00% 59.00% 57.00% 49.00% 55.00% 49.00% 62.00% ------ 51.00% 55.00% 52.00% 43.00% 59.00% 61.00% 54.00% 70.00% 51.00% 55.00% 55.00% 59.00% 56.00% 56.00% 60.00% 48.00% 51.00% 49.00% 59.00% 49.00% 58.00% 54.00% 52.00% 50.00% 53.00% 40.00% 45.00% 57.00% 54.00% 57.00% 49.00% 53.00% 51.00% 49.00% 62.00% 51.00% 42.00% 53.00% 54.00% 49.00% 48.00% 48.00% 48.00% 60.00% 49.00% 47.00% 45.00% 63.00% 58.00% 52.00% 48.00% 47.00% 49.00% 51.00% 53.00% 48.00% 54.00% 52.00% 46.00% 56.00% 53.00% 53.00% 42.00% 53.00% 51.00% 54.00% 57.00% 55.00% 55.00% 45.00% 55.00% 49.00% 47.85%
46.00% 53.00% 48.00% 14.00% 28.00% 15.00% 14.00% 12.00% 13.00% 39.00% 43.00% 40.00% 37.00% 19.00% 19.00% 16.00% 17.00% 26.00% 24.00% 69.00% 67.00% 62.00% 54.00% 59.00% 61.00% 54.00% 49.00% 52.00% ------ 53.00% 58.00% 51.00% 47.00% 56.00% 57.00% 57.00% 55.00% 57.00% 53.00% 49.00% 57.00% 53.00% 52.00% 45.00% 44.00% 51.00% 50.00% 43.00% 51.00% 54.00% 47.00% 51.00% 49.00% 49.00% 44.00% 48.00% 48.00% 49.00% 54.00% 54.00% 55.00% 51.00% 60.00% 45.00% 59.00% 55.00% 50.00% 51.00% 60.00% 54.00% 57.00% 57.00% 54.00% 48.00% 56.00% 50.00% 51.00% 49.00% 55.00% 50.00% 57.00% 46.00% 47.00% 46.00% 50.00% 49.00% 53.00% 43.00% 43.00% 53.00% 47.00% 55.00% 56.00% 57.00% 48.00% 42.00% 48.00% 55.00% 49.00% 45.00% 47.39%
50.00% 40.00% 50.00%  6.00% 36.00% 18.00% 19.00% 12.00% 10.00% 41.00% 52.00% 33.00% 48.00% 16.00% 14.00% 16.00% 13.00% 24.00% 15.00% 66.00% 75.00% 70.00% 57.00% 51.00% 49.00% 52.00% 59.00% 50.00% 50.00% ------ 47.00% 53.00% 50.00% 48.00% 62.00% 50.00% 53.00% 66.00% 57.00% 57.00% 54.00% 60.00% 55.00% 59.00% 52.00% 50.00% 45.00% 47.00% 58.00% 55.00% 57.00% 41.00% 47.00% 37.00% 54.00% 56.00% 44.00% 48.00% 49.00% 56.00% 51.00% 43.00% 52.00% 60.00% 52.00% 53.00% 54.00% 59.00% 57.00% 46.00% 56.00% 49.00% 53.00% 49.00% 48.00% 61.00% 51.00% 55.00% 53.00% 45.00% 45.00% 51.00% 48.00% 61.00% 54.00% 59.00% 46.00% 55.00% 49.00% 52.00% 49.00% 54.00% 53.00% 52.00% 51.00% 51.00% 52.00% 52.00% 57.00% 53.00% 47.98%
43.00% 50.00% 57.00%  9.00% 42.00% 21.00% 20.00%  9.00% 16.00% 41.00% 39.00% 47.00% 40.00% 20.00% 12.00% 17.00% 12.00% 19.00% 15.00% 52.00% 75.00% 54.00% 56.00% 57.00% 57.00% 49.00% 53.00% 58.00% 65.00% 57.00% ------ 57.00% 47.00% 56.00% 60.00% 63.00% 52.00% 48.00% 59.00% 55.00% 46.00% 56.00% 57.00% 54.00% 57.00% 48.00% 50.00% 56.00% 51.00% 58.00% 55.00% 40.00% 44.00% 44.00% 50.00% 56.00% 48.00% 48.00% 54.00% 48.00% 46.00% 46.00% 50.00% 52.00% 50.00% 47.00% 49.00% 49.00% 50.00% 60.00% 47.00% 49.00% 51.00% 60.00% 55.00% 52.00% 49.00% 55.00% 52.00% 56.00% 50.00% 51.00% 50.00% 50.00% 45.00% 59.00% 43.00% 55.00% 41.00% 43.00% 54.00% 46.00% 47.00% 51.00% 44.00% 42.00% 50.00% 53.00% 56.00% 58.00% 47.39%
43.00% 41.00% 48.00% 14.00% 31.00% 19.00% 12.00% 20.00% 10.00% 47.00% 48.00% 42.00% 35.00% 23.00% 10.00% 15.00% 12.00% 17.00% 17.00% 65.00% 73.00% 66.00% 51.00% 61.00% 59.00% 52.00% 56.00% 53.00% 52.00% 55.00% 60.00% ------ 52.00% 51.00% 48.00% 50.00% 55.00% 48.00% 46.00% 55.00% 56.00% 53.00% 58.00% 45.00% 55.00% 50.00% 50.00% 55.00% 58.00% 51.00% 49.00% 56.00% 52.00% 44.00% 50.00% 53.00% 45.00% 44.00% 52.00% 51.00% 52.00% 35.00% 54.00% 53.00% 56.00% 60.00% 53.00% 58.00% 51.00% 47.00% 56.00% 49.00% 47.00% 44.00% 51.00% 54.00% 50.00% 49.00% 53.00% 49.00% 54.00% 50.00% 51.00% 51.00% 57.00% 51.00% 58.00% 56.00% 55.00% 62.00% 53.00% 35.00% 49.00% 52.00% 38.00% 51.00% 50.00% 57.00% 51.00% 50.00% 47.38%
43.00% 43.00% 47.00%  9.00% 36.00% 20.00% 17.00% 15.00% 16.00% 39.00% 43.00% 40.00% 38.00% 15.00% 10.00% 22.00% 17.00% 26.00% 21.00% 65.00% 69.00% 67.00% 68.00% 60.00% 52.00% 50.00% 55.00% 53.00% 53.00% 55.00% 48.00% 59.00% ------ 52.00% 60.00% 43.00% 57.00% 55.00% 56.00% 56.00% 60.00% 63.00% 52.00% 52.00% 45.00% 50.00% 54.00% 53.00% 57.00% 46.00% 49.00% 43.00% 50.00% 43.00% 50.00% 49.00% 55.00% 48.00% 51.00% 54.00% 46.00% 50.00% 54.00% 56.00% 41.00% 47.00% 50.00% 55.00% 43.00% 54.00% 54.00% 52.00% 56.00% 49.00% 43.00% 51.00% 62.00% 51.00% 56.00% 51.00% 55.00% 42.00% 55.00% 52.00% 46.00% 44.00% 47.00% 52.00% 46.00% 51.00% 52.00% 54.00% 45.00% 58.00% 54.00% 47.00% 49.00% 53.00% 47.00% 50.00% 47.41%
46.00% 37.00% 39.00% 15.00% 36.00% 16.00% 19.00% 16.00% 15.00% 43.00% 49.00% 45.00% 43.00% 18.00% 18.00% 16.00% 11.00% 14.00% 19.00% 61.00% 78.00% 64.00% 61.00% 55.00% 49.00% 55.00% 61.00% 55.00% 59.00% 56.00% 52.00% 56.00% 60.00% ------ 56.00% 49.00% 54.00% 58.00% 47.00% 62.00% 58.00% 51.00% 54.00% 46.00% 50.00% 46.00% 54.00% 54.00% 56.00% 52.00% 50.00% 40.00% 52.00% 46.00% 44.00% 63.00% 54.00% 57.00% 47.00% 56.00% 45.00% 55.00% 47.00% 52.00% 53.00% 51.00% 53.00% 62.00% 59.00% 60.00% 51.00% 49.00% 54.00% 44.00% 47.00% 60.00% 44.00% 62.00% 48.00% 57.00% 53.00% 50.00% 54.00% 56.00% 50.00% 48.00% 45.00% 46.00% 50.00% 54.00% 54.00% 53.00% 55.00% 44.00% 49.00% 59.00% 53.00% 45.00% 60.00% 49.00% 48.21%
47.00% 38.00% 47.00% 12.00% 30.00% 21.00% 17.00% 15.00% 13.00% 32.00% 39.00% 35.00% 43.00% 12.00% 10.00% 21.00% 18.00% 20.00% 23.00% 62.00% 71.00% 63.00% 49.00% 61.00% 48.00% 50.00% 47.00% 49.00% 49.00% 58.00% 54.00% 49.00% 46.00% 48.00% ------ 51.00% 62.00% 54.00% 53.00% 56.00% 54.00% 53.00% 50.00% 49.00% 46.00% 51.00% 52.00% 52.00% 45.00% 46.00% 57.00% 38.00% 44.00% 43.00% 50.00% 46.00% 49.00% 52.00% 41.00% 55.00% 45.00% 45.00% 49.00% 45.00% 45.00% 53.00% 54.00% 50.00% 51.00% 47.00% 49.00% 49.00% 56.00% 53.00% 45.00% 56.00% 47.00% 47.00% 39.00% 42.00% 45.00% 57.00% 58.00% 49.00% 52.00% 54.00% 39.00% 52.00% 48.00% 54.00% 47.00% 62.00% 57.00% 53.00% 55.00% 54.00% 47.00% 58.00% 47.00% 44.00% 45.91%
50.00% 36.00% 48.00% 12.00% 36.00% 12.00% 20.00% 12.00% 18.00% 36.00% 36.00% 37.00% 43.00% 17.00% 18.00% 11.00% 14.00% 17.00% 21.00% 63.00% 73.00% 57.00% 57.00% 42.00% 54.00% 57.00% 41.00% 57.00% 47.00% 56.00% 60.00% 55.00% 40.00% 51.00% 54.00% ------ 53.00% 58.00% 58.00% 58.00% 55.00% 59.00% 53.00% 52.00% 40.00% 59.00% 49.00% 51.00% 49.00% 53.00% 55.00% 49.00% 38.00% 47.00% 49.00% 46.00% 49.00% 53.00% 56.00% 50.00% 56.00% 43.00% 50.00% 48.00% 46.00% 52.00% 55.00% 54.00% 48.00% 48.00% 54.00% 51.00% 53.00% 41.00% 41.00% 54.00% 49.00% 44.00% 52.00% 51.00% 55.00% 55.00% 51.00% 51.00% 48.00% 41.00% 46.00% 49.00% 41.00% 42.00% 54.00% 48.00% 51.00% 47.00% 57.00% 55.00% 51.00% 43.00% 52.00% 46.00% 46.16%
45.00% 48.00% 44.00%  9.00% 42.00% 18.00% 22.00% 16.00% 16.00% 44.00% 40.00% 43.00% 39.00% 19.00% 13.00% 19.00% 16.00% 24.00% 19.00% 50.00% 82.00% 57.00% 44.00% 58.00% 57.00% 54.00% 54.00% 61.00% 57.00% 52.00% 45.00% 48.00% 47.00% 47.00% 57.00% 53.00% ------ 49.00% 56.00% 56.00% 49.00% 57.00% 59.00% 48.00% 48.00% 51.00% 47.00% 52.00% 53.00% 45.00% 49.00% 46.00% 45.00% 43.00% 49.00% 50.00% 55.00% 50.00% 42.00% 48.00% 47.00% 45.00% 54.00% 59.00% 45.00% 55.00% 49.00% 49.00% 52.00% 50.00% 51.00% 48.00% 46.00% 39.00% 40.00% 52.00% 48.00% 47.00% 57.00% 54.00% 50.00% 48.00% 53.00% 63.00% 44.00% 49.00% 50.00% 62.00% 48.00% 50.00% 45.00% 51.00% 50.00% 55.00% 49.00% 52.00% 38.00% 50.00% 46.00% 44.00% 46.36%
46.00% 49.00% 45.00% 11.00% 34.00% 15.00% 16.00% 18.00% 13.00% 50.00% 38.00% 44.00% 37.00% 17.00% 17.00% 18.00% 19.00% 14.00% 16.00% 60.00% 71.00% 60.00% 59.00% 44.00% 50.00% 46.00% 60.00% 51.00% 54.00% 50.00% 59.00% 50.00% 61.00% 44.00% 54.00% 54.00% 57.00% ------ 54.00% 57.00% 59.00% 60.00% 62.00% 51.00% 47.00% 52.00% 46.00% 45.00% 41.00% 54.00% 47.00% 43.00% 48.00% 45.00% 45.00% 47.00% 52.00% 47.00% 55.00% 52.00% 47.00% 48.00% 58.00% 50.00% 56.00% 50.00% 49.00% 51.00% 45.00% 45.00% 50.00% 45.00% 55.00% 37.00% 53.00% 50.00% 55.00% 52.00% 60.00% 53.00% 45.00% 49.00% 59.00% 49.00% 43.00% 58.00% 44.00% 51.00% 40.00% 45.00% 43.00% 47.00% 55.00% 59.00% 47.00% 44.00% 46.00% 42.00% 48.00% 61.00% 46.40%
48.00% 44.00% 46.00% 12.00% 37.00% 18.00% 16.00%  8.00% 11.00% 34.00% 40.00% 41.00% 41.00% 13.00% 20.00% 13.00% 24.00% 16.00% 16.00% 67.00% 70.00% 67.00% 55.00% 50.00% 52.00% 51.00% 57.00% 46.00% 49.00% 46.00% 55.00% 47.00% 52.00% 49.00% 53.00% 57.00% 55.00% 46.00% ------ 51.00% 52.00% 55.00% 60.00% 52.00% 50.00% 44.00% 47.00% 50.00% 50.00% 48.00% 60.00% 43.00% 46.00% 37.00% 50.00% 46.00% 44.00% 55.00% 49.00% 52.00% 49.00% 54.00% 51.00% 45.00% 36.00% 52.00% 46.00% 54.00% 52.00% 45.00% 49.00% 51.00% 43.00% 47.00% 48.00% 53.00% 53.00% 50.00% 48.00% 47.00% 50.00% 48.00% 51.00% 46.00% 40.00% 58.00% 50.00% 50.00% 48.00% 53.00% 47.00% 51.00% 59.00% 43.00% 51.00% 61.00% 53.00% 49.00% 47.00% 56.00% 45.93%
44.00% 48.00% 46.00% 10.00% 32.00% 19.00% 13.00%  8.00% 13.00% 41.00% 40.00% 36.00% 42.00% 18.00% 15.00% 15.00% 23.00% 20.00% 19.00% 65.00% 66.00% 66.00% 62.00% 60.00% 56.00% 50.00% 54.00% 58.00% 44.00% 50.00% 50.00% 45.00% 52.00% 51.00% 55.00% 45.00% 46.00% 59.00% 50.00% ------ 60.00% 57.00% 61.00% 52.00% 57.00% 60.00% 50.00% 53.00% 48.00% 49.00% 53.00% 46.00% 38.00% 48.00% 51.00% 46.00% 47.00% 49.00% 42.00% 47.00% 51.00% 41.00% 43.00% 43.00% 52.00% 44.00% 53.00% 59.00% 41.00% 60.00% 46.00% 54.00% 48.00% 54.00% 55.00% 49.00% 46.00% 51.00% 55.00% 49.00% 43.00% 49.00% 53.00% 56.00% 50.00% 54.00% 50.00% 52.00% 57.00% 45.00% 56.00% 51.00% 49.00% 46.00% 47.00% 42.00% 46.00% 48.00% 54.00% 53.00% 46.41%
51.00% 50.00% 41.00% 12.00% 34.00% 17.00% 17.00% 13.00% 17.00% 39.00% 37.00% 38.00% 54.00% 13.00% 12.00% 19.00% 16.00% 19.00% 21.00% 55.00% 79.00% 65.00% 48.00% 52.00% 56.00% 50.00% 44.00% 54.00% 54.00% 48.00% 51.00% 54.00% 48.00% 57.00% 52.00% 44.00% 49.00% 53.00% 43.00% 52.00% ------ 51.00% 52.00% 49.00% 57.00% 46.00% 51.00% 54.00% 54.00% 47.00% 50.00% 45.00% 45.00% 46.00% 48.00% 46.00% 45.00% 54.00% 51.00% 52.00% 33.00% 46.00% 46.00% 43.00% 50.00% 48.00% 53.00% 48.00% 47.00% 52.00% 51.00% 54.00% 50.00% 49.00% 54.00% 48.00% 52.00% 46.00% 55.00% 55.00% 47.00% 51.00% 50.00% 40.00% 47.00% 49.00% 48.00% 48.00% 47.00% 55.00% 53.00% 45.00% 47.00% 44.00% 53.00% 49.00% 59.00% 55.00% 50.00% 56.00% 45.90%
45.00% 48.00% 46.00% 11.00% 32.00% 13.00% 12.00% 23.00% 15.00% 30.00% 41.00% 39.00% 45.00% 14.00% 17.00% 17.00% 21.00% 19.00% 16.00% 62.00% 72.00% 63.00% 53.00% 59.00% 56.00% 46.00% 55.00% 52.00% 62.00% 48.00% 53.00% 50.00% 50.00% 50.00% 60.00% 55.00% 60.00% 52.00% 62.00% 52.00% 58.00% ------ 52.00% 46.00% 58.00% 51.00% 54.00% 51.00% 52.00% 42.00% 45.00% 47.00% 44.00% 42.00% 48.00% 52.00% 54.00% 49.00% 49.00% 42.00% 48.00% 49.00% 53.00% 42.00% 54.00% 52.00% 60.00% 44.00% 62.00% 48.00% 50.00% 57.00% 61.00% 47.00% 46.00% 55.00% 53.00% 58.00% 46.00% 36.00% 51.00% 52.00% 55.00% 55.00% 50.00% 56.00% 46.00% 57.00% 42.00% 49.00% 57.00% 49.00% 49.00% 47.00% 55.00% 54.00% 46.00% 52.00% 48.00% 51.00% 47.01%
47.00% 50.00% 45.00% 13.00% 29.00% 16.00% 21.00% 17.00% 10.00% 46.00% 43.00% 43.00% 43.00% 18.00% 16.00% 21.00% 18.00% 24.00% 25.00% 63.00% 69.00% 63.00% 53.00% 55.00% 56.00% 60.00% 53.00% 50.00% 45.00% 43.00% 50.00% 54.00% 56.00% 51.00% 46.00% 55.00% 58.00% 59.00% 51.00% 61.00% 62.00% 55.00% ------ 56.00% 58.00% 61.00% 49.00% 52.00% 46.00% 50.00% 45.00% 43.00% 51.00% 37.00% 41.00% 46.00% 44.00% 47.00% 46.00% 52.00% 55.00% 45.00% 39.00% 45.00% 51.00% 55.00% 50.00% 42.00% 53.00% 48.00% 55.00% 47.00% 45.00% 55.00% 47.00% 59.00% 40.00% 49.00% 56.00% 52.00% 50.00% 45.00% 49.00% 55.00% 48.00% 47.00% 52.00% 57.00% 46.00% 50.00% 53.00% 59.00% 45.00% 55.00% 51.00% 45.00% 44.00% 52.00% 58.00% 42.00% 46.75%
46.00% 47.00% 51.00% 11.00% 40.00% 21.00% 24.00% 21.00% 16.00% 38.00% 41.00% 45.00% 40.00% 12.00% 11.00% 24.00% 19.00% 22.00% 20.00% 66.00% 70.00% 59.00% 54.00% 59.00% 55.00% 58.00% 53.00% 52.00% 60.00% 59.00% 50.00% 59.00% 59.00% 58.00% 61.00% 62.00% 57.00% 59.00% 64.00% 64.00% 64.00% 55.00% 61.00% ------ 54.00% 57.00% 44.00% 56.00% 55.00% 51.00% 55.00% 47.00% 48.00% 47.00% 49.00% 53.00% 50.00% 57.00% 62.00% 53.00% 48.00% 50.00% 52.00% 55.00% 61.00% 58.00% 48.00% 56.00% 57.00% 58.00% 52.00% 48.00% 59.00% 51.00% 54.00% 59.00% 58.00% 58.00% 56.00% 48.00% 52.00% 61.00% 54.00% 49.00% 53.00% 52.00% 56.00% 65.00% 61.00% 53.00% 57.00% 54.00% 47.00% 57.00% 64.00% 48.00% 53.00% 51.00% 49.00% 52.00% 50.29%
48.00% 45.00% 56.00% 11.00% 42.00% 23.00% 17.00% 14.00% 13.00% 36.00% 41.00% 51.00% 48.00% 18.00% 12.00% 18.00% 20.00% 15.00% 23.00% 62.00% 75.00% 68.00% 53.00% 65.00% 48.00% 45.00% 48.00% 58.00% 61.00% 60.00% 58.00% 58.00% 47.00% 65.00% 61.00% 55.00% 61.00% 57.00% 62.00% 54.00% 54.00% 57.00% 56.00% 39.00% ------ 53.00% 57.00% 55.00% 55.00% 59.00% 54.00% 42.00% 46.00% 60.00% 45.00% 48.00% 59.00% 60.00% 57.00% 56.00% 49.00% 47.00% 53.00% 65.00% 66.00% 64.00% 55.00% 49.00% 58.00% 43.00% 45.00% 48.00% 52.00% 60.00% 59.00% 55.00% 60.00% 56.00% 59.00% 49.00% 52.00% 56.00% 56.00% 47.00% 56.00% 64.00% 54.00% 60.00% 49.00% 58.00% 59.00% 61.00% 58.00% 63.00% 48.00% 61.00% 64.00% 52.00% 53.00% 57.00% 50.55%
51.00% 52.00% 40.00% 13.00% 39.00% 14.00% 28.00% 15.00% 19.00% 50.00% 48.00% 43.00% 40.00% 16.00% 10.00% 16.00% 23.00% 24.00% 25.00% 59.00% 70.00% 54.00% 64.00% 69.00% 56.00% 46.00% 61.00% 63.00% 53.00% 65.00% 52.00% 53.00% 59.00% 56.00% 61.00% 62.00% 59.00% 65.00% 51.00% 58.00% 59.00% 61.00% 57.00% 41.00% 58.00% ------ 55.00% 53.00% 51.00% 60.00% 47.00% 50.00% 43.00% 50.00% 49.00% 59.00% 50.00% 57.00% 57.00% 58.00% 51.00% 46.00% 59.00% 57.00% 61.00% 55.00% 55.00% 57.00% 53.00% 46.00% 48.00% 50.00% 58.00% 52.00% 54.00% 55.00% 56.00% 54.00% 52.00% 56.00% 50.00% 55.00% 52.00% 63.00% 57.00% 61.00% 45.00% 50.00% 49.00% 62.00% 55.00% 49.00% 48.00% 54.00% 64.00% 48.00% 59.00% 52.00% 59.00% 55.00% 50.29%
48.00% 45.00% 56.00% 12.00% 39.00% 18.00% 19.00% 15.00% 17.00% 42.00% 50.00% 40.00% 44.00% 13.00%  7.00% 21.00% 20.00% 18.00% 22.00% 72.00% 73.00% 69.00% 61.00% 57.00% 59.00% 61.00% 51.00% 51.00% 57.00% 53.00% 49.00% 58.00% 59.00% 55.00% 65.00% 61.00% 65.00% 65.00% 59.00% 56.00% 60.00% 54.00% 60.00% 47.00% 59.00% 59.00% ------ 55.00% 58.00% 58.00% 47.00% 56.00% 55.00% 55.00% 57.00% 56.00% 47.00% 46.00% 48.00% 55.00% 46.00% 49.00% 57.00% 43.00% 53.00% 57.00% 54.00% 52.00% 49.00% 56.00% 61.00% 52.00% 55.00% 48.00% 48.00% 57.00% 63.00% 61.00% 48.00% 56.00% 48.00% 57.00% 54.00% 60.00% 58.00% 51.00% 61.00% 64.00% 49.00% 49.00% 48.00% 56.00% 54.00% 49.00% 52.00% 57.00% 54.00% 52.00% 61.00% 58.00% 50.41%
57.00% 47.00% 53.00% 17.00% 36.00% 23.00% 18.00% 15.00% 14.00% 35.00% 33.00% 37.00% 42.00% 19.00% 13.00% 18.00% 23.00% 24.00% 19.00% 63.00% 67.00% 70.00% 62.00% 68.00% 69.00% 57.00% 57.00% 58.00% 56.00% 52.00% 58.00% 60.00% 54.00% 45.00% 64.00% 57.00% 66.00% 59.00% 55.00% 65.00% 63.00% 54.00% 59.00% 60.00% 56.00% 49.00% 61.00% ------ 54.00% 59.00% 63.00% 46.00% 44.00% 38.00% 56.00% 55.00% 58.00% 55.00% 46.00% 46.00% 52.00% 49.00% 50.00% 52.00% 42.00% 58.00% 47.00% 52.00% 53.00% 57.00% 56.00% 60.00% 61.00% 49.00% 62.00% 68.00% 57.00% 58.00% 48.00% 55.00% 54.00% 52.00% 54.00% 53.00% 54.00% 61.00% 49.00% 56.00% 59.00% 57.00% 47.00% 46.00% 61.00% 57.00% 63.00% 55.00% 57.00% 54.00% 56.00% 58.00% 50.67%
54.00% 49.00% 51.00%  8.00% 46.00% 15.00% 19.00% 15.00% 18.00% 35.00% 42.00% 42.00% 45.00% 13.00% 21.00% 21.00% 23.00% 11.00% 17.00% 61.00% 69.00% 62.00% 57.00% 56.00% 69.00% 56.00% 61.00% 66.00% 55.00% 50.00% 54.00% 57.00% 56.00% 63.00% 53.00% 56.00% 56.00% 55.00% 57.00% 48.00% 48.00% 61.00% 56.00% 55.00% 63.00% 56.00% 56.00% 50.00% ------ 58.00% 61.00% 50.00% 54.00% 53.00% 60.00% 59.00% 46.00% 49.00% 63.00% 61.00% 49.00% 57.00% 51.00% 52.00% 53.00% 56.00% 57.00% 54.00% 60.00% 59.00% 55.00% 54.00% 57.00% 57.00% 52.00% 49.00% 48.00% 46.00% 57.00% 59.00% 54.00% 55.00% 56.00% 62.00% 61.00% 57.00% 49.00% 58.00% 56.00% 51.00% 51.00% 54.00% 53.00% 52.00% 51.00% 56.00% 48.00% 51.00% 59.00% 54.00% 50.41%
51.00% 50.00% 48.00% 12.00% 40.00% 17.00% 25.00% 17.00% 10.00% 47.00% 42.00% 47.00% 43.00% 16.00% 12.00% 19.00% 21.00% 20.00% 24.00% 72.00% 74.00% 70.00% 68.00% 57.00% 52.00% 57.00% 54.00% 57.00% 56.00% 49.00% 55.00% 50.00% 51.00% 74.00% 56.00% 65.00% 53.00% 62.00% 71.00% 55.00% 57.00% 59.00% 56.00% 59.00% 60.00% 48.00% 53.00% 54.00% 58.00% ------ 55.00% 49.00% 50.00% 58.00% 47.00% 52.00% 57.00% 43.00% 51.00% 58.00% 49.00% 43.00% 53.00% 53.00% 51.00% 50.00% 56.00% 54.00% 42.00% 51.00% 60.00% 60.00% 58.00% 56.00% 54.00% 52.00% 53.00% 60.00% 51.00% 57.00% 64.00% 57.00% 57.00% 56.00% 61.00% 56.00% 57.00% 59.00% 53.00% 66.00% 60.00% 56.00% 52.00% 46.00% 65.00% 54.00% 58.00% 62.00% 57.00% 60.00% 51.13%
49.00% 49.00% 51.00% 10.00% 42.00% 17.00% 17.00% 14.00% 12.00% 44.00% 46.00% 53.00% 43.00% 10.00% 11.00% 19.00% 16.00% 23.00% 21.00% 67.00% 70.00% 74.00% 57.00% 61.00% 58.00% 52.00% 57.00% 52.00% 52.00% 57.00% 61.00% 62.00% 47.00% 66.00% 67.00% 53.00% 59.00% 60.00% 58.00% 65.00% 61.00% 57.00% 63.00% 58.00% 54.00% 59.00% 49.00% 51.00% 54.00% 60.00% ------ 51.00% 44.00% 52.00% 50.00% 53.00% 62.00% 55.00% 50.00% 57.00% 54.00% 54.00% 62.00% 51.00% 56.00% 53.00% 65.00% 59.00% 57.00% 54.00% 53.00% 55.00% 58.00% 60.00% 55.00% 49.00% 56.00% 47.00% 54.00% 56.00% 55.00% 57.00% 50.00% 58.00% 50.00% 61.00% 58.00% 53.00% 40.00% 52.00% 64.00% 57.00% 60.00% 55.00% 62.00% 45.00% 40.00% 54.00% 46.00% 55.00% 50.73%
60.00% 49.00% 56.00% 10.00% 44.00% 19.00% 19.00% 18.00% 20.00% 52.00% 47.00% 48.00% 53.00% 11.00% 18.00% 21.00% 29.00% 19.00% 22.00% 72.00% 74.00% 58.00% 69.00% 63.00% 58.00% 68.00% 57.00% 58.00% 63.00% 65.00% 54.00% 65.00% 60.00% 63.00% 64.00% 68.00% 69.00% 66.00% 66.00% 57.00% 59.00% 58.00% 70.00% 66.00% 57.00% 54.00% 57.00% 62.00% 58.00% 62.00% 64.00% ------ 54.00% 52.00% 58.00% 57.00% 65.00% 61.00% 54.00% 55.00% 58.00% 63.00% 70.00% 63.00% 70.00% 67.00% 60.00% 62.00% 57.00% 55.00% 65.00% 57.00% 59.00% 59.00% 67.00% 55.00% 64.00% 58.00% 62.00% 63.00% 54.00% 58.00% 59.00% 59.00% 59.00% 63.00% 62.00% 52.00% 59.00% 65.00% 59.00% 57.00% 57.00% 62.00% 64.00% 66.00% 61.00% 56.00% 67.00% 70.00% 55.74%
55.00% 53.00% 59.00% 12.00% 35.00% 25.00% 19.00% 17.00% 15.00% 49.00% 42.00% 32.00% 41.00% 19.00% 23.00% 25.00% 17.00% 17.00% 28.00% 64.00% 76.00% 66.00% 69.00% 61.00% 59.00% 59.00% 68.00% 66.00% 68.00% 59.00% 65.00% 53.00% 62.00% 60.00% 69.00% 57.00% 60.00% 65.00% 66.00% 54.00% 63.00% 64.00% 71.00% 59.00% 60.00% 57.00% 58.00% 60.00% 62.00% 55.00% 54.00% 59.00% ------ 50.00% 57.00% 61.00% 56.00% 50.00% 64.00% 56.00% 48.00% 54.00% 68.00% 70.00% 56.00% 62.00% 63.00% 67.00% 59.00% 54.00% 62.00% 69.00% 65.00% 51.00% 62.00% 63.00% 66.00% 55.00% 57.00% 68.00% 61.00% 59.00% 66.00% 63.00% 61.00% 43.00% 52.00% 58.00% 49.00% 64.00% 53.00% 59.00% 59.00% 61.00% 56.00% 58.00% 65.00% 66.00% 65.00% 71.00% 54.88%
61.00% 56.00% 62.00% 15.00% 39.00% 31.00% 26.00% 17.00% 18.00% 46.00% 37.00% 45.00% 43.00% 14.00% 20.00% 16.00% 21.00% 26.00% 16.00% 68.00% 79.00% 71.00% 59.00% 70.00% 59.00% 65.00% 63.00% 65.00% 65.00% 60.00% 57.00% 68.00% 62.00% 70.00% 66.00% 62.00% 62.00% 67.00% 66.00% 60.00% 58.00% 51.00% 61.00% 61.00% 53.00% 62.00% 62.00% 57.00% 66.00% 65.00% 58.00% 55.00% 54.00% ------ 63.00% 58.00% 65.00% 49.00% 53.00% 53.00% 55.00% 55.00% 70.00% 60.00% 64.00% 60.00% 61.00% 55.00% 56.00% 61.00% 59.00% 67.00% 61.00% 56.00% 59.00% 55.00% 52.00% 60.00% 69.00% 60.00% 57.00% 68.00% 69.00% 63.00% 65.00% 56.00% 54.00% 58.00% 51.00% 62.00% 60.00% 63.00% 60.00% 57.00% 64.00% 62.00% 62.00% 64.00% 66.00% 64.00% 55.53%
42.00% 52.00% 51.00% 13.00% 42.00% 25.00% 23.00% 21.00% 19.00% 41.00% 51.00% 50.00% 49.00% 15.00% 15.00% 24.00% 22.00% 26.00% 18.00% 71.00% 79.00% 64.00% 62.00% 64.00% 66.00% 50.00% 62.00% 60.00% 59.00% 54.00% 55.00% 57.00% 61.00% 63.00% 61.00% 61.00% 60.00% 63.00% 69.00% 62.00% 63.00% 56.00% 67.00% 65.00% 54.00% 62.00% 55.00% 58.00% 53.00% 60.00% 63.00% 47.00% 51.00% 55.00% ------ 63.00% 62.00% 50.00% 51.00% 65.00% 55.00% 51.00% 58.00% 64.00% 62.00% 66.00% 48.00% 59.00% 63.00% 52.00% 55.00% 63.00% 54.00% 52.00% 49.00% 64.00% 58.00% 55.00% 60.00% 56.00% 55.00% 48.00% 56.00% 59.00% 66.00% 50.00% 51.00% 55.00% 53.00% 46.00% 62.00% 56.00% 54.00% 64.00% 54.00% 54.00% 53.00% 61.00% 58.00% 57.00% 53.11%
49.00% 41.00% 43.00% 10.00% 37.00% 20.00% 21.00% 20.00% 18.00% 43.00% 42.00% 40.00% 40.00% 11.00% 21.00% 25.00% 22.00% 17.00% 18.00% 66.00% 75.00% 56.00% 71.00% 55.00% 55.00% 55.00% 64.00% 52.00% 52.00% 58.00% 53.00% 49.00% 54.00% 52.00% 63.00% 57.00% 50.00% 49.00% 62.00% 57.00% 57.00% 65.00% 56.00% 49.00% 58.00% 67.00% 52.00% 66.00% 58.00% 52.00% 60.00% 42.00% 51.00% 40.00% 42.00% ------ 57.00% 52.00% 57.00% 47.00% 55.00% 54.00% 53.00% 55.00% 48.00% 55.00% 56.00% 53.00% 59.00% 50.00% 58.00% 53.00% 60.00% 54.00% 63.00% 51.00% 57.00% 65.00% 53.00% 42.00% 53.00% 53.00% 62.00% 53.00% 55.00% 60.00% 46.00% 55.00% 47.00% 59.00% 54.00% 48.00% 65.00% 56.00% 61.00% 57.00% 60.00% 56.00% 51.00% 60.00% 50.26%
54.00% 43.00% 48.00%  4.00% 42.00% 24.00% 21.00% 13.00%  9.00% 48.00% 45.00% 48.00% 42.00% 15.00% 11.00% 27.00% 21.00% 23.00% 19.00% 69.00% 74.00% 62.00% 63.00% 55.00% 63.00% 53.00% 57.00% 61.00% 58.00% 60.00% 60.00% 53.00% 63.00% 57.00% 58.00% 60.00% 50.00% 61.00% 63.00% 59.00% 53.00% 58.00% 54.00% 47.00% 47.00% 50.00% 52.00% 53.00% 55.00% 55.00% 49.00% 42.00% 54.00% 53.00% 59.00% 52.00% ------ 51.00% 56.00% 62.00% 51.00% 51.00% 55.00% 54.00% 58.00% 50.00% 53.00% 49.00% 60.00% 42.00% 57.00% 57.00% 47.00% 57.00% 61.00% 54.00% 54.00% 58.00% 52.00% 53.00% 58.00% 46.00% 51.00% 55.00% 52.00% 47.00% 47.00% 50.00% 54.00% 56.00% 55.00% 60.00% 65.00% 59.00% 47.00% 50.00% 54.00% 52.00% 56.00% 60.00% 50.15%
56.00% 57.00% 54.00% 11.00% 41.00% 24.00% 23.00% 13.00% 13.00% 45.00% 42.00% 52.00% 54.00% 22.00% 15.00% 23.00% 16.00% 29.00% 19.00% 73.00% 70.00% 64.00% 70.00% 62.00% 62.00% 64.00% 58.00% 60.00% 63.00% 59.00% 67.00% 63.00% 59.00% 58.00% 53.00% 55.00% 68.00% 65.00% 59.00% 64.00% 60.00% 64.00% 58.00% 58.00% 63.00% 62.00% 61.00% 55.00% 54.00% 58.00% 67.00% 38.00% 52.00% 42.00% 53.00% 57.00% 56.00% ------ 67.00% 66.00% 53.00% 50.00% 59.00% 55.00% 66.00% 65.00% 59.00% 56.00% 60.00% 55.00% 62.00% 51.00% 61.00% 53.00% 56.00% 58.00% 45.00% 52.00% 61.00% 52.00% 60.00% 64.00% 57.00% 58.00% 62.00% 56.00% 68.00% 53.00% 58.00% 56.00% 54.00% 59.00% 56.00% 54.00% 61.00% 61.00% 55.00% 53.00% 58.00% 57.00% 53.59%
50.00% 55.00% 52.00% 17.00% 51.00% 19.00% 15.00% 20.00% 14.00% 34.00% 44.00% 37.00% 42.00% 17.00% 19.00% 24.00% 18.00% 18.00% 17.00% 61.00% 75.00% 66.00% 57.00% 60.00% 56.00% 49.00% 65.00% 58.00% 65.00% 60.00% 58.00% 50.00% 64.00% 60.00% 64.00% 54.00% 53.00% 52.00% 62.00% 51.00% 56.00% 56.00% 62.00% 55.00% 66.00% 54.00% 51.00% 46.00% 61.00% 56.00% 48.00% 45.00% 52.00% 42.00% 51.00% 46.00% 59.00% 52.00% ------ 50.00% 44.00% 45.00% 61.00% 53.00% 54.00% 51.00% 57.00% 60.00% 54.00% 53.00% 55.00% 55.00% 50.00% 52.00% 53.00% 50.00% 57.00% 58.00% 54.00% 49.00% 51.00% 65.00% 55.00% 52.00% 51.00% 53.00% 57.00% 54.00% 58.00% 56.00% 51.00% 53.00% 61.00% 55.00% 59.00% 57.00% 54.00% 49.00% 51.00% 62.00% 50.30%
51.00% 49.00% 49.00% 10.00% 40.00% 13.00% 12.00% 24.00% 12.00% 50.00% 43.00% 35.00% 42.00% 19.00% 17.00% 24.00% 21.00% 17.00% 14.00% 62.00% 73.00% 63.00% 60.00% 62.00% 59.00% 51.00% 56.00% 63.00% 51.00% 59.00% 59.00% 54.00% 63.00% 69.00% 59.00% 59.00% 56.00% 61.00% 59.00% 64.00% 63.00% 54.00% 54.00% 55.00% 58.00% 69.00% 58.00% 56.00% 55.00% 49.00% 55.00% 51.00% 47.00% 57.00% 54.00% 52.00% 57.00% 51.00% 58.00% ------ 45.00% 53.00% 55.00% 60.00% 50.00% 48.00% 50.00% 51.00% 59.00% 50.00% 54.00% 54.00% 54.00% 47.00% 57.00% 53.00% 59.00% 55.00% 58.00% 59.00% 50.00% 61.00% 55.00% 64.00% 54.00% 54.00% 61.00% 51.00% 51.00% 60.00% 60.00% 49.00% 52.00% 58.00% 54.00% 43.00% 57.00% 58.00% 61.00% 49.00% 50.81%
57.00% 53.00% 65.00% 19.00% 37.00% 19.00% 19.00% 16.00% 17.00% 45.00% 51.00% 42.00% 48.00% 23.00% 20.00% 35.00% 22.00% 22.00% 24.00% 69.00% 73.00% 64.00% 59.00% 59.00% 71.00% 67.00% 52.00% 61.00% 67.00% 62.00% 64.00% 59.00% 51.00% 62.00% 58.00% 62.00% 54.00% 65.00% 55.00% 60.00% 64.00% 53.00% 53.00% 60.00% 56.00% 60.00% 62.00% 59.00% 65.00% 58.00% 61.00% 50.00% 53.00% 53.00% 53.00% 53.00% 51.00% 54.00% 64.00% 61.00% ------ 57.00% 59.00% 64.00% 58.00% 51.00% 63.00% 56.00% 70.00% 49.00% 51.00% 55.00% 61.00% 53.00% 63.00% 58.00% 58.00% 53.00% 57.00% 65.00% 58.00% 59.00% 55.00% 53.00% 56.00% 59.00% 60.00% 57.00% 55.00% 55.00% 64.00% 66.00% 72.00% 54.00% 64.00% 58.00% 53.00% 57.00% 66.00% 65.00% 54.12%
55.00% 61.00% 61.00% 20.00% 37.00% 24.00% 20.00% 18.00% 19.00% 42.00% 47.00% 46.00% 49.00% 17.00% 17.00% 22.00% 25.00% 35.00% 21.00% 62.00% 66.00% 58.00% 57.00% 68.00% 61.00% 56.00% 60.00% 62.00% 61.00% 64.00% 49.00% 68.00% 61.00% 55.00% 65.00% 64.00% 62.00% 58.00% 55.00% 68.00% 58.00% 65.00% 64.00% 62.00% 55.00% 56.00% 67.00% 56.00% 51.00% 69.00% 53.00% 56.00% 50.00% 53.00% 54.00% 49.00% 65.00% 50.00% 58.00% 59.00% 58.00% ------ 60.00% 59.00% 59.00% 64.00% 58.00% 59.00% 55.00% 54.00% 63.00% 58.00% 59.00% 54.00% 55.00% 67.00% 51.00% 65.00% 51.00% 62.00% 62.00% 54.00% 61.00% 52.00% 50.00% 56.00% 62.00% 61.00% 56.00% 57.00% 62.00% 54.00% 65.00% 58.00% 66.00% 60.00% 51.00% 56.00% 61.00% 54.00% 53.89%
44.00% 43.00% 56.00% 12.00% 38.00% 11.00% 14.00% 10.00% 12.00% 44.00% 41.00% 39.00% 45.00% 14.00% 15.00% 22.00% 15.00% 19.00% 17.00% 61.00% 75.00% 60.00% 52.00% 47.00% 57.00% 55.00% 57.00% 62.00% 60.00% 60.00% 60.00% 52.00% 52.00% 49.00% 55.00% 54.00% 61.00% 54.00% 55.00% 54.00% 52.00% 57.00% 63.00% 61.00% 46.00% 46.00% 52.00% 57.00% 56.00% 46.00% 54.00% 47.00% 47.00% 42.00% 46.00% 43.00% 54.00% 52.00% 54.00% 55.00% 42.00% 48.00% ------ 54.00% 50.00% 52.00% 51.00% 52.00% 58.00% 45.00% 62.00% 60.00% 59.00% 52.00% 48.00% 42.00% 54.00% 59.00% 55.00% 56.00% 50.00% 48.00% 47.00% 55.00% 56.00% 56.00% 48.00% 50.00% 49.00% 51.00% 51.00% 46.00% 44.00% 42.00% 59.00% 57.00% 48.00% 50.00% 48.00% 61.00% 47.96%
42.00% 44.00% 41.00% 13.00% 37.00% 28.00% 16.00% 12.00% 16.00% 46.00% 41.00% 49.00% 33.00% 13.00% 12.00% 18.00% 13.00% 26.00% 22.00% 61.00% 77.00% 64.00% 56.00% 56.00% 61.00% 49.00% 54.00% 56.00% 48.00% 52.00% 49.00% 53.00% 52.00% 60.00% 55.00% 58.00% 52.00% 61.00% 55.00% 69.00% 62.00% 51.00% 59.00% 52.00% 55.00% 50.00% 49.00% 52.00% 46.00% 49.00% 52.00% 43.00% 40.00% 41.00% 51.00% 58.00% 54.00% 44.00% 54.00% 49.00% 49.00% 58.00% 45.00% ------ 53.00% 54.00% 50.00% 60.00% 60.00% 62.00% 48.00% 54.00% 59.00% 56.00% 58.00% 57.00% 55.00% 56.00% 50.00% 45.00% 52.00% 55.00% 51.00% 49.00% 48.00% 58.00% 53.00% 54.00% 48.00% 50.00% 49.00% 51.00% 64.00% 58.00% 47.00% 57.00% 53.00% 51.00% 51.00% 53.00% 48.61%
47.00% 46.00% 56.00% 18.00% 37.00% 22.00% 19.00% 10.00% 22.00% 44.00% 39.00% 51.00% 47.00% 16.00% 15.00% 13.00% 14.00% 23.00% 17.00% 64.00% 77.00% 68.00% 50.00% 62.00% 51.00% 60.00% 52.00% 60.00% 58.00% 58.00% 58.00% 52.00% 58.00% 57.00% 55.00% 58.00% 50.00% 49.00% 66.00% 57.00% 55.00% 58.00% 53.00% 47.00% 49.00% 50.00% 50.00% 52.00% 50.00% 45.00% 58.00% 45.00% 53.00% 42.00% 63.00% 52.00% 58.00% 44.00% 61.00% 52.00% 49.00% 58.00% 53.00% 57.00% ------ 54.00% 54.00% 56.00% 45.00% 44.00% 50.00% 51.00% 56.00% 49.00% 58.00% 49.00% 50.00% 52.00% 53.00% 58.00% 51.00% 41.00% 50.00% 53.00% 58.00% 50.00% 46.00% 54.00% 41.00% 51.00% 54.00% 53.00% 56.00% 57.00% 56.00% 59.00% 58.00% 55.00% 52.00% 57.00% 49.10%
48.00% 51.00% 50.00% 11.00% 42.00% 19.00% 23.00% 13.00% 13.00% 43.00% 40.00% 36.00% 47.00% 21.00% 13.00% 14.00% 16.00% 16.00% 17.00% 64.00% 79.00% 62.00% 53.00% 54.00% 63.00% 58.00% 54.00% 52.00% 57.00% 46.00% 49.00% 49.00% 46.00% 46.00% 65.00% 56.00% 53.00% 57.00% 49.00% 52.00% 59.00% 58.00% 61.00% 59.00% 52.00% 60.00% 57.00% 57.00% 52.00% 49.00% 47.00% 44.00% 48.00% 50.00% 51.00% 49.00% 51.00% 46.00% 50.00% 56.00% 48.00% 60.00% 58.00% 54.00% 56.00% ------ 48.00% 58.00% 58.00% 48.00% 54.00% 57.00% 48.00% 47.00% 58.00% 59.00% 45.00% 55.00% 59.00% 61.00% 52.00% 54.00% 55.00% 44.00% 54.00% 47.00% 49.00% 58.00% 48.00% 51.00% 47.00% 47.00% 58.00% 54.00% 46.00% 58.00% 41.00% 56.00% 50.00% 57.00% 48.59%
47.00% 46.00% 46.00% 10.00% 34.00% 17.00% 13.00% 15.00% 20.00% 44.00% 43.00% 44.00% 53.00% 17.00%  6.00% 14.00% 21.00% 20.00% 25.00% 72.00% 74.00% 62.00% 49.00% 54.00% 57.00% 51.00% 46.00% 63.00% 54.00% 49.00% 69.00% 56.00% 64.00% 57.00% 57.00% 53.00% 59.00% 50.00% 56.00% 58.00% 52.00% 54.00% 62.00% 55.00% 47.00% 54.00% 57.00% 48.00% 58.00% 56.00% 42.00% 34.00% 42.00% 48.00% 40.00% 47.00% 56.00% 52.00% 53.00% 48.00% 46.00% 52.00% 59.00% 58.00% 56.00% 59.00% ------ 55.00% 51.00% 49.00% 51.00% 51.00% 51.00% 46.00% 46.00% 51.00% 50.00% 47.00% 48.00% 55.00% 47.00% 54.00% 48.00% 49.00% 60.00% 52.00% 48.00% 51.00% 49.00% 47.00% 47.00% 53.00% 52.00% 47.00% 52.00% 58.00% 64.00% 53.00% 50.00% 49.00% 48.09%
48.00% 44.00% 44.00% 14.00% 37.00% 15.00% 23.00% 21.00% 11.00% 43.00% 39.00% 42.00% 43.00% 15.00% 18.00% 17.00% 14.00% 17.00% 15.00% 71.00% 75.00% 67.00% 60.00% 59.00% 60.00% 54.00% 56.00% 64.00% 53.00% 53.00% 58.00% 53.00% 64.00% 60.00% 57.00% 62.00% 59.00% 60.00% 58.00% 59.00% 60.00% 43.00% 55.00% 48.00% 49.00% 48.00% 59.00% 55.00% 49.00% 56.00% 67.00% 49.00% 51.00% 36.00% 53.00% 58.00% 56.00% 57.00% 53.00% 54.00% 49.00% 46.00% 50.00% 57.00% 47.00% 53.00% 57.00% ------ 49.00% 53.00% 60.00% 56.00% 54.00% 41.00% 44.00% 55.00% 50.00% 55.00% 59.00% 51.00% 47.00% 51.00% 45.00% 50.00% 47.00% 54.00% 51.00% 49.00% 55.00% 49.00% 55.00% 61.00% 50.00% 43.00% 56.00% 52.00% 52.00% 57.00% 56.00% 47.00% 49.00%
45.00% 62.00% 41.00% 16.00% 31.00% 14.00% 21.00% 15.00% 16.00% 45.00% 43.00% 41.00% 43.00% 16.00% 14.00% 19.00% 17.00% 14.00% 24.00% 64.00% 81.00% 70.00% 64.00% 55.00% 52.00% 53.00% 62.00% 50.00% 52.00% 49.00% 45.00% 52.00% 63.00% 64.00% 64.00% 49.00% 57.00% 58.00% 43.00% 55.00% 57.00% 55.00% 60.00% 57.00% 51.00% 46.00% 50.00% 56.00% 50.00% 53.00% 52.00% 52.00% 54.00% 43.00% 51.00% 60.00% 55.00% 49.00% 54.00% 58.00% 55.00% 51.00% 50.00% 60.00% 47.00% 52.00% 52.00% 59.00% ------ 49.00% 55.00% 53.00% 52.00% 48.00% 51.00% 54.00% 54.00% 51.00% 40.00% 50.00% 57.00% 67.00% 47.00% 44.00% 50.00% 51.00% 40.00% 56.00% 40.00% 55.00% 44.00% 51.00% 63.00% 57.00% 59.00% 50.00% 50.00% 51.00% 53.00% 51.00% 48.70%
42.00% 42.00% 54.00%  8.00% 40.00% 14.00% 19.00% 18.00% 13.00% 45.00% 45.00% 49.00% 42.00% 28.00%  8.00% 15.00% 16.00% 21.00% 18.00% 73.00% 72.00% 67.00% 61.00% 65.00% 59.00% 61.00% 59.00% 61.00% 58.00% 57.00% 56.00% 50.00% 61.00% 54.00% 50.00% 57.00% 48.00% 65.00% 59.00% 64.00% 61.00% 59.00% 65.00% 67.00% 54.00% 65.00% 53.00% 59.00% 60.00% 55.00% 58.00% 41.00% 44.00% 51.00% 62.00% 47.00% 52.00% 51.00% 62.00% 57.00% 57.00% 65.00% 61.00% 53.00% 58.00% 59.00% 51.00% 47.00% 59.00% ------ 49.00% 49.00% 57.00% 59.00% 53.00% 56.00% 58.00% 58.00% 58.00% 56.00% 48.00% 56.00% 55.00% 56.00% 54.00% 51.00% 57.00% 54.00% 53.00% 55.00% 47.00% 57.00% 53.00% 52.00% 52.00% 58.00% 62.00% 60.00% 54.00% 56.00% 51.21%
49.00% 45.00% 50.00% 16.00% 38.00% 15.00% 19.00% 16.00% 19.00% 52.00% 45.00% 52.00% 44.00% 12.00% 23.00% 22.00% 20.00% 15.00% 24.00% 56.00% 76.00% 65.00% 53.00% 50.00% 56.00% 57.00% 56.00% 49.00% 58.00% 58.00% 53.00% 53.00% 66.00% 62.00% 58.00% 67.00% 60.00% 61.00% 58.00% 51.00% 62.00% 54.00% 50.00% 54.00% 53.00% 59.00% 57.00% 56.00% 51.00% 47.00% 57.00% 49.00% 47.00% 56.00% 47.00% 51.00% 59.00% 51.00% 54.00% 53.00% 52.00% 52.00% 57.00% 63.00% 55.00% 57.00% 52.00% 57.00% 61.00% 45.00% ------ 55.00% 54.00% 48.00% 65.00% 51.00% 51.00% 62.00% 45.00% 51.00% 59.00% 51.00% 58.00% 60.00% 60.00% 51.00% 49.00% 52.00% 49.00% 56.00% 44.00% 46.00% 46.00% 48.00% 46.00% 56.00% 53.00% 64.00% 55.00% 48.00% 50.00%
56.00% 55.00% 46.00%  8.00% 40.00% 20.00% 18.00% 13.00% 15.00% 38.00% 38.00% 39.00% 40.00% 17.00% 20.00% 16.00% 18.00% 17.00% 24.00% 73.00% 74.00% 72.00% 54.00% 47.00% 62.00% 55.00% 57.00% 56.00% 54.00% 49.00% 43.00% 64.00% 54.00% 58.00% 50.00% 58.00% 63.00% 58.00% 51.00% 60.00% 61.00% 55.00% 54.00% 54.00% 56.00% 59.00% 46.00% 57.00% 58.00% 58.00% 53.00% 58.00% 45.00% 43.00% 47.00% 57.00% 50.00% 47.00% 48.00% 54.00% 51.00% 57.00% 61.00% 59.00% 59.00% 58.00% 56.00% 53.00% 48.00% 55.00% 60.00% ------ 51.00% 59.00% 55.00% 58.00% 47.00% 49.00% 53.00% 48.00% 55.00% 55.00% 48.00% 45.00% 47.00% 47.00% 45.00% 60.00% 52.00% 56.00% 48.00% 46.00% 52.00% 54.00% 53.00% 61.00% 64.00% 58.00% 48.00% 47.00% 49.37%
49.00% 51.00% 42.00% 11.00% 33.00% 17.00% 25.00% 15.00% 17.00% 48.00% 41.00% 39.00% 32.00% 15.00% 16.00% 22.00% 20.00% 28.00% 19.00% 61.00% 74.00% 60.00% 65.00% 53.00% 65.00% 53.00% 58.00% 55.00% 54.00% 45.00% 52.00% 58.00% 57.00% 56.00% 57.00% 63.00% 58.00% 62.00% 61.00% 49.00% 62.00% 46.00% 57.00% 50.00% 50.00% 48.00% 55.00% 53.00% 57.00% 61.00% 51.00% 45.00% 44.00% 55.00% 48.00% 55.00% 41.00% 61.00% 48.00% 63.00% 49.00% 42.00% 55.00% 62.00% 56.00% 61.00% 60.00% 53.00% 53.00% 50.00% 58.00% 51.00% ------ 50.00% 44.00% 53.00% 56.00% 59.00% 52.00% 51.00% 56.00% 45.00% 54.00% 57.00% 56.00% 49.00% 56.00% 48.00% 55.00% 51.00% 52.00% 52.00% 43.00% 59.00% 62.00% 50.00% 53.00% 54.00% 58.00% 49.00% 49.29%
49.00% 50.00% 45.00% 10.00% 34.00% 18.00% 20.00% 14.00% 15.00% 43.00% 43.00% 44.00% 43.00% 18.00% 10.00% 20.00% 23.00% 24.00% 26.00% 62.00% 72.00% 65.00% 65.00% 61.00% 62.00% 66.00% 58.00% 62.00% 60.00% 64.00% 69.00% 60.00% 55.00% 61.00% 58.00% 59.00% 63.00% 55.00% 57.00% 54.00% 57.00% 50.00% 64.00% 53.00% 60.00% 52.00% 59.00% 58.00% 55.00% 58.00% 55.00% 52.00% 48.00% 57.00% 53.00% 60.00% 64.00% 49.00% 63.00% 61.00% 57.00% 56.00% 56.00% 65.00% 59.00% 54.00% 58.00% 53.00% 64.00% 52.00% 52.00% 66.00% 47.00% ------ 56.00% 62.00% 55.00% 50.00% 55.00% 54.00% 49.00% 64.00% 60.00% 59.00% 62.00% 54.00% 54.00% 58.00% 49.00% 51.00% 54.00% 57.00% 51.00% 55.00% 51.00% 57.00% 52.00% 60.00% 60.00% 64.00% 52.09%
53.00% 47.00% 54.00% 15.00% 38.00% 20.00% 14.00% 19.00% 13.00% 37.00% 51.00% 45.00% 41.00% 11.00% 15.00% 15.00% 24.00% 24.00% 17.00% 61.00% 75.00% 66.00% 54.00% 54.00% 50.00% 57.00% 52.00% 55.00% 54.00% 65.00% 56.00% 61.00% 50.00% 52.00% 65.00% 62.00% 59.00% 56.00% 50.00% 57.00% 61.00% 53.00% 55.00% 49.00% 60.00% 52.00% 52.00% 57.00% 52.00% 52.00% 55.00% 47.00% 40.00% 46.00% 58.00% 57.00% 41.00% 52.00% 52.00% 42.00% 47.00% 48.00% 52.00% 59.00% 59.00% 52.00% 57.00% 61.00% 49.00% 56.00% 51.00% 51.00% 60.00% 55.00% ------ 51.00% 50.00% 57.00% 51.00% 67.00% 51.00% 65.00% 46.00% 59.00% 55.00% 48.00% 61.00% 65.00% 54.00% 62.00% 45.00% 60.00% 51.00% 55.00% 50.00% 58.00% 51.00% 51.00% 56.00% 52.00% 49.75%
53.00% 44.00% 43.00% 16.00% 39.00% 18.00% 22.00% 15.00% 16.00% 39.00% 40.00% 48.00% 40.00% 12.00% 14.00% 23.00% 24.00% 24.00% 15.00% 70.00% 77.00% 67.00% 54.00% 49.00% 54.00% 58.00% 54.00% 49.00% 56.00% 56.00% 49.00% 53.00% 62.00% 57.00% 60.00% 55.00% 61.00% 59.00% 65.00% 59.00% 62.00% 54.00% 57.00% 56.00% 57.00% 55.00% 57.00% 53.00% 46.00% 56.00% 52.00% 51.00% 45.00% 50.00% 45.00% 55.00% 58.00% 47.00% 59.00% 51.00% 56.00% 43.00% 53.00% 52.00% 59.00% 52.00% 55.00% 57.00% 61.00% 44.00% 58.00% 45.00% 54.00% 56.00% 66.00% ------ 59.00% 58.00% 54.00% 51.00% 56.00% 52.00% 56.00% 48.00% 51.00% 45.00% 56.00% 60.00% 43.00% 54.00% 49.00% 65.00% 43.00% 45.00% 47.00% 56.00% 57.00% 49.00% 56.00% 57.00% 49.63%
37.00% 43.00% 49.00%  9.00% 35.00% 21.00% 19.00% 19.00% 21.00% 44.00% 52.00% 41.00% 41.00% 16.00% 17.00% 23.00% 17.00% 17.00% 17.00% 67.00% 73.00% 57.00% 59.00% 54.00% 69.00% 55.00% 60.00% 64.00% 58.00% 56.00% 56.00% 64.00% 56.00% 66.00% 55.00% 57.00% 60.00% 70.00% 61.00% 55.00% 58.00% 61.00% 56.00% 55.00% 51.00% 52.00% 53.00% 63.00% 46.00% 47.00% 57.00% 47.00% 45.00% 47.00% 52.00% 55.00% 54.00% 56.00% 63.00% 64.00% 52.00% 55.00% 59.00% 57.00% 60.00% 59.00% 48.00% 50.00% 59.00% 63.00% 51.00% 58.00% 51.00% 50.00% 53.00% 55.00% ------ 51.00% 49.00% 53.00% 59.00% 68.00% 59.00% 56.00% 45.00% 52.00% 59.00% 52.00% 48.00% 56.00% 52.00% 55.00% 53.00% 57.00% 51.00% 52.00% 56.00% 61.00% 55.00% 51.00% 50.73%
50.00% 47.00% 44.00% 16.00% 33.00% 18.00% 24.00% 22.00% 16.00% 42.00% 50.00% 51.00% 38.00% 12.00% 11.00% 22.00% 21.00% 20.00% 20.00% 68.00% 70.00% 63.00% 56.00% 55.00% 55.00% 56.00% 63.00% 58.00% 57.00% 50.00% 47.00% 66.00% 62.00% 61.00% 49.00% 57.00% 56.00% 61.00% 62.00% 57.00% 60.00% 50.00% 62.00% 42.00% 56.00% 50.00% 55.00% 61.00% 55.00% 60.00% 54.00% 51.00% 62.00% 49.00% 55.00% 41.00% 59.00% 58.00% 57.00% 41.00% 47.00% 38.00% 52.00% 51.00% 56.00% 47.00% 58.00% 60.00% 42.00% 51.00% 61.00% 55.00% 50.00% 51.00% 52.00% 54.00% 57.00% ------ 60.00% 55.00% 50.00% 52.00% 53.00% 58.00% 51.00% 57.00% 44.00% 47.00% 47.00% 44.00% 55.00% 58.00% 57.00% 51.00% 49.00% 59.00% 55.00% 54.00% 53.00% 55.00% 49.60%
46.00% 44.00% 50.00% 18.00% 41.00% 20.00% 21.00% 14.00%  7.00% 38.00% 47.00% 53.00% 49.00% 12.00% 14.00% 20.00% 18.00% 18.00% 16.00% 63.00% 70.00% 63.00% 53.00% 51.00% 50.00% 58.00% 55.00% 57.00% 57.00% 56.00% 53.00% 59.00% 65.00% 49.00% 54.00% 58.00% 61.00% 66.00% 59.00% 61.00% 49.00% 61.00% 60.00% 49.00% 50.00% 47.00% 54.00% 43.00% 47.00% 50.00% 49.00% 46.00% 46.00% 42.00% 49.00% 62.00% 51.00% 45.00% 55.00% 50.00% 46.00% 55.00% 55.00% 56.00% 59.00% 60.00% 52.00% 57.00% 60.00% 51.00% 53.00% 60.00% 49.00% 45.00% 55.00% 45.00% 61.00% 52.00% ------ 54.00% 59.00% 48.00% 57.00% 65.00% 54.00% 55.00% 48.00% 55.00% 48.00% 58.00% 52.00% 50.00% 57.00% 59.00% 56.00% 58.00% 61.00% 56.00% 55.00% 55.00% 49.49%
40.00% 51.00% 45.00% 19.00% 46.00% 21.00% 16.00% 12.00% 15.00% 42.00% 52.00% 47.00% 42.00% 20.00% 18.00% 15.00% 19.00% 20.00% 26.00% 61.00% 73.00% 67.00% 60.00% 52.00% 63.00% 58.00% 58.00% 59.00% 63.00% 59.00% 56.00% 63.00% 39.00% 63.00% 60.00% 54.00% 56.00% 57.00% 63.00% 62.00% 64.00% 53.00% 66.00% 52.00% 53.00% 67.00% 60.00% 49.00% 62.00% 48.00% 54.00% 46.00% 55.00% 40.00% 51.00% 53.00% 54.00% 55.00% 56.00% 57.00% 53.00% 56.00% 58.00% 56.00% 65.00% 56.00% 47.00% 56.00% 54.00% 51.00% 53.00% 58.00% 53.00% 52.00% 59.00% 54.00% 46.00% 57.00% 56.00% ------ 49.00% 57.00% 54.00% 48.00% 63.00% 58.00% 53.00% 61.00% 46.00% 52.00% 58.00% 52.00% 55.00% 57.00% 63.00% 55.00% 64.00% 56.00% 53.00% 58.00% 51.10%
49.00% 43.00% 57.00% 12.00% 44.00% 15.00% 16.00% 21.00% 24.00% 39.00% 37.00% 36.00% 46.00% 15.00% 21.00% 13.00% 20.00% 19.00% 24.00% 69.00% 71.00% 69.00% 56.00% 61.00% 57.00% 50.00% 58.00% 55.00% 47.00% 52.00% 55.00% 51.00% 55.00% 54.00% 56.00% 53.00% 69.00% 47.00% 61.00% 60.00% 58.00% 56.00% 55.00% 49.00% 55.00% 52.00% 53.00% 54.00% 55.00% 51.00% 51.00% 49.00% 45.00% 50.00% 40.00% 57.00% 57.00% 51.00% 58.00% 49.00% 49.00% 63.00% 61.00% 57.00% 47.00% 55.00% 50.00% 57.00% 45.00% 49.00% 58.00% 50.00% 52.00% 42.00% 50.00% 54.00% 57.00% 58.00% 49.00% 44.00% ------ 56.00% 49.00% 49.00% 52.00% 56.00% 49.00% 55.00% 50.00% 49.00% 51.00% 52.00% 51.00% 56.00% 44.00% 56.00% 63.00% 60.00% 48.00% 55.00% 48.99%
47.00% 53.00% 44.00% 13.00% 26.00% 20.00% 17.00% 18.00% 17.00% 47.00% 35.00% 42.00% 39.00% 13.00% 10.00% 18.00% 15.00% 19.00% 25.00% 66.00% 78.00% 61.00% 56.00% 55.00% 54.00% 52.00% 61.00% 54.00% 59.00% 54.00% 59.00% 62.00% 54.00% 48.00% 59.00% 52.00% 57.00% 65.00% 68.00% 55.00% 64.00% 46.00% 53.00% 52.00% 58.00% 59.00% 51.00% 54.00% 46.00% 54.00% 56.00% 50.00% 49.00% 53.00% 48.00% 53.00% 50.00% 45.00% 53.00% 48.00% 47.00% 49.00% 56.00% 52.00% 53.00% 50.00% 52.00% 52.00% 63.00% 56.00% 56.00% 47.00% 49.00% 52.00% 48.00% 57.00% 57.00% 45.00% 49.00% 56.00% 54.00% ------ 49.00% 57.00% 56.00% 58.00% 53.00% 59.00% 47.00% 60.00% 60.00% 57.00% 59.00% 53.00% 57.00% 51.00% 62.00% 48.00% 57.00% 50.00% 49.31%
47.00% 49.00% 45.00% 14.00% 36.00% 24.00% 30.00% 18.00% 19.00% 46.00% 39.00% 43.00% 42.00% 16.00%  9.00% 10.00% 13.00% 19.00% 23.00% 63.00% 76.00% 69.00% 63.00% 55.00% 52.00% 64.00% 60.00% 49.00% 50.00% 62.00% 54.00% 50.00% 54.00% 49.00% 51.00% 54.00% 55.00% 61.00% 61.00% 57.00% 52.00% 50.00% 53.00% 55.00% 57.00% 58.00% 48.00% 45.00% 51.00% 55.00% 54.00% 51.00% 45.00% 52.00% 54.00% 47.00% 50.00% 43.00% 44.00% 47.00% 54.00% 54.00% 57.00% 59.00% 64.00% 49.00% 48.00% 53.00% 55.00% 47.00% 57.00% 64.00% 57.00% 55.00% 49.00% 56.00% 58.00% 51.00% 48.00% 53.00% 61.00% 55.00% ------ 56.00% 49.00% 51.00% 49.00% 58.00% 47.00% 55.00% 54.00% 53.00% 54.00% 62.00% 56.00% 49.00% 55.00% 46.00% 57.00% 46.00% 49.12%
47.00% 46.00% 48.00% 12.00% 39.00% 12.00% 21.00% 15.00% 18.00% 45.00% 33.00% 47.00% 39.00% 10.00% 19.00% 21.00% 24.00% 22.00% 18.00% 70.00% 75.00% 67.00% 48.00% 62.00% 56.00% 54.00% 56.00% 48.00% 60.00% 56.00% 53.00% 52.00% 56.00% 56.00% 62.00% 48.00% 48.00% 61.00% 64.00% 57.00% 62.00% 54.00% 63.00% 57.00% 50.00% 49.00% 57.00% 65.00% 48.00% 56.00% 54.00% 43.00% 50.00% 43.00% 49.00% 58.00% 53.00% 48.00% 55.00% 56.00% 49.00% 49.00% 65.00% 57.00% 47.00% 50.00% 49.00% 48.00% 57.00% 55.00% 59.00% 71.00% 49.00% 53.00% 52.00% 53.00% 56.00% 50.00% 42.00% 53.00% 65.00% 52.00% 46.00% ------ 51.00% 60.00% 50.00% 51.00% 49.00% 59.00% 56.00% 58.00% 55.00% 51.00% 42.00% 54.00% 52.00% 57.00% 54.00% 47.00% 49.37%
55.00% 52.00% 50.00% 12.00% 36.00% 22.00% 25.00% 17.00% 18.00% 44.00% 47.00% 41.00% 40.00% 19.00% 21.00% 19.00% 12.00% 13.00% 25.00% 72.00% 71.00% 63.00% 53.00% 59.00% 56.00% 56.00% 53.00% 54.00% 50.00% 56.00% 57.00% 62.00% 57.00% 55.00% 54.00% 61.00% 54.00% 58.00% 60.00% 61.00% 51.00% 53.00% 53.00% 61.00% 52.00% 53.00% 46.00% 62.00% 61.00% 54.00% 58.00% 50.00% 46.00% 41.00% 50.00% 60.00% 61.00% 57.00% 52.00% 48.00% 42.00% 45.00% 53.00% 54.00% 53.00% 52.00% 55.00% 61.00% 55.00% 56.00% 39.00% 55.00% 52.00% 53.00% 58.00% 53.00% 54.00% 56.00% 52.00% 61.00% 52.00% 58.00% 45.00% 52.00% ------ 59.00% 49.00% 49.00% 43.00% 60.00% 42.00% 59.00% 49.00% 54.00% 46.00% 51.00% 54.00% 57.00% 53.00% 56.00% 49.56%
48.00% 51.00% 53.00% 15.00% 35.00% 22.00% 27.00% 25.00% 15.00% 41.00% 38.00% 44.00% 40.00% 16.00% 14.00% 21.00% 16.00% 23.00% 24.00% 71.00% 72.00% 66.00% 54.00% 56.00% 60.00% 54.00% 63.00% 61.00% 56.00% 55.00% 53.00% 56.00% 51.00% 53.00% 54.00% 53.00% 60.00% 57.00% 62.00% 62.00% 58.00% 58.00% 60.00% 49.00% 54.00% 53.00% 59.00% 48.00% 54.00% 49.00% 50.00% 50.00% 51.00% 49.00% 55.00% 62.00% 54.00% 52.00% 58.00% 50.00% 49.00% 56.00% 59.00% 53.00% 48.00% 49.00% 49.00% 62.00% 52.00% 39.00% 53.00% 50.00% 61.00% 46.00% 54.00% 48.00% 52.00% 47.00% 51.00% 53.00% 52.00% 64.00% 56.00% 50.00% 56.00% ------ 47.00% 54.00% 50.00% 42.00% 57.00% 56.00% 51.00% 51.00% 57.00% 51.00% 47.00% 52.00% 46.00% 51.00% 49.40%
56.00% 55.00% 50.00% 24.00% 51.00% 27.00% 27.00% 17.00% 16.00% 52.00% 52.00% 46.00% 49.00% 19.00% 18.00% 19.00% 25.00% 26.00% 25.00% 67.00% 71.00% 63.00% 59.00% 62.00% 59.00% 54.00% 55.00% 61.00% 60.00% 54.00% 57.00% 57.00% 58.00% 61.00% 75.00% 63.00% 54.00% 65.00% 66.00% 58.00% 66.00% 59.00% 61.00% 54.00% 61.00% 55.00% 54.00% 42.00% 52.00% 56.00% 63.00% 58.00% 54.00% 59.00% 53.00% 59.00% 54.00% 43.00% 58.00% 55.00% 48.00% 57.00% 60.00% 64.00% 50.00% 49.00% 52.00% 50.00% 58.00% 49.00% 48.00% 53.00% 60.00% 49.00% 65.00% 53.00% 60.00% 54.00% 65.00% 53.00% 60.00% 57.00% 56.00% 56.00% 64.00% 61.00% ------ 50.00% 46.00% 53.00% 58.00% 53.00% 55.00% 56.00% 47.00% 50.00% 59.00% 65.00% 50.00% 58.00% 52.53%
49.00% 49.00% 57.00%  7.00% 46.00% 22.00% 21.00% 22.00% 22.00% 44.00% 39.00% 45.00% 44.00% 22.00% 18.00% 21.00% 21.00% 17.00% 23.00% 70.00% 68.00% 65.00% 61.00% 58.00% 47.00% 65.00% 48.00% 63.00% 56.00% 56.00% 62.00% 53.00% 61.00% 50.00% 54.00% 55.00% 52.00% 52.00% 57.00% 59.00% 56.00% 56.00% 60.00% 54.00% 44.00% 49.00% 51.00% 53.00% 49.00% 63.00% 63.00% 60.00% 46.00% 45.00% 49.00% 51.00% 59.00% 52.00% 55.00% 59.00% 57.00% 59.00% 50.00% 48.00% 54.00% 57.00% 54.00% 49.00% 57.00% 63.00% 57.00% 57.00% 57.00% 51.00% 50.00% 54.00% 56.00% 59.00% 63.00% 54.00% 57.00% 55.00% 55.00% 49.00% 56.00% 50.00% 44.00% ------ 49.00% 50.00% 64.00% 60.00% 54.00% 53.00% 55.00% 53.00% 55.00% 56.00% 54.00% 56.00% 50.57%
48.00% 45.00% 45.00% 26.00% 31.00% 27.00% 31.00% 27.00% 27.00% 47.00% 52.00% 38.00% 36.00% 30.00% 28.00% 28.00% 30.00% 28.00% 29.00% 59.00% 73.00% 69.00% 59.00% 62.00% 60.00% 60.00% 67.00% 55.00% 59.00% 54.00% 56.00% 59.00% 59.00% 53.00% 63.00% 57.00% 62.00% 57.00% 77.00% 58.00% 58.00% 58.00% 63.00% 54.00% 57.00% 69.00% 59.00% 55.00% 66.00% 57.00% 54.00% 52.00% 54.00% 56.00% 58.00% 69.00% 60.00% 56.00% 58.00% 53.00% 56.00% 57.00% 63.00% 57.00% 59.00% 49.00% 63.00% 58.00% 63.00% 59.00% 59.00% 52.00% 57.00% 59.00% 60.00% 62.00% 46.00% 60.00% 63.00% 52.00% 48.00% 49.00% 61.00% 61.00% 60.00% 59.00% 57.00% 64.00% ------ 65.00% 62.00% 53.00% 64.00% 59.00% 56.00% 60.00% 55.00% 63.00% 60.00% 61.00% 54.22%
43.00% 50.00% 46.00% 13.00% 35.00% 21.00% 22.00% 18.00% 14.00% 53.00% 51.00% 45.00% 45.00% 17.00% 19.00% 16.00% 23.00% 19.00% 19.00% 67.00% 70.00% 61.00% 47.00% 61.00% 60.00% 59.00% 48.00% 52.00% 61.00% 49.00% 53.00% 56.00% 59.00% 56.00% 59.00% 53.00% 54.00% 58.00% 58.00% 57.00% 52.00% 53.00% 58.00% 48.00% 51.00% 54.00% 52.00% 55.00% 49.00% 50.00% 60.00% 52.00% 46.00% 47.00% 52.00% 60.00% 59.00% 50.00% 51.00% 53.00% 62.00% 59.00% 64.00% 50.00% 57.00% 54.00% 53.00% 55.00% 54.00% 59.00% 53.00% 51.00% 58.00% 56.00% 58.00% 56.00% 50.00% 39.00% 53.00% 46.00% 60.00% 52.00% 47.00% 55.00% 63.00% 58.00% 43.00% 52.00% 47.00% ------ 53.00% 51.00% 57.00% 50.00% 52.00% 59.00% 50.00% 48.00% 48.00% 61.00% 49.62%
50.00% 45.00% 55.00% 20.00% 35.00% 17.00% 19.00% 16.00% 18.00% 40.00% 44.00% 46.00% 36.00% 15.00% 12.00% 20.00% 21.00% 21.00% 20.00% 62.00% 79.00% 58.00% 61.00% 49.00% 60.00% 50.00% 53.00% 57.00% 57.00% 63.00% 57.00% 54.00% 54.00% 58.00% 66.00% 58.00% 50.00% 61.00% 64.00% 56.00% 73.00% 64.00% 54.00% 46.00% 55.00% 47.00% 47.00% 48.00% 54.00% 44.00% 45.00% 46.00% 42.00% 50.00% 55.00% 54.00% 45.00% 53.00% 46.00% 56.00% 51.00% 48.00% 53.00% 53.00% 48.00% 55.00% 47.00% 58.00% 62.00% 53.00% 53.00% 55.00% 54.00% 57.00% 53.00% 60.00% 45.00% 48.00% 53.00% 64.00% 55.00% 56.00% 60.00% 45.00% 58.00% 55.00% 48.00% 52.00% 49.00% 57.00% ------ 55.00% 46.00% 52.00% 59.00% 57.00% 53.00% 47.00% 60.00% 49.00% 49.33%
49.00% 54.00% 59.00% 12.00% 38.00% 21.00% 21.00% 21.00% 17.00% 48.00% 51.00% 51.00% 44.00% 13.00% 12.00% 20.00% 16.00% 25.00% 19.00% 60.00% 69.00% 66.00% 59.00% 52.00% 54.00% 54.00% 63.00% 56.00% 56.00% 51.00% 60.00% 60.00% 60.00% 54.00% 45.00% 61.00% 52.00% 59.00% 56.00% 57.00% 59.00% 53.00% 57.00% 51.00% 47.00% 61.00% 59.00% 48.00% 53.00% 52.00% 55.00% 43.00% 45.00% 53.00% 48.00% 47.00% 58.00% 48.00% 53.00% 66.00% 50.00% 54.00% 47.00% 65.00% 56.00% 48.00% 57.00% 62.00% 48.00% 55.00% 52.00% 55.00% 55.00% 54.00% 61.00% 48.00% 50.00% 49.00% 51.00% 57.00% 50.00% 55.00% 51.00% 52.00% 49.00% 53.00% 46.00% 53.00% 49.00% 48.00% 55.00% ------ 53.00% 62.00% 52.00% 58.00% 60.00% 52.00% 62.00% 54.00% 49.89%
51.00% 48.00% 46.00% 15.00% 26.00% 15.00% 20.00% 17.00% 18.00% 42.00% 40.00% 41.00% 47.00% 12.00% 21.00% 19.00% 23.00% 20.00% 20.00% 70.00% 68.00% 62.00% 52.00% 56.00% 57.00% 62.00% 58.00% 57.00% 58.00% 49.00% 63.00% 52.00% 51.00% 59.00% 64.00% 53.00% 48.00% 56.00% 54.00% 62.00% 49.00% 49.00% 50.00% 53.00% 52.00% 46.00% 49.00% 62.00% 60.00% 49.00% 56.00% 40.00% 48.00% 49.00% 49.00% 46.00% 46.00% 50.00% 59.00% 55.00% 62.00% 46.00% 52.00% 53.00% 54.00% 54.00% 51.00% 51.00% 57.00% 55.00% 55.00% 54.00% 53.00% 50.00% 60.00% 49.00% 56.00% 54.00% 59.00% 53.00% 58.00% 57.00% 59.00% 60.00% 55.00% 48.00% 57.00% 65.00% 50.00% 61.00% 56.00% 60.00% ------ 48.00% 48.00% 53.00% 50.00% 43.00% 45.00% 49.00% 49.18%
48.00% 47.00% 46.00%  8.00% 40.00% 23.00% 22.00% 16.00% 12.00% 40.00% 39.00% 49.00% 50.00% 18.00% 19.00% 22.00% 21.00% 23.00% 13.00% 65.00% 79.00% 64.00% 50.00% 58.00% 63.00% 48.00% 58.00% 53.00% 59.00% 72.00% 46.00% 54.00% 59.00% 52.00% 49.00% 53.00% 55.00% 59.00% 55.00% 64.00% 56.00% 52.00% 48.00% 56.00% 60.00% 61.00% 53.00% 57.00% 48.00% 46.00% 56.00% 51.00% 46.00% 39.00% 52.00% 45.00% 54.00% 45.00% 50.00% 55.00% 50.00% 54.00% 46.00% 51.00% 44.00% 61.00% 61.00% 52.00% 60.00% 49.00% 60.00% 58.00% 50.00% 58.00% 46.00% 60.00% 54.00% 56.00% 51.00% 61.00% 50.00% 52.00% 60.00% 48.00% 51.00% 51.00% 59.00% 51.00% 51.00% 49.00% 53.00% 60.00% 52.00% ------ 57.00% 50.00% 55.00% 51.00% 44.00% 57.00% 49.33%
47.00% 39.00% 48.00%  9.00% 36.00% 28.00% 14.00% 21.00% 18.00% 44.00% 47.00% 44.00% 44.00% 17.00% 19.00% 22.00% 18.00% 23.00% 21.00% 69.00% 75.00% 65.00% 63.00% 52.00% 59.00% 61.00% 58.00% 58.00% 56.00% 53.00% 61.00% 49.00% 52.00% 57.00% 60.00% 53.00% 61.00% 55.00% 58.00% 50.00% 57.00% 60.00% 56.00% 53.00% 53.00% 56.00% 51.00% 56.00% 46.00% 56.00% 50.00% 48.00% 56.00% 47.00% 50.00% 53.00% 53.00% 51.00% 62.00% 48.00% 51.00% 61.00% 54.00% 55.00% 62.00% 59.00% 56.00% 52.00% 59.00% 62.00% 69.00% 64.00% 57.00% 54.00% 59.00% 59.00% 55.00% 55.00% 61.00% 49.00% 54.00% 48.00% 54.00% 49.00% 59.00% 63.00% 53.00% 63.00% 58.00% 58.00% 55.00% 53.00% 53.00% 52.00% ------ 50.00% 54.00% 57.00% 53.00% 58.00% 50.94%
55.00% 49.00% 44.00% 16.00% 44.00% 19.00% 15.00% 17.00% 24.00% 41.00% 40.00% 50.00% 32.00% 10.00% 13.00% 23.00% 15.00% 21.00% 23.00% 67.00% 78.00% 69.00% 62.00% 57.00% 63.00% 50.00% 50.00% 61.00% 49.00% 59.00% 67.00% 54.00% 47.00% 64.00% 67.00% 53.00% 56.00% 64.00% 65.00% 56.00% 59.00% 50.00% 56.00% 55.00% 55.00% 56.00% 60.00% 49.00% 42.00% 51.00% 57.00% 48.00% 50.00% 48.00% 54.00% 48.00% 69.00% 55.00% 52.00% 61.00% 42.00% 45.00% 55.00% 48.00% 51.00% 47.00% 55.00% 54.00% 64.00% 60.00% 53.00% 55.00% 52.00% 56.00% 53.00% 59.00% 54.00% 49.00% 58.00% 40.00% 51.00% 57.00% 45.00% 58.00% 50.00% 53.00% 46.00% 55.00% 55.00% 68.00% 53.00% 50.00% 53.00% 56.00% 49.00% ------ 60.00% 57.00% 59.00% 56.00% 50.15%
49.00% 50.00% 57.00%  8.00% 46.00% 20.00% 23.00% 16.00% 15.00% 44.00% 54.00% 46.00% 47.00% 19.00% 14.00% 20.00% 19.00% 17.00% 18.00% 69.00% 76.00% 70.00% 58.00% 51.00% 64.00% 52.00% 49.00% 50.00% 59.00% 55.00% 55.00% 53.00% 59.00% 60.00% 58.00% 64.00% 56.00% 57.00% 59.00% 55.00% 58.00% 52.00% 60.00% 54.00% 50.00% 52.00% 55.00% 61.00% 53.00% 62.00% 59.00% 45.00% 47.00% 48.00% 50.00% 55.00% 58.00% 52.00% 50.00% 48.00% 47.00% 48.00% 55.00% 50.00% 54.00% 54.00% 54.00% 54.00% 58.00% 50.00% 57.00% 60.00% 52.00% 50.00% 61.00% 53.00% 51.00% 52.00% 57.00% 57.00% 57.00% 59.00% 65.00% 50.00% 50.00% 54.00% 53.00% 50.00% 43.00% 56.00% 49.00% 55.00% 51.00% 56.00% 56.00% 54.00% ------ 57.00% 52.00% 58.00% 50.29%
48.00% 57.00% 53.00% 14.00% 37.00% 22.00% 16.00% 16.00% 13.00% 44.00% 44.00% 38.00% 50.00% 20.00% 11.00% 20.00% 11.00% 16.00% 20.00% 61.00% 79.00% 65.00% 62.00% 61.00% 59.00% 51.00% 57.00% 58.00% 54.00% 49.00% 49.00% 67.00% 61.00% 61.00% 57.00% 54.00% 59.00% 60.00% 53.00% 63.00% 68.00% 57.00% 65.00% 57.00% 53.00% 60.00% 52.00% 53.00% 61.00% 54.00% 51.00% 53.00% 52.00% 50.00% 47.00% 53.00% 58.00% 49.00% 52.00% 57.00% 51.00% 47.00% 61.00% 48.00% 52.00% 57.00% 54.00% 58.00% 56.00% 51.00% 48.00% 53.00% 51.00% 50.00% 55.00% 53.00% 55.00% 44.00% 47.00% 56.00% 59.00% 67.00% 56.00% 52.00% 49.00% 51.00% 50.00% 56.00% 56.00% 56.00% 60.00% 60.00% 59.00% 50.00% 56.00% 51.00% 59.00% ------ 59.00% 56.00% 50.52%
50.00% 42.00% 49.00% 13.00% 37.00% 18.00% 21.00% 19.00% 23.00% 49.00% 40.00% 48.00% 47.00% 15.00% 17.00% 18.00% 20.00% 19.00% 12.00% 70.00% 68.00% 66.00% 54.00% 52.00% 60.00% 54.00% 67.00% 46.00% 53.00% 68.00% 54.00% 46.00% 56.00% 58.00% 51.00% 64.00% 57.00% 53.00% 51.00% 64.00% 53.00% 48.00% 60.00% 43.00% 49.00% 58.00% 42.00% 45.00% 53.00% 55.00% 50.00% 48.00% 44.00% 58.00% 51.00% 47.00% 48.00% 48.00% 51.00% 61.00% 49.00% 43.00% 52.00% 61.00% 55.00% 45.00% 52.00% 51.00% 55.00% 48.00% 53.00% 52.00% 54.00% 57.00% 50.00% 56.00% 49.00% 51.00% 63.00% 53.00% 49.00% 58.00% 46.00% 55.00% 54.00% 51.00% 47.00% 43.00% 52.00% 50.00% 48.00% 61.00% 51.00% 48.00% 50.00% 49.00% 50.00% 59.00% ------ 60.00% 48.60%
41.00% 56.00% 60.00% 10.00% 36.00% 21.00% 19.00% 13.00% 12.00% 39.00% 40.00% 38.00% 43.00% 22.00% 25.00% 20.00% 21.00% 20.00% 22.00% 66.00% 73.00% 62.00% 49.00% 56.00% 60.00% 56.00% 58.00% 57.00% 60.00% 62.00% 61.00% 62.00% 52.00% 65.00% 63.00% 66.00% 64.00% 60.00% 51.00% 61.00% 59.00% 57.00% 48.00% 43.00% 52.00% 53.00% 48.00% 63.00% 52.00% 57.00% 54.00% 45.00% 57.00% 58.00% 55.00% 60.00% 59.00% 48.00% 54.00% 62.00% 45.00% 59.00% 50.00% 59.00% 62.00% 55.00% 45.00% 50.00% 48.00% 51.00% 59.00% 58.00% 51.00% 47.00% 55.00% 54.00% 55.00% 46.00% 53.00% 48.00% 52.00% 58.00% 52.00% 54.00% 50.00% 54.00% 48.00% 55.00% 50.00% 50.00% 52.00% 58.00% 47.00% 51.00% 58.00% 60.00% 51.00% 57.00% 48.00% ------ 50.11%
