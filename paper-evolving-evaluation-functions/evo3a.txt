ELITISM 5
EVALUATOR_DRAFTS 10
EVALUATOR_ROUNDS 10
EVOLUTION_DRAFTS 100
EVOLUTION_ROUNDS 10
GENERATIONS 50
POPULATION 50
MUTATION_RATE 0.05
TreeIndividual

generation   1: 12.08s // best: TreeIndividual { card_node: FeatureHasDrain, state_node: FeatureOpNextTurnDraw }
generation   2: 15.78s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), OperatorAdd([Literal(0.7850957), FeatureHasCharge]), FeatureHasDrain, Literal(-0.45015574)]), state_node: OperatorMin([FeatureOpNextTurnDraw, FeatureOpCurrentMana]) }
generation   3: 15.40s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), OperatorAdd([Literal(0.7850957), FeatureHasCharge]), FeatureHasDrain, Literal(-0.45015574)]), state_node: OperatorMin([FeatureOpNextTurnDraw, FeatureOpCurrentMana]) }
generation   4: 11.28s // best: TreeIndividual { card_node: FeatureHasDrain, state_node: FeatureOpNextTurnDraw }
generation   5: 10.84s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, FeatureHasBreakthrough]), state_node: FeatureOpNextTurnDraw }
generation   6: 11.73s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, FeatureHasBreakthrough]), state_node: FeatureOpNextTurnDraw }
generation   7: 11.12s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), state_node: FeatureOpCurrentMana }
generation   8: 13.20s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, Literal(0.7850957)]), state_node: OperatorMin([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw]) }
generation   9: 12.21s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, Literal(0.7850957)]), state_node: OperatorMin([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw]) }
generation  10: 13.39s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, Literal(0.7850957)]), state_node: OperatorMin([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw]) }
generation  11: 12.95s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, Literal(0.7850957)]), state_node: OperatorMin([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw]) }
generation  12: 13.68s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), FeatureHasDrain, Literal(0.703321), Literal(-0.45015574)]), state_node: OperatorMin([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw]) }
generation  13: 13.83s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, Literal(0.7850957)]), state_node: OperatorMin([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw]) }
generation  14: 14.53s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), FeatureHasDrain, Literal(-0.45015574)]), state_node: FeatureOpNextTurnDraw }
generation  15: 15.46s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), FeatureHasDrain, Literal(-0.45015574)]), state_node: FeatureOpNextTurnDraw }
generation  16: 15.15s // best: TreeIndividual { card_node: OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorMax([Literal(0.703321), OperatorNeg(FeatureHasGuard), FeatureHasDrain]), Literal(0.703321)]), state_node: FeatureMeDecksize }
generation  17: 18.46s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), FeatureHasDrain, Literal(-0.45015574)]), state_node: FeatureOpNextTurnDraw }
generation  18: 17.01s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorMax([OperatorAdd([Literal(0.703321), FeatureHasDrain, Literal(0.703321), Literal(-0.45015574)]), OperatorNeg(FeatureAttack), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorNeg(FeatureOpHealth) }
generation  19: 18.22s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorMax([OperatorAdd([Literal(0.703321), FeatureHasDrain, Literal(0.703321), Literal(-0.45015574)]), OperatorNeg(FeatureAttack), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorNeg(FeatureOpHealth) }
generation  20: 20.19s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), OperatorAdd([OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), OperatorAdd([Literal(-0.45015574), FeatureHasDrain, FeatureHasCharge, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), FeatureHasDrain, Literal(-0.45015574)]), FeatureHasDrain]), state_node: OperatorNeg(FeatureOpHealth) }
generation  21: 20.83s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), OperatorAdd([OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), OperatorAdd([Literal(-0.45015574), FeatureHasDrain, FeatureHasCharge, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), FeatureHasDrain, Literal(-0.45015574)]), FeatureHasDrain]), state_node: OperatorNeg(FeatureOpHealth) }
generation  22: 22.03s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), OperatorAdd([OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), OperatorAdd([Literal(-0.45015574), FeatureHasDrain, FeatureHasCharge, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), FeatureHasDrain, Literal(-0.45015574)]), FeatureHasDrain]), state_node: OperatorNeg(FeatureOpHealth) }
generation  23: 23.81s // best: TreeIndividual { card_node: OperatorAdd([OperatorAdd([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), OperatorAdd([OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), OperatorAdd([Literal(-0.45015574), FeatureHasDrain, FeatureHasCharge, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)])]), Literal(0.8058069), FeatureHasDrain, Literal(-0.45015574)]), FeatureHasDrain]), state_node: OperatorNeg(FeatureOpHealth) }
generation  24: 24.06s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureAttack, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  25: 23.98s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  26: 23.58s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  27: 25.74s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureAttack, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  28: 25.26s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  29: 25.99s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  30: 25.41s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  31: 29.00s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  32: 26.92s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  33: 32.62s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureAttack, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpMaxMana, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureOpNextTurnDraw, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  34: 44.70s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), FeatureHasDrain]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureAttack, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpHealth, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureOpNextTurnDraw, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  35: 29.16s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, OperatorMax([FeatureHasGuard, OperatorAdd([FeatureHasCharge, OperatorNeg(OperatorAdd([OperatorAdd([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureHasBreakthrough, FeatureHasGuard]), OperatorMul([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, FeatureDefense, Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureDefense, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, FeatureAttack, OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), FeatureDefense]), FeatureDefense])]), OperatorMax([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasGuard]))])])]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  36: 33.48s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, OperatorMax([FeatureHasGuard, OperatorAdd([FeatureHasCharge, OperatorNeg(OperatorAdd([OperatorAdd([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureHasBreakthrough, FeatureHasGuard]), OperatorMul([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, FeatureDefense, Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureDefense, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, FeatureAttack, OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), FeatureDefense]), FeatureDefense])]), OperatorMax([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasGuard]))])])]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeHealth, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpMaxMana]), FeatureMeHealth]) }
generation  37: 30.10s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, OperatorMax([FeatureHasGuard, OperatorAdd([FeatureHasCharge, OperatorNeg(OperatorAdd([OperatorAdd([FeatureHasGuard, OperatorMul([OperatorAdd([FeatureHasBreakthrough, FeatureHasGuard]), OperatorMul([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, FeatureDefense, Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureDefense, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, FeatureAttack, OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), FeatureDefense]), Literal(0.8058069)])]), OperatorMax([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasGuard]))])])]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureMeDecksize, FeatureOpDecksize]), FeatureMeRune, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpDecksize]), FeatureMeHealth]) }
generation  38: 32.76s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), OperatorAdd([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureMeDecksize, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpDecksize]), FeatureMeHealth]) }
generation  39: 34.90s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), OperatorAdd([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureMeDecksize, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpDecksize]), FeatureMeHealth]) }
generation  40: 44.97s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), OperatorAdd([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureMeDecksize, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpDecksize]), FeatureMeHealth]) }
generation  41: 43.18s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), OperatorAdd([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), OperatorAdd([FeatureHasDrain, OperatorNeg(FeatureAttack), FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack]), OperatorAdd([Literal(0.703321), FeatureAttack, FeatureAttack, FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain])]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574), Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([OperatorMax([FeatureOpRune, FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureMeDecksize, FeatureOpNextTurnDraw])]), FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureMeDecksize, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureMeDecksize, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpDecksize]), OperatorMin([FeatureMeDecksize, OperatorMul([OperatorMax([FeatureOpRune, FeatureOpHealth, FeatureMeDecksize]), FeatureMeDecksize, FeatureMeDecksize, FeatureOpNextTurnDraw])])]) }
generation  42: 50.13s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, OperatorMax([FeatureHasGuard, OperatorAdd([FeatureHasCharge, OperatorNeg(OperatorAdd([OperatorAdd([FeatureHasGuard, OperatorMul([FeatureHasDrain, OperatorMul([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, OperatorAdd([FeatureHasDrain, Literal(0.8058069), OperatorAdd([OperatorAdd([Literal(-0.45015574), FeatureHasDrain, FeatureHasDrain, OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack])]), FeatureHasDrain, OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, FeatureDefense, Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureHasDrain, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, FeatureAttack, OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack])]), FeatureHasDrain]), Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureDefense, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, Literal(0.703321), OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), FeatureDefense]), FeatureDefense])]), OperatorMax([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasGuard]))])])]), Literal(-0.45015574)]), state_node: OperatorMul([FeatureMeDecksize, OperatorMax([FeatureMeDecksize, FeatureOpMaxMana]), FeatureOpNextTurnDraw, FeatureMeHealth]) }
generation  43: 57.66s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, OperatorMax([FeatureHasGuard, OperatorAdd([FeatureHasCharge, OperatorNeg(OperatorAdd([OperatorAdd([FeatureHasGuard, OperatorMul([FeatureHasDrain, OperatorMul([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, OperatorAdd([FeatureHasDrain, Literal(0.8058069), OperatorAdd([OperatorAdd([Literal(-0.45015574), FeatureHasDrain, FeatureHasDrain, OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack])]), FeatureHasDrain, OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, FeatureDefense, Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureHasDrain, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, FeatureAttack, OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack])]), FeatureHasDrain]), Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureDefense, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, Literal(0.703321), OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), FeatureDefense]), FeatureDefense])]), OperatorMax([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasGuard]))])])]), Literal(-0.45015574)]), state_node: OperatorMul([FeatureMeDecksize, OperatorMax([FeatureMeDecksize, FeatureOpMaxMana]), FeatureOpNextTurnDraw, FeatureMeHealth]) }
generation  44: 65.84s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), OperatorAdd([FeatureHasDrain, FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([FeatureAttack, FeatureHasWard, FeatureAttack]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain])]), FeatureHasDrain, FeatureAttack]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorMax([OperatorMax([FeatureMeDecksize, OperatorMax([FeatureOpRune, FeatureMeDecksize, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureOpNextTurnDraw, FeatureOpNextTurnDraw])])]), FeatureOpHealth, OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpNextTurnDraw]), FeatureMeDecksize, FeatureOpNextTurnDraw])]), FeatureMeDecksize, OperatorMax([FeatureOpDecksize, FeatureOpDecksize]), FeatureMeHealth]) }
generation  45: 70.45s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, OperatorMax([FeatureHasGuard, OperatorAdd([FeatureHasCharge, OperatorNeg(OperatorAdd([OperatorAdd([FeatureHasGuard, OperatorMul([FeatureHasDrain, OperatorMul([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, OperatorAdd([FeatureHasDrain, Literal(0.8058069), OperatorAdd([FeatureHasGuard, FeatureHasDrain, OperatorMax([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack])]), FeatureHasDrain]), Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureDefense, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, Literal(0.703321), OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), FeatureDefense]), FeatureDefense])]), OperatorMax([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasGuard]))])])]), Literal(-0.45015574)]), state_node: OperatorMul([FeatureMeDecksize, OperatorMax([FeatureMeDecksize, OperatorAdd([FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureMeHealth, FeatureMeHealth])]), FeatureOpNextTurnDraw, FeatureMeHealth]) }
generation  46: 83.19s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([OperatorMax([FeatureAttack, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), FeatureHasDrain, OperatorMax([FeatureHasGuard, OperatorAdd([FeatureHasCharge, OperatorNeg(OperatorAdd([OperatorAdd([FeatureHasGuard, OperatorMul([FeatureHasDrain, OperatorMul([OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, OperatorAdd([FeatureHasDrain, Literal(0.8058069), OperatorAdd([OperatorAdd([Literal(-0.45015574), FeatureHasDrain, FeatureHasDrain, OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack])]), FeatureHasDrain, OperatorAdd([FeatureHasDrain, OperatorMul([FeatureHasDrain, FeatureDefense, Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureHasDrain, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, FeatureAttack, OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), OperatorMax([FeatureAttack, FeatureHasDrain, FeatureAttack])]), FeatureHasDrain]), Literal(-0.17177296), OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureDefense, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, Literal(0.703321), OperatorNeg(FeatureHasWard)])])]), FeatureHasBreakthrough]), FeatureDefense]), FeatureDefense])]), OperatorMax([FeatureHasCharge, OperatorNeg(FeatureHasCharge)]), FeatureHasGuard]))])])]), Literal(-0.45015574)]), state_node: OperatorMul([FeatureMeDecksize, OperatorMax([FeatureMeDecksize, FeatureOpMaxMana]), FeatureOpNextTurnDraw, FeatureMeHealth]) }
generation  47: 77.77s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorNeg(FeatureAttack), OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain])]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, FeatureHasGuard]), OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureAttack, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorAdd([OperatorAdd([FeatureMeHealth, FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureOpDecksize]), FeatureMeDecksize, FeatureOpNextTurnDraw]), FeatureMeDecksize, OperatorMax([FeatureMeMaxMana, FeatureOpMaxMana]), FeatureOpDecksize]) }
generation  48: 65.10s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([OperatorMul([FeatureHasDrain, FeatureDefense, FeatureHasDrain, OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureDefense, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, FeatureAttack, OperatorNeg(FeatureHasWard)])])]), OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), Literal(0.703321)]), OperatorNeg(FeatureAttack), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureAttack, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureMeDecksize, FeatureOpNextTurnDraw]), FeatureOpNextTurnDraw, OperatorMax([FeatureMeMaxMana, FeatureOpMaxMana]), OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureMeDecksize, FeatureMeDecksize, FeatureOpDecksize]), FeatureOpMaxMana, FeatureOpNextTurnDraw])]) }
generation  49: 58.86s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), FeatureHasDrain, OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorAdd([OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorNeg(FeatureAttack), OperatorAdd([OperatorMax([FeatureHasDrain, Literal(0.703321), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain])]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, FeatureHasGuard]), OperatorAdd([Literal(0.703321), FeatureHasDrain, FeatureAttack, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorAdd([OperatorAdd([FeatureMeHealth, FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureOpDecksize]), FeatureMeDecksize, FeatureOpNextTurnDraw]), FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureOpDecksize]) }
generation  50: 52.65s // best: TreeIndividual { card_node: OperatorAdd([Literal(0.8058069), Literal(0.703321), OperatorAdd([OperatorAdd([OperatorAdd([OperatorMax([OperatorAdd([FeatureHasDrain, FeatureHasDrain, OperatorAdd([OperatorMax([OperatorMul([FeatureHasDrain, FeatureDefense, FeatureHasDrain, OperatorMul([FeatureHasWard, FeatureHasGuard, FeatureDefense, OperatorMax([FeatureHasBreakthrough, FeatureHasLethal, FeatureAttack, OperatorNeg(FeatureHasWard)])])]), OperatorNeg(FeatureAttack), Literal(0.703321)]), FeatureHasDrain, Literal(0.703321), FeatureHasDrain]), Literal(0.703321)]), OperatorNeg(FeatureAttack), FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, FeatureHasDrain]), FeatureHasDrain, FeatureHasDrain, Literal(0.703321)]), OperatorAdd([Literal(0.703321), FeatureHasGuard, FeatureAttack, FeatureHasDrain]), FeatureHasDrain, Literal(0.703321)]), Literal(-0.45015574)]), state_node: OperatorMul([OperatorAdd([OperatorAdd([FeatureOpNextTurnDraw, FeatureOpNextTurnDraw, FeatureMeHealth, FeatureOpDecksize]), FeatureMeDecksize, FeatureOpNextTurnDraw]), FeatureOpNextTurnDraw, OperatorMax([FeatureMeMaxMana, FeatureOpMaxMana]), OperatorAdd([OperatorAdd([FeatureOpDecksize, FeatureOpMaxMana, FeatureMeDecksize, FeatureOpDecksize]), FeatureOpMaxMana, FeatureOpNextTurnDraw])]) }
------ 47.00% 43.00% 62.00% 28.00% 28.00% 33.00% 38.00% 39.00% 43.00% 43.00% 45.00% 41.00% 31.00% 26.00% 42.00% 31.00% 42.00% 41.00% 30.00% 30.00% 39.00% 34.00% 39.00% 42.00% 28.00% 38.00% 28.00% 31.00% 46.00% 32.00% 35.00% 35.00% 35.00% 34.00% 27.00% 32.00% 34.00% 28.00% 31.00% 27.00% 21.00% 28.00% 35.00% 30.00% 33.00% 27.00% 31.00% 28.00% 27.00% 34.65%
60.00% ------ 52.00% 61.00% 34.00% 34.00% 36.00% 50.00% 39.00% 45.00% 42.00% 45.00% 38.00% 40.00% 42.00% 38.00% 40.00% 43.00% 38.00% 40.00% 39.00% 40.00% 41.00% 46.00% 40.00% 38.00% 50.00% 40.00% 41.00% 46.00% 51.00% 34.00% 43.00% 52.00% 43.00% 36.00% 32.00% 51.00% 44.00% 42.00% 52.00% 35.00% 34.00% 52.00% 45.00% 43.00% 32.00% 42.00% 30.00% 38.00% 42.22%
55.00% 43.00% ------ 63.00% 31.00% 40.00% 44.00% 47.00% 44.00% 46.00% 49.00% 42.00% 42.00% 32.00% 44.00% 51.00% 39.00% 53.00% 41.00% 47.00% 43.00% 35.00% 40.00% 44.00% 49.00% 49.00% 41.00% 41.00% 43.00% 46.00% 41.00% 45.00% 45.00% 42.00% 44.00% 28.00% 40.00% 39.00% 41.00% 53.00% 45.00% 41.00% 38.00% 45.00% 40.00% 36.00% 31.00% 38.00% 41.00% 36.00% 42.71%
52.00% 50.00% 48.00% ------ 28.00% 30.00% 39.00% 43.00% 43.00% 45.00% 37.00% 44.00% 33.00% 31.00% 30.00% 43.00% 26.00% 43.00% 45.00% 30.00% 33.00% 34.00% 25.00% 32.00% 27.00% 40.00% 40.00% 33.00% 29.00% 33.00% 38.00% 38.00% 30.00% 33.00% 38.00% 23.00% 30.00% 38.00% 24.00% 35.00% 38.00% 34.00% 22.00% 41.00% 28.00% 19.00% 30.00% 35.00% 28.00% 28.00% 34.61%
78.00% 70.00% 67.00% 76.00% ------ 62.00% 60.00% 66.00% 66.00% 66.00% 70.00% 60.00% 70.00% 53.00% 49.00% 73.00% 53.00% 56.00% 71.00% 55.00% 53.00% 62.00% 55.00% 56.00% 65.00% 53.00% 57.00% 61.00% 57.00% 50.00% 53.00% 60.00% 47.00% 61.00% 49.00% 51.00% 53.00% 52.00% 59.00% 50.00% 58.00% 50.00% 47.00% 61.00% 56.00% 48.00% 53.00% 61.00% 46.00% 48.00% 58.22%
81.00% 75.00% 73.00% 82.00% 53.00% ------ 65.00% 71.00% 65.00% 68.00% 66.00% 77.00% 57.00% 48.00% 50.00% 79.00% 48.00% 69.00% 56.00% 54.00% 48.00% 44.00% 60.00% 63.00% 55.00% 53.00% 62.00% 60.00% 60.00% 53.00% 67.00% 55.00% 46.00% 62.00% 46.00% 47.00% 56.00% 51.00% 49.00% 61.00% 47.00% 56.00% 53.00% 64.00% 57.00% 48.00% 59.00% 55.00% 47.00% 46.00% 58.51%
63.00% 48.00% 51.00% 71.00% 32.00% 26.00% ------ 56.00% 53.00% 56.00% 52.00% 42.00% 49.00% 36.00% 34.00% 60.00% 41.00% 55.00% 49.00% 40.00% 35.00% 41.00% 44.00% 40.00% 44.00% 45.00% 42.00% 44.00% 44.00% 47.00% 45.00% 54.00% 38.00% 40.00% 44.00% 42.00% 40.00% 46.00% 41.00% 48.00% 43.00% 44.00% 42.00% 39.00% 35.00% 36.00% 39.00% 43.00% 42.00% 32.00% 44.35%
70.00% 63.00% 55.00% 64.00% 49.00% 43.00% 49.00% ------ 55.00% 48.00% 43.00% 52.00% 61.00% 44.00% 41.00% 59.00% 38.00% 54.00% 60.00% 46.00% 45.00% 45.00% 54.00% 51.00% 56.00% 58.00% 50.00% 51.00% 51.00% 49.00% 43.00% 52.00% 55.00% 52.00% 45.00% 49.00% 49.00% 56.00% 55.00% 56.00% 45.00% 45.00% 37.00% 44.00% 42.00% 46.00% 42.00% 45.00% 50.00% 50.00% 50.24%
64.00% 52.00% 61.00% 60.00% 43.00% 46.00% 50.00% 49.00% ------ 44.00% 52.00% 58.00% 56.00% 43.00% 44.00% 53.00% 42.00% 56.00% 54.00% 44.00% 44.00% 41.00% 50.00% 51.00% 55.00% 48.00% 42.00% 41.00% 44.00% 51.00% 58.00% 50.00% 48.00% 42.00% 44.00% 49.00% 50.00% 48.00% 48.00% 49.00% 44.00% 46.00% 49.00% 57.00% 45.00% 36.00% 40.00% 53.00% 45.00% 47.00% 48.69%
61.00% 65.00% 62.00% 69.00% 44.00% 44.00% 57.00% 50.00% 36.00% ------ 58.00% 50.00% 53.00% 53.00% 42.00% 60.00% 37.00% 57.00% 60.00% 54.00% 45.00% 48.00% 44.00% 53.00% 45.00% 49.00% 41.00% 53.00% 59.00% 48.00% 51.00% 52.00% 43.00% 61.00% 37.00% 50.00% 39.00% 51.00% 55.00% 48.00% 49.00% 39.00% 44.00% 47.00% 47.00% 48.00% 38.00% 54.00% 39.00% 38.00% 49.53%
67.00% 58.00% 61.00% 64.00% 37.00% 45.00% 62.00% 49.00% 47.00% 53.00% ------ 50.00% 50.00% 43.00% 42.00% 61.00% 51.00% 60.00% 66.00% 48.00% 51.00% 49.00% 50.00% 62.00% 59.00% 55.00% 47.00% 51.00% 53.00% 57.00% 45.00% 48.00% 39.00% 52.00% 54.00% 36.00% 41.00% 51.00% 50.00% 40.00% 51.00% 34.00% 44.00% 50.00% 45.00% 47.00% 40.00% 54.00% 47.00% 45.00% 50.22%
67.00% 58.00% 59.00% 72.00% 49.00% 34.00% 44.00% 45.00% 46.00% 60.00% 45.00% ------ 47.00% 35.00% 47.00% 51.00% 53.00% 52.00% 59.00% 45.00% 60.00% 39.00% 37.00% 52.00% 56.00% 55.00% 50.00% 48.00% 49.00% 48.00% 51.00% 49.00% 53.00% 57.00% 49.00% 37.00% 43.00% 50.00% 49.00% 48.00% 44.00% 44.00% 51.00% 59.00% 45.00% 38.00% 34.00% 43.00% 45.00% 48.00% 48.96%
67.00% 67.00% 54.00% 70.00% 45.00% 46.00% 48.00% 48.00% 53.00% 51.00% 56.00% 49.00% ------ 45.00% 41.00% 55.00% 42.00% 58.00% 51.00% 43.00% 48.00% 50.00% 43.00% 45.00% 46.00% 46.00% 34.00% 46.00% 41.00% 56.00% 47.00% 53.00% 44.00% 45.00% 42.00% 43.00% 47.00% 43.00% 49.00% 51.00% 47.00% 42.00% 40.00% 57.00% 49.00% 47.00% 41.00% 41.00% 53.00% 38.00% 48.22%
78.00% 71.00% 71.00% 77.00% 57.00% 65.00% 73.00% 71.00% 59.00% 63.00% 68.00% 64.00% 62.00% ------ 54.00% 66.00% 57.00% 57.00% 68.00% 70.00% 59.00% 58.00% 63.00% 69.00% 62.00% 63.00% 61.00% 66.00% 74.00% 63.00% 71.00% 64.00% 62.00% 60.00% 61.00% 66.00% 58.00% 69.00% 64.00% 64.00% 57.00% 64.00% 67.00% 62.00% 66.00% 61.00% 57.00% 56.00% 64.00% 51.00% 63.94%
79.00% 68.00% 68.00% 79.00% 65.00% 64.00% 76.00% 73.00% 74.00% 64.00% 74.00% 71.00% 70.00% 52.00% ------ 79.00% 68.00% 57.00% 54.00% 64.00% 62.00% 72.00% 56.00% 60.00% 65.00% 63.00% 60.00% 61.00% 59.00% 65.00% 55.00% 53.00% 70.00% 62.00% 53.00% 71.00% 61.00% 66.00% 67.00% 59.00% 61.00% 62.00% 63.00% 68.00% 62.00% 55.00% 64.00% 70.00% 60.00% 55.00% 64.47%
60.00% 62.00% 57.00% 57.00% 38.00% 34.00% 45.00% 45.00% 44.00% 50.00% 45.00% 42.00% 44.00% 42.00% 37.00% ------ 40.00% 54.00% 54.00% 48.00% 51.00% 42.00% 47.00% 35.00% 49.00% 44.00% 54.00% 45.00% 53.00% 48.00% 53.00% 47.00% 47.00% 45.00% 46.00% 49.00% 36.00% 52.00% 53.00% 39.00% 47.00% 30.00% 41.00% 45.00% 47.00% 31.00% 38.00% 40.00% 34.00% 41.00% 45.45%
78.00% 74.00% 70.00% 72.00% 66.00% 62.00% 79.00% 71.00% 67.00% 59.00% 72.00% 61.00% 66.00% 60.00% 55.00% 73.00% ------ 58.00% 57.00% 63.00% 73.00% 70.00% 67.00% 61.00% 69.00% 61.00% 68.00% 62.00% 60.00% 65.00% 67.00% 70.00% 57.00% 61.00% 62.00% 64.00% 60.00% 64.00% 59.00% 67.00% 70.00% 60.00% 66.00% 61.00% 63.00% 53.00% 57.00% 65.00% 70.00% 69.00% 64.98%
66.00% 57.00% 62.00% 64.00% 53.00% 43.00% 52.00% 43.00% 47.00% 54.00% 39.00% 55.00% 47.00% 50.00% 45.00% 51.00% 56.00% ------ 61.00% 49.00% 43.00% 60.00% 60.00% 57.00% 57.00% 50.00% 57.00% 51.00% 53.00% 48.00% 56.00% 51.00% 50.00% 53.00% 45.00% 42.00% 41.00% 45.00% 55.00% 57.00% 48.00% 45.00% 53.00% 57.00% 38.00% 46.00% 43.00% 57.00% 48.00% 46.00% 51.14%
64.00% 60.00% 63.00% 70.00% 44.00% 56.00% 53.00% 44.00% 51.00% 43.00% 36.00% 56.00% 47.00% 58.00% 48.00% 64.00% 54.00% 57.00% ------ 56.00% 60.00% 54.00% 53.00% 51.00% 53.00% 43.00% 59.00% 46.00% 52.00% 58.00% 51.00% 63.00% 53.00% 59.00% 34.00% 41.00% 45.00% 50.00% 51.00% 56.00% 47.00% 46.00% 44.00% 51.00% 50.00% 36.00% 55.00% 60.00% 45.00% 49.00% 51.82%
86.00% 71.00% 64.00% 80.00% 64.00% 67.00% 70.00% 63.00% 64.00% 56.00% 65.00% 66.00% 64.00% 53.00% 63.00% 66.00% 59.00% 65.00% 64.00% ------ 60.00% 62.00% 63.00% 68.00% 66.00% 62.00% 63.00% 59.00% 63.00% 61.00% 56.00% 57.00% 66.00% 65.00% 61.00% 54.00% 54.00% 53.00% 59.00% 62.00% 59.00% 62.00% 57.00% 65.00% 62.00% 60.00% 54.00% 60.00% 62.00% 57.00% 62.49%
73.00% 76.00% 81.00% 76.00% 64.00% 68.00% 59.00% 64.00% 63.00% 72.00% 67.00% 61.00% 70.00% 52.00% 56.00% 67.00% 61.00% 67.00% 61.00% 61.00% ------ 55.00% 48.00% 57.00% 67.00% 58.00% 62.00% 62.00% 63.00% 60.00% 61.00% 62.00% 64.00% 64.00% 62.00% 58.00% 59.00% 69.00% 64.00% 59.00% 58.00% 48.00% 55.00% 63.00% 52.00% 56.00% 58.00% 61.00% 60.00% 60.00% 62.12%
80.00% 76.00% 67.00% 81.00% 48.00% 62.00% 75.00% 70.00% 55.00% 65.00% 58.00% 64.00% 72.00% 59.00% 58.00% 74.00% 58.00% 64.00% 61.00% 64.00% 52.00% ------ 60.00% 56.00% 58.00% 67.00% 62.00% 58.00% 64.00% 62.00% 63.00% 62.00% 57.00% 71.00% 56.00% 63.00% 53.00% 62.00% 67.00% 64.00% 55.00% 66.00% 64.00% 69.00% 53.00% 52.00% 52.00% 62.00% 49.00% 57.00% 62.18%
74.00% 77.00% 69.00% 73.00% 62.00% 66.00% 77.00% 62.00% 58.00% 62.00% 63.00% 61.00% 60.00% 58.00% 54.00% 67.00% 57.00% 60.00% 51.00% 60.00% 62.00% 53.00% ------ 59.00% 62.00% 57.00% 58.00% 60.00% 57.00% 61.00% 58.00% 62.00% 74.00% 59.00% 63.00% 61.00% 54.00% 68.00% 58.00% 53.00% 58.00% 65.00% 57.00% 51.00% 60.00% 66.00% 58.00% 67.00% 61.00% 58.00% 61.45%
71.00% 61.00% 71.00% 67.00% 65.00% 62.00% 65.00% 59.00% 59.00% 52.00% 56.00% 61.00% 59.00% 53.00% 44.00% 66.00% 52.00% 53.00% 60.00% 56.00% 51.00% 50.00% 54.00% ------ 57.00% 53.00% 63.00% 58.00% 66.00% 58.00% 57.00% 63.00% 60.00% 58.00% 58.00% 49.00% 47.00% 60.00% 52.00% 60.00% 60.00% 58.00% 54.00% 59.00% 53.00% 42.00% 52.00% 59.00% 54.00% 57.00% 57.43%
80.00% 66.00% 70.00% 82.00% 54.00% 57.00% 68.00% 63.00% 66.00% 56.00% 58.00% 67.00% 59.00% 51.00% 55.00% 59.00% 53.00% 52.00% 52.00% 58.00% 52.00% 49.00% 56.00% 62.00% ------ 54.00% 55.00% 59.00% 53.00% 61.00% 56.00% 70.00% 57.00% 63.00% 50.00% 50.00% 59.00% 54.00% 59.00% 59.00% 61.00% 55.00% 56.00% 51.00% 67.00% 60.00% 50.00% 62.00% 53.00% 59.00% 58.73%
82.00% 69.00% 64.00% 82.00% 60.00% 54.00% 64.00% 56.00% 61.00% 57.00% 59.00% 64.00% 62.00% 53.00% 57.00% 65.00% 52.00% 47.00% 59.00% 63.00% 57.00% 50.00% 55.00% 57.00% 60.00% ------ 52.00% 65.00% 47.00% 53.00% 55.00% 55.00% 57.00% 54.00% 57.00% 56.00% 59.00% 56.00% 60.00% 64.00% 60.00% 44.00% 58.00% 65.00% 58.00% 57.00% 50.00% 58.00% 47.00% 49.00% 58.06%
80.00% 64.00% 75.00% 74.00% 68.00% 60.00% 62.00% 64.00% 63.00% 58.00% 63.00% 67.00% 53.00% 46.00% 55.00% 68.00% 55.00% 61.00% 65.00% 57.00% 46.00% 53.00% 53.00% 52.00% 65.00% 65.00% ------ 46.00% 70.00% 68.00% 56.00% 65.00% 58.00% 59.00% 53.00% 59.00% 54.00% 66.00% 62.00% 64.00% 48.00% 68.00% 53.00% 68.00% 53.00% 69.00% 47.00% 60.00% 66.00% 64.00% 60.57%
71.00% 61.00% 70.00% 68.00% 62.00% 58.00% 60.00% 64.00% 59.00% 68.00% 58.00% 57.00% 63.00% 59.00% 51.00% 60.00% 63.00% 52.00% 56.00% 50.00% 57.00% 61.00% 62.00% 49.00% 64.00% 49.00% 60.00% ------ 51.00% 63.00% 51.00% 56.00% 59.00% 67.00% 61.00% 54.00% 53.00% 55.00% 55.00% 55.00% 64.00% 47.00% 51.00% 54.00% 47.00% 61.00% 60.00% 49.00% 57.00% 62.00% 58.04%
72.00% 68.00% 72.00% 73.00% 54.00% 47.00% 68.00% 63.00% 55.00% 62.00% 53.00% 61.00% 64.00% 46.00% 53.00% 62.00% 48.00% 60.00% 64.00% 48.00% 62.00% 56.00% 48.00% 58.00% 55.00% 57.00% 47.00% 60.00% ------ 62.00% 58.00% 52.00% 58.00% 53.00% 53.00% 53.00% 56.00% 58.00% 62.00% 57.00% 56.00% 53.00% 52.00% 63.00% 49.00% 56.00% 53.00% 56.00% 56.00% 59.00% 57.37%
69.00% 67.00% 62.00% 74.00% 51.00% 53.00% 71.00% 66.00% 57.00% 59.00% 60.00% 64.00% 69.00% 50.00% 46.00% 61.00% 42.00% 47.00% 56.00% 48.00% 57.00% 54.00% 64.00% 58.00% 80.00% 52.00% 55.00% 66.00% 47.00% ------ 61.00% 54.00% 55.00% 56.00% 57.00% 58.00% 53.00% 47.00% 51.00% 56.00% 58.00% 59.00% 54.00% 53.00% 67.00% 48.00% 49.00% 62.00% 50.00% 60.00% 57.41%
76.00% 66.00% 65.00% 72.00% 58.00% 56.00% 64.00% 59.00% 56.00% 56.00% 62.00% 66.00% 57.00% 53.00% 60.00% 60.00% 57.00% 52.00% 55.00% 62.00% 47.00% 54.00% 56.00% 64.00% 59.00% 64.00% 52.00% 60.00% 56.00% 59.00% ------ 61.00% 46.00% 61.00% 50.00% 53.00% 60.00% 56.00% 54.00% 50.00% 56.00% 53.00% 48.00% 63.00% 63.00% 48.00% 55.00% 59.00% 53.00% 54.00% 57.67%
80.00% 68.00% 62.00% 73.00% 55.00% 63.00% 71.00% 59.00% 66.00% 60.00% 64.00% 53.00% 56.00% 56.00% 59.00% 64.00% 53.00% 55.00% 57.00% 48.00% 48.00% 55.00% 57.00% 61.00% 58.00% 57.00% 56.00% 55.00% 58.00% 50.00% 52.00% ------ 60.00% 55.00% 57.00% 53.00% 61.00% 60.00% 54.00% 54.00% 49.00% 53.00% 56.00% 50.00% 51.00% 58.00% 67.00% 62.00% 55.00% 53.00% 57.90%
82.00% 74.00% 67.00% 78.00% 56.00% 54.00% 72.00% 66.00% 61.00% 64.00% 66.00% 69.00% 59.00% 46.00% 60.00% 71.00% 59.00% 54.00% 55.00% 64.00% 50.00% 48.00% 47.00% 64.00% 50.00% 58.00% 62.00% 54.00% 50.00% 68.00% 58.00% 53.00% ------ 60.00% 54.00% 57.00% 60.00% 65.00% 69.00% 54.00% 57.00% 58.00% 58.00% 67.00% 58.00% 58.00% 61.00% 54.00% 52.00% 56.00% 59.94%
68.00% 67.00% 67.00% 76.00% 57.00% 58.00% 66.00% 65.00% 59.00% 70.00% 59.00% 58.00% 62.00% 50.00% 48.00% 61.00% 47.00% 49.00% 52.00% 59.00% 50.00% 58.00% 49.00% 55.00% 46.00% 60.00% 50.00% 56.00% 61.00% 50.00% 46.00% 60.00% 52.00% ------ 61.00% 49.00% 42.00% 44.00% 55.00% 62.00% 57.00% 60.00% 50.00% 61.00% 47.00% 60.00% 58.00% 44.00% 47.00% 53.00% 55.94%
76.00% 83.00% 78.00% 82.00% 60.00% 63.00% 70.00% 68.00% 69.00% 63.00% 64.00% 65.00% 71.00% 56.00% 62.00% 74.00% 57.00% 73.00% 59.00% 55.00% 59.00% 57.00% 59.00% 62.00% 66.00% 58.00% 56.00% 70.00% 64.00% 62.00% 63.00% 64.00% 57.00% 63.00% ------ 57.00% 63.00% 61.00% 59.00% 54.00% 52.00% 60.00% 53.00% 65.00% 59.00% 55.00% 63.00% 56.00% 54.00% 61.00% 62.86%
76.00% 76.00% 69.00% 83.00% 69.00% 67.00% 76.00% 71.00% 65.00% 69.00% 67.00% 66.00% 72.00% 61.00% 53.00% 71.00% 64.00% 69.00% 66.00% 60.00% 61.00% 61.00% 57.00% 54.00% 56.00% 67.00% 67.00% 60.00% 68.00% 66.00% 61.00% 64.00% 59.00% 71.00% 54.00% ------ 66.00% 60.00% 63.00% 63.00% 51.00% 58.00% 58.00% 61.00% 73.00% 56.00% 64.00% 60.00% 62.00% 67.00% 64.45%
76.00% 68.00% 71.00% 80.00% 62.00% 59.00% 71.00% 63.00% 58.00% 71.00% 69.00% 67.00% 68.00% 51.00% 58.00% 68.00% 55.00% 57.00% 66.00% 57.00% 62.00% 62.00% 58.00% 68.00% 65.00% 61.00% 59.00% 61.00% 60.00% 56.00% 57.00% 61.00% 57.00% 72.00% 60.00% 55.00% ------ 55.00% 58.00% 62.00% 53.00% 58.00% 67.00% 74.00% 57.00% 64.00% 58.00% 49.00% 57.00% 55.00% 61.96%
73.00% 65.00% 65.00% 74.00% 59.00% 60.00% 65.00% 59.00% 47.00% 65.00% 56.00% 62.00% 66.00% 52.00% 51.00% 53.00% 45.00% 63.00% 54.00% 52.00% 48.00% 47.00% 55.00% 44.00% 62.00% 60.00% 48.00% 57.00% 52.00% 58.00% 59.00% 55.00% 50.00% 50.00% 51.00% 55.00% 54.00% ------ 55.00% 59.00% 48.00% 56.00% 56.00% 66.00% 42.00% 55.00% 55.00% 52.00% 61.00% 55.00% 56.14%
74.00% 67.00% 62.00% 71.00% 68.00% 51.00% 64.00% 62.00% 65.00% 68.00% 64.00% 63.00% 60.00% 54.00% 53.00% 64.00% 58.00% 64.00% 57.00% 50.00% 52.00% 56.00% 53.00% 59.00% 57.00% 55.00% 53.00% 55.00% 64.00% 53.00% 53.00% 59.00% 58.00% 60.00% 59.00% 51.00% 48.00% 54.00% ------ 61.00% 58.00% 50.00% 53.00% 58.00% 53.00% 62.00% 50.00% 57.00% 47.00% 62.00% 58.14%
75.00% 62.00% 72.00% 70.00% 58.00% 47.00% 70.00% 59.00% 64.00% 67.00% 56.00% 57.00% 63.00% 50.00% 53.00% 66.00% 53.00% 59.00% 69.00% 56.00% 57.00% 50.00% 46.00% 58.00% 49.00% 52.00% 58.00% 53.00% 57.00% 54.00% 66.00% 55.00% 50.00% 68.00% 56.00% 63.00% 46.00% 62.00% 66.00% ------ 65.00% 49.00% 56.00% 59.00% 56.00% 55.00% 56.00% 58.00% 59.00% 51.00% 58.29%
74.00% 74.00% 68.00% 82.00% 63.00% 61.00% 68.00% 67.00% 60.00% 61.00% 62.00% 60.00% 60.00% 56.00% 54.00% 59.00% 48.00% 60.00% 60.00% 52.00% 61.00% 58.00% 59.00% 52.00% 64.00% 56.00% 44.00% 57.00% 64.00% 56.00% 57.00% 63.00% 49.00% 65.00% 64.00% 55.00% 51.00% 58.00% 56.00% 61.00% ------ 57.00% 58.00% 64.00% 52.00% 58.00% 54.00% 63.00% 50.00% 60.00% 59.49%
88.00% 72.00% 74.00% 79.00% 71.00% 67.00% 75.00% 67.00% 72.00% 77.00% 67.00% 72.00% 70.00% 51.00% 45.00% 72.00% 54.00% 54.00% 64.00% 56.00% 64.00% 59.00% 53.00% 64.00% 69.00% 62.00% 58.00% 67.00% 68.00% 69.00% 58.00% 60.00% 67.00% 68.00% 53.00% 62.00% 64.00% 67.00% 55.00% 68.00% 61.00% ------ 55.00% 68.00% 53.00% 55.00% 57.00% 59.00% 55.00% 58.00% 63.73%
81.00% 72.00% 73.00% 76.00% 65.00% 57.00% 80.00% 70.00% 59.00% 69.00% 74.00% 76.00% 72.00% 53.00% 56.00% 74.00% 56.00% 63.00% 58.00% 51.00% 70.00% 65.00% 61.00% 59.00% 60.00% 61.00% 61.00% 57.00% 59.00% 62.00% 67.00% 66.00% 63.00% 59.00% 56.00% 64.00% 61.00% 69.00% 65.00% 66.00% 67.00% 62.00% ------ 68.00% 76.00% 61.00% 66.00% 61.00% 64.00% 64.00% 64.80%
74.00% 61.00% 66.00% 72.00% 56.00% 44.00% 61.00% 57.00% 64.00% 58.00% 53.00% 56.00% 62.00% 52.00% 51.00% 63.00% 45.00% 53.00% 44.00% 61.00% 51.00% 58.00% 48.00% 65.00% 54.00% 47.00% 62.00% 59.00% 61.00% 54.00% 65.00% 55.00% 60.00% 58.00% 59.00% 49.00% 57.00% 56.00% 52.00% 61.00% 56.00% 54.00% 60.00% ------ 49.00% 52.00% 48.00% 58.00% 51.00% 55.00% 56.47%
76.00% 73.00% 76.00% 84.00% 64.00% 59.00% 69.00% 67.00% 73.00% 72.00% 68.00% 67.00% 71.00% 57.00% 47.00% 74.00% 61.00% 74.00% 71.00% 61.00% 60.00% 52.00% 62.00% 57.00% 52.00% 55.00% 67.00% 66.00% 65.00% 62.00% 60.00% 66.00% 65.00% 65.00% 61.00% 65.00% 63.00% 70.00% 69.00% 50.00% 56.00% 60.00% 49.00% 65.00% ------ 57.00% 53.00% 61.00% 56.00% 55.00% 63.43%
76.00% 81.00% 80.00% 84.00% 65.00% 66.00% 76.00% 65.00% 68.00% 60.00% 64.00% 61.00% 68.00% 61.00% 58.00% 69.00% 59.00% 63.00% 67.00% 64.00% 60.00% 65.00% 61.00% 59.00% 66.00% 52.00% 65.00% 60.00% 58.00% 62.00% 70.00% 63.00% 68.00% 74.00% 62.00% 66.00% 65.00% 62.00% 70.00% 59.00% 62.00% 62.00% 60.00% 62.00% 68.00% ------ 50.00% 56.00% 63.00% 69.00% 64.78%
87.00% 74.00% 69.00% 84.00% 60.00% 63.00% 76.00% 70.00% 69.00% 66.00% 69.00% 72.00% 63.00% 56.00% 52.00% 69.00% 57.00% 67.00% 70.00% 60.00% 56.00% 57.00% 53.00% 48.00% 57.00% 70.00% 67.00% 61.00% 63.00% 62.00% 71.00% 65.00% 54.00% 57.00% 59.00% 53.00% 62.00% 73.00% 58.00% 68.00% 65.00% 60.00% 67.00% 61.00% 61.00% 60.00% ------ 68.00% 58.00% 57.00% 63.76%
83.00% 71.00% 58.00% 78.00% 57.00% 50.00% 67.00% 62.00% 61.00% 73.00% 58.00% 66.00% 73.00% 57.00% 58.00% 68.00% 50.00% 56.00% 71.00% 58.00% 58.00% 56.00% 59.00% 60.00% 64.00% 61.00% 59.00% 61.00% 63.00% 58.00% 59.00% 59.00% 50.00% 64.00% 57.00% 56.00% 61.00% 58.00% 52.00% 61.00% 57.00% 54.00% 46.00% 69.00% 59.00% 52.00% 51.00% ------ 60.00% 48.00% 60.14%
82.00% 78.00% 77.00% 84.00% 69.00% 66.00% 76.00% 66.00% 61.00% 68.00% 69.00% 74.00% 72.00% 55.00% 57.00% 75.00% 49.00% 65.00% 69.00% 56.00% 62.00% 55.00% 63.00% 63.00% 65.00% 61.00% 63.00% 62.00% 68.00% 65.00% 67.00% 68.00% 64.00% 68.00% 56.00% 61.00% 67.00% 63.00% 60.00% 64.00% 66.00% 50.00% 48.00% 59.00% 59.00% 58.00% 65.00% 60.00% ------ 58.00% 64.41%
90.00% 72.00% 77.00% 83.00% 69.00% 65.00% 67.00% 72.00% 67.00% 74.00% 69.00% 62.00% 74.00% 59.00% 59.00% 68.00% 57.00% 65.00% 59.00% 62.00% 58.00% 58.00% 60.00% 60.00% 66.00% 61.00% 61.00% 67.00% 64.00% 64.00% 65.00% 66.00% 67.00% 67.00% 58.00% 63.00% 64.00% 73.00% 67.00% 69.00% 59.00% 57.00% 59.00% 66.00% 63.00% 55.00% 59.00% 61.00% 50.00% ------ 64.84%
